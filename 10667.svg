<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1270" onload="init(evt)" viewBox="0 0 1200 1270" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1270.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1253" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1253" > </text>
<g id="frames">
<g >
<title>Matcher::match() (5 samples, 3.50%)</title><rect x="199.8" y="1045" width="41.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="202.79" y="1055.5" >Mat..</text>
</g>
<g >
<title>Ljdk/internal/reflect/ClassFileAssembler (1 samples, 0.70%)</title><rect x="818.7" y="1189" width="8.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="821.67" y="1199.5" ></text>
</g>
<g >
<title>IR::compute_use_counts() (1 samples, 0.70%)</title><rect x="117.3" y="1013" width="8.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="120.27" y="1023.5" ></text>
</g>
<g >
<title>::read (1 samples, 0.70%)</title><rect x="1066.2" y="1173" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1069.22" y="1183.5" ></text>
</g>
<g >
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (64 samples, 44.76%)</title><rect x="166.8" y="1077" width="528.1" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="169.78" y="1087.5" >Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, ..</text>
</g>
<g >
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="997" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="1007.5" ></text>
</g>
<g >
<title>__GI_epoll_wait (1 samples, 0.70%)</title><rect x="802.2" y="1125" width="8.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="805.17" y="1135.5" ></text>
</g>
<g >
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="1165.2" y="661" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1168.24" y="671.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="901" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="911.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="533" width="24.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="543.5" >L..</text>
</g>
<g >
<title>Parse::do_one_block() (2 samples, 1.40%)</title><rect x="661.9" y="629" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="639.5" ></text>
</g>
<g >
<title>::read0 (1 samples, 0.70%)</title><rect x="1066.2" y="1141" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1069.22" y="1151.5" ></text>
</g>
<g >
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.70%)</title><rect x="406.1" y="1013" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="409.08" y="1023.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.70%)</title><rect x="950.7" y="1045" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="953.70" y="1055.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.70%)</title><rect x="950.7" y="789" width="8.3" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="953.70" y="799.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (3 samples, 2.10%)</title><rect x="909.4" y="725" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="735.5" >I..</text>
</g>
<g >
<title>TypeNode::ideal_reg() const (1 samples, 0.70%)</title><rect x="472.1" y="1029" width="8.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="475.10" y="1039.5" ></text>
</g>
<g >
<title>Symbol::decrement_refcount() (1 samples, 0.70%)</title><rect x="694.9" y="1077" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="697.90" y="1087.5" ></text>
</g>
<g >
<title>Node::out_grow(unsigned int) (1 samples, 0.70%)</title><rect x="232.8" y="997" width="8.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="235.80" y="1007.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SocketDispatcher (1 samples, 0.70%)</title><rect x="950.7" y="1157" width="8.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="953.70" y="1167.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.70%)</title><rect x="670.1" y="469" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="479.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="785.7" y="1109" width="8.2" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="788.66" y="1119.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 2.10%)</title><rect x="84.3" y="869" width="24.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="87.27" y="879.5" >G..</text>
</g>
<g >
<title>br_dev_xmit (1 samples, 0.70%)</title><rect x="950.7" y="405" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="415.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/GeneratedMethodAccessor148 (1 samples, 0.70%)</title><rect x="835.2" y="1173" width="8.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="838.17" y="1183.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.70%)</title><rect x="744.4" y="853" width="8.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="747.41" y="863.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="851.7" y="949" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="854.68" y="959.5" ></text>
</g>
<g >
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (7 samples, 4.90%)</title><rect x="348.3" y="1013" width="57.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="351.32" y="1023.5" >PhaseC..</text>
</g>
<g >
<title>LIRGenerator::arithmetic_op(Bytecodes::Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, bool, LIR_OprDesc*, CodeEmitInfo*) [clone .constprop.262] (1 samples, 0.70%)</title><rect x="142.0" y="949" width="8.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="145.03" y="959.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.70%)</title><rect x="686.6" y="901" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="911.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (8 samples, 5.59%)</title><rect x="843.4" y="1173" width="66.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="846.43" y="1183.5" >Ljdk/in..</text>
</g>
<g >
<title>::getBooleanAttributes0 (1 samples, 0.70%)</title><rect x="826.9" y="1125" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="829.92" y="1135.5" ></text>
</g>
<g >
<title>::getClassDataLayout0 (1 samples, 0.70%)</title><rect x="868.2" y="709" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="871.18" y="719.5" ></text>
</g>
<g >
<title>PhaseChaitin::gather_lrg_masks(bool) (3 samples, 2.10%)</title><rect x="307.1" y="1029" width="24.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="310.06" y="1039.5" >P..</text>
</g>
<g >
<title>MHN_resolve_Mem (1 samples, 0.70%)</title><rect x="909.4" y="309" width="8.3" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="912.44" y="319.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (8 samples, 5.59%)</title><rect x="843.4" y="1141" width="66.0" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="846.43" y="1151.5" >Ljdk/in..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1061" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1071.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (2 samples, 1.40%)</title><rect x="612.4" y="1029" width="16.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="615.38" y="1039.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.70%)</title><rect x="686.6" y="693" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="703.5" ></text>
</g>
<g >
<title>br_pass_frame_up (1 samples, 0.70%)</title><rect x="950.7" y="469" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="479.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="853" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="863.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="959.0" y="1077" width="8.2" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="961.95" y="1087.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1141" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1151.5" ></text>
</g>
<g >
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.70%)</title><rect x="59.5" y="901" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="62.51" y="911.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="805" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="815.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.70%)</title><rect x="26.5" y="1029" width="8.3" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="29.50" y="1039.5" ></text>
</g>
<g >
<title>ClassVerifier::verify_method(methodHandle const&amp;, Thread*) (1 samples, 0.70%)</title><rect x="925.9" y="309" width="8.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="928.94" y="319.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (3 samples, 2.10%)</title><rect x="909.4" y="869" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="879.5" >I..</text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="1077" width="8.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="937.20" y="1087.5" ></text>
</g>
<g >
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.256] (1 samples, 0.70%)</title><rect x="868.2" y="645" width="8.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="871.18" y="655.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="686.6" y="645" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="655.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (11 samples, 7.69%)</title><rect x="496.9" y="1045" width="90.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="499.85" y="1055.5" >PhaseIdeal..</text>
</g>
<g >
<title>CodeBlob::is_adapter_blob() const (1 samples, 0.70%)</title><rect x="934.2" y="53" width="8.2" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="937.20" y="63.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (1 samples, 0.70%)</title><rect x="950.7" y="533" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="543.5" ></text>
</g>
<g >
<title>Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="1077" width="24.8" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="912.44" y="1087.5" >R..</text>
</g>
<g >
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="133" width="8.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="937.20" y="143.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="405" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="415.5" ></text>
</g>
<g >
<title>CompiledMethod::cleanup_inline_caches(bool) (1 samples, 0.70%)</title><rect x="752.7" y="1061" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="755.66" y="1071.5" ></text>
</g>
<g >
<title>tcp_v4_early_demux (1 samples, 0.70%)</title><rect x="1016.7" y="981" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1019.71" y="991.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.70%)</title><rect x="686.6" y="885" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="895.5" ></text>
</g>
<g >
<title>PhasePeephole::do_transform() (1 samples, 0.70%)</title><rect x="480.3" y="1045" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="483.35" y="1055.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.70%)</title><rect x="744.4" y="405" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="415.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="1125" width="8.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="937.20" y="1135.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="949" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="959.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/core/json/ReaderBasedJsonParser (1 samples, 0.70%)</title><rect x="892.9" y="949" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="895.94" y="959.5" ></text>
</g>
<g >
<title>__GI_epoll_wait (1 samples, 0.70%)</title><rect x="736.2" y="901" width="8.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="739.15" y="911.5" ></text>
</g>
<g >
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.70%)</title><rect x="100.8" y="837" width="8.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="103.77" y="847.5" ></text>
</g>
<g >
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.70%)</title><rect x="604.1" y="997" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="607.13" y="1007.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 1.40%)</title><rect x="571.1" y="997" width="16.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="574.12" y="1007.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.70%)</title><rect x="744.4" y="613" width="8.3" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="747.41" y="623.5" ></text>
</g>
<g >
<title>::complete (1 samples, 0.70%)</title><rect x="942.4" y="1173" width="8.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="945.45" y="1183.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.40%)</title><rect x="661.9" y="773" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="783.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.70%)</title><rect x="744.4" y="469" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="479.5" ></text>
</g>
<g >
<title>__libc_write (1 samples, 0.70%)</title><rect x="744.4" y="933" width="8.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="747.41" y="943.5" ></text>
</g>
<g >
<title>::invoke0 (3 samples, 2.10%)</title><rect x="909.4" y="1109" width="24.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="912.44" y="1119.5" >:..</text>
</g>
<g >
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.70%)</title><rect x="637.1" y="1045" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="640.13" y="1055.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.70%)</title><rect x="802.2" y="1061" width="8.2" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="805.17" y="1071.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="744.4" y="917" width="8.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="747.41" y="927.5" ></text>
</g>
<g >
<title>call_stub (3 samples, 2.10%)</title><rect x="1165.2" y="1061" width="24.8" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1168.24" y="1071.5" >c..</text>
</g>
<g >
<title>kafka-coordinat (4 samples, 2.80%)</title><rect x="942.4" y="1205" width="33.1" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="945.45" y="1215.5" >ka..</text>
</g>
<g >
<title>Parse::do_all_blocks() (4 samples, 2.80%)</title><rect x="653.6" y="837" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="847.5" >Pa..</text>
</g>
<g >
<title>__x2apic_send_IPI_mask (1 samples, 0.70%)</title><rect x="26.5" y="933" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="29.50" y="943.5" ></text>
</g>
<g >
<title>read (1 samples, 0.70%)</title><rect x="1066.2" y="1125" width="8.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1069.22" y="1135.5" ></text>
</g>
<g >
<title>Ljava/util/HashMap (1 samples, 0.70%)</title><rect x="1132.2" y="1189" width="8.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1135.24" y="1199.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.70%)</title><rect x="934.2" y="1189" width="8.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="937.20" y="1199.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.70%)</title><rect x="562.9" y="981" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="565.87" y="991.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.70%)</title><rect x="26.5" y="1077" width="8.3" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="29.50" y="1087.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="843.4" y="933" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="846.43" y="943.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.70%)</title><rect x="703.1" y="917" width="8.3" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="706.15" y="927.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (1 samples, 0.70%)</title><rect x="133.8" y="949" width="8.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="136.78" y="959.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (4 samples, 2.80%)</title><rect x="653.6" y="917" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="927.5" >Pa..</text>
</g>
<g >
<title>br_forward_finish (1 samples, 0.70%)</title><rect x="744.4" y="261" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="271.5" ></text>
</g>
<g >
<title>TypeNode::bottom_type() const (1 samples, 0.70%)</title><rect x="554.6" y="965" width="8.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="557.62" y="975.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.70%)</title><rect x="950.7" y="1029" width="8.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="953.70" y="1039.5" ></text>
</g>
<g >
<title>CompileQueue::get() (1 samples, 0.70%)</title><rect x="703.1" y="1109" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="706.15" y="1119.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (1 samples, 0.70%)</title><rect x="793.9" y="1141" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="796.92" y="1151.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="885" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="895.5" ></text>
</g>
<g >
<title>resolve_opt_virtual_call (1 samples, 0.70%)</title><rect x="934.2" y="165" width="8.2" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="937.20" y="175.5" ></text>
</g>
<g >
<title>Assembler::movq(Address, RegisterImpl*) (1 samples, 0.70%)</title><rect x="183.3" y="981" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="186.29" y="991.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.70%)</title><rect x="769.2" y="741" width="8.2" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="772.16" y="751.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="983.7" y="1157" width="8.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="986.71" y="1167.5" ></text>
</g>
<g >
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.70%)</title><rect x="760.9" y="1109" width="8.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="763.91" y="1119.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="1107.5" y="1077" width="8.2" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1110.48" y="1087.5" ></text>
</g>
<g >
<title>::invoke (1 samples, 0.70%)</title><rect x="868.2" y="757" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="871.18" y="767.5" ></text>
</g>
<g >
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.70%)</title><rect x="571.1" y="981" width="8.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="574.12" y="991.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.70%)</title><rect x="686.6" y="805" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="815.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="719.7" y="885" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="722.65" y="895.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="965" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="975.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.70%)</title><rect x="703.1" y="997" width="8.3" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="706.15" y="1007.5" ></text>
</g>
<g >
<title>::defineAnonymousClass0 (1 samples, 0.70%)</title><rect x="925.9" y="405" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="928.94" y="415.5" ></text>
</g>
<g >
<title>LIRGenerator::arithmetic_op_int(Bytecodes::Code, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*, LIR_OprDesc*) (1 samples, 0.70%)</title><rect x="142.0" y="965" width="8.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="145.03" y="975.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 3.50%)</title><rect x="711.4" y="1077" width="41.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="714.40" y="1087.5" >Jav..</text>
</g>
<g >
<title>sys_futex (1 samples, 0.70%)</title><rect x="703.1" y="1013" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="706.15" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="703.1" y="1029" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="706.15" y="1039.5" ></text>
</g>
<g >
<title>Lorg/apache/http/impl/nio/reactor/AbstractIODispatch (2 samples, 1.40%)</title><rect x="719.7" y="965" width="16.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="722.65" y="975.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.40%)</title><rect x="1148.7" y="1189" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1151.74" y="1199.5" ></text>
</g>
<g >
<title>Java_java_io_UnixFileSystem_getBooleanAttributes0 (1 samples, 0.70%)</title><rect x="826.9" y="1109" width="8.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="829.92" y="1119.5" ></text>
</g>
<g >
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.70%)</title><rect x="232.8" y="1013" width="8.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="235.80" y="1023.5" ></text>
</g>
<g >
<title>read (1 samples, 0.70%)</title><rect x="1107.5" y="1109" width="8.2" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="1110.48" y="1119.5" ></text>
</g>
<g >
<title>::update (1 samples, 0.70%)</title><rect x="967.2" y="1157" width="8.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="970.20" y="1167.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (3 samples, 2.10%)</title><rect x="1165.2" y="1125" width="24.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1168.24" y="1135.5" >t..</text>
</g>
<g >
<title>pool-2-thread-1 (7 samples, 4.90%)</title><rect x="1132.2" y="1205" width="57.8" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1135.24" y="1215.5" >pool-2..</text>
</g>
<g >
<title>::isClassAccessible (1 samples, 0.70%)</title><rect x="917.7" y="325" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="920.69" y="335.5" ></text>
</g>
<g >
<title>MemNode::adr_type() const (1 samples, 0.70%)</title><rect x="571.1" y="965" width="8.3" height="15.0" fill="rgb(213,213,63)" rx="2" ry="2" />
<text  x="574.12" y="975.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/GeneratedMethodAccessor154 (1 samples, 0.70%)</title><rect x="868.2" y="773" width="8.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="871.18" y="783.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 2.10%)</title><rect x="587.6" y="1029" width="24.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="590.62" y="1039.5" >P..</text>
</g>
<g >
<title>nf_iterate (1 samples, 0.70%)</title><rect x="744.4" y="133" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="143.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.70%)</title><rect x="1107.5" y="1029" width="8.2" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1110.48" y="1039.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 1.40%)</title><rect x="769.2" y="821" width="16.5" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="772.16" y="831.5" ></text>
</g>
<g >
<title>SystemDictionary::parse_stream(Symbol*, Handle, Handle, ClassFileStream*, InstanceKlass const*, GrowableArray&lt;Handle&gt;*, Thread*) (1 samples, 0.70%)</title><rect x="925.9" y="373" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="928.94" y="383.5" ></text>
</g>
<g >
<title>ciMethod::get_flow_analysis() (1 samples, 0.70%)</title><rect x="653.6" y="741" width="8.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="656.64" y="751.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.70%)</title><rect x="1107.5" y="1045" width="8.2" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1110.48" y="1055.5" ></text>
</g>
<g >
<title>::read0 (1 samples, 0.70%)</title><rect x="1107.5" y="1125" width="8.2" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1110.48" y="1135.5" ></text>
</g>
<g >
<title>::forEach (2 samples, 1.40%)</title><rect x="892.9" y="997" width="16.5" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="895.94" y="1007.5" ></text>
</g>
<g >
<title>sock_alloc_file (1 samples, 0.70%)</title><rect x="983.7" y="1093" width="8.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="986.71" y="1103.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/SerializerProvider (1 samples, 0.70%)</title><rect x="1181.7" y="949" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1184.75" y="959.5" ></text>
</g>
<g >
<title>Compile::Output() (3 samples, 2.10%)</title><rect x="166.8" y="1045" width="24.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="169.78" y="1055.5" >C..</text>
</g>
<g >
<title>Parse::do_call() (3 samples, 2.10%)</title><rect x="653.6" y="789" width="24.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="799.5" >P..</text>
</g>
<g >
<title>::invoke0 (1 samples, 0.70%)</title><rect x="1157.0" y="1125" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1159.99" y="1135.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.70%)</title><rect x="1016.7" y="1029" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1019.71" y="1039.5" ></text>
</g>
<g >
<title>CompiledIC::internal_set_ic_destination(unsigned char*, bool, void*, bool) [clone .constprop.44] (1 samples, 0.70%)</title><rect x="934.2" y="69" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="937.20" y="79.5" ></text>
</g>
<g >
<title>::getClassAccessFlags (1 samples, 0.70%)</title><rect x="917.7" y="293" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="920.69" y="303.5" ></text>
</g>
<g >
<title>::select (1 samples, 0.70%)</title><rect x="736.2" y="981" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="739.15" y="991.5" ></text>
</g>
<g >
<title>Assembler::cmpq(Address, int) (1 samples, 0.70%)</title><rect x="133.8" y="933" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="136.78" y="943.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 2.10%)</title><rect x="84.3" y="885" width="24.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="87.27" y="895.5" >G..</text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.70%)</title><rect x="1181.7" y="741" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1184.75" y="751.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="727.9" y="853" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="730.90" y="863.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="437" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="447.5" ></text>
</g>
<g >
<title>::lockAndDoSelect (1 samples, 0.70%)</title><rect x="802.2" y="1173" width="8.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="805.17" y="1183.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="744.4" y="373" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="383.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.70%)</title><rect x="802.2" y="981" width="8.2" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="805.17" y="991.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.357] (4 samples, 2.80%)</title><rect x="76.0" y="917" width="33.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="79.01" y="927.5" >Gr..</text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="744.4" y="517" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="527.5" ></text>
</g>
<g >
<title>Compile::Optimize() (18 samples, 12.59%)</title><rect x="496.9" y="1061" width="148.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="499.85" y="1071.5" >Compile::Optimize()</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.40%)</title><rect x="661.9" y="565" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="575.5" ></text>
</g>
<g >
<title>::getHeaders (1 samples, 0.70%)</title><rect x="727.9" y="805" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="730.90" y="815.5" ></text>
</g>
<g >
<title>ciTypeFlow::get_block_for(int, ciTypeFlow::JsrSet*, ciTypeFlow::CreateOption) (1 samples, 0.70%)</title><rect x="653.6" y="645" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="656.64" y="655.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe (1 samples, 0.70%)</title><rect x="925.9" y="421" width="8.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="928.94" y="431.5" ></text>
</g>
<g >
<title>::findReferenceType (1 samples, 0.70%)</title><rect x="810.4" y="997" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="813.42" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="843.4" y="917" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="846.43" y="927.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.70%)</title><rect x="703.1" y="853" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="706.15" y="863.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.70%)</title><rect x="744.4" y="549" width="8.3" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="747.41" y="559.5" ></text>
</g>
<g >
<title>Unique_Node_List::remove(Node*) (1 samples, 0.70%)</title><rect x="604.1" y="981" width="8.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="607.13" y="991.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="997" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="1007.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.70%)</title><rect x="744.4" y="213" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="223.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (2 samples, 1.40%)</title><rect x="661.9" y="725" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="735.5" ></text>
</g>
<g >
<title>call_stub (3 samples, 2.10%)</title><rect x="909.4" y="1029" width="24.8" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="912.44" y="1039.5" >c..</text>
</g>
<g >
<title>::invoke0 (8 samples, 5.59%)</title><rect x="843.4" y="1125" width="66.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="846.43" y="1135.5" >::invoke0</text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.70%)</title><rect x="562.9" y="1013" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="565.87" y="1023.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1148.7" y="1141" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1151.74" y="1151.5" ></text>
</g>
<g >
<title>ValueStack::values_do(ValueVisitor*) (1 samples, 0.70%)</title><rect x="43.0" y="805" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="46.01" y="815.5" ></text>
</g>
<g >
<title>JVM_InvokeMethod (1 samples, 0.70%)</title><rect x="1157.0" y="1109" width="8.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1159.99" y="1119.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="901" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="911.5" ></text>
</g>
<g >
<title>__libc_connect (1 samples, 0.70%)</title><rect x="983.7" y="1173" width="8.3" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="986.71" y="1183.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1173.5" y="725" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="735.5" ></text>
</g>
<g >
<title>::_clearIfStdImpl (1 samples, 0.70%)</title><rect x="901.2" y="869" width="8.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="904.19" y="879.5" ></text>
</g>
<g >
<title>Unsafe_DefineAnonymousClass0 (1 samples, 0.70%)</title><rect x="925.9" y="389" width="8.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="928.94" y="399.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (4 samples, 2.80%)</title><rect x="653.6" y="965" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="975.5" >Pa..</text>
</g>
<g >
<title>::findTypedValueSerializer (1 samples, 0.70%)</title><rect x="1181.7" y="933" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1184.75" y="943.5" ></text>
</g>
<g >
<title>Compile::shorten_branches(unsigned int*, Compile::BufferSizingData&amp;) (3 samples, 2.10%)</title><rect x="166.8" y="1029" width="24.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="169.78" y="1039.5" >C..</text>
</g>
<g >
<title>DirectiveSet::should_not_inline(ciMethod*) (1 samples, 0.70%)</title><rect x="84.3" y="837" width="8.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="87.27" y="847.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="885" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="895.5" ></text>
</g>
<g >
<title>WatcherThread::run() (4 samples, 2.80%)</title><rect x="760.9" y="1141" width="33.0" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="763.91" y="1151.5" >Wa..</text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="892.9" y="965" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="895.94" y="975.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.70%)</title><rect x="686.6" y="661" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="671.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/ser/DefaultSerializerProvider (1 samples, 0.70%)</title><rect x="1157.0" y="949" width="8.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1159.99" y="959.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.70%)</title><rect x="950.7" y="437" width="8.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="953.70" y="447.5" ></text>
</g>
<g >
<title>Lorg/apache/http/impl/nio/client/AbstractClientExchangeHandler (1 samples, 0.70%)</title><rect x="719.7" y="821" width="8.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="722.65" y="831.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (3 samples, 2.10%)</title><rect x="909.4" y="581" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="591.5" >I..</text>
</g>
<g >
<title>__br_forward (1 samples, 0.70%)</title><rect x="744.4" y="245" width="8.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="747.41" y="255.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/IOUtil (1 samples, 0.70%)</title><rect x="1115.7" y="1173" width="8.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1118.73" y="1183.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="565" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="575.5" ></text>
</g>
<g >
<title>::append (1 samples, 0.70%)</title><rect x="1148.7" y="1157" width="8.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1151.74" y="1167.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (1 samples, 0.70%)</title><rect x="744.4" y="341" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="351.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="686.6" y="741" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="751.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 2.80%)</title><rect x="760.9" y="1189" width="33.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="763.91" y="1199.5" >st..</text>
</g>
<g >
<title>sys_futex (2 samples, 1.40%)</title><rect x="769.2" y="1013" width="16.5" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="772.16" y="1023.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="805" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="815.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="309" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="319.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.70%)</title><rect x="950.7" y="309" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="953.70" y="319.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="677" width="24.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="687.5" >L..</text>
</g>
<g >
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.70%)</title><rect x="670.1" y="357" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="673.14" y="367.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="661" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="671.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.70%)</title><rect x="686.6" y="581" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="591.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="837" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="847.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="965" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="975.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.70%)</title><rect x="744.4" y="389" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="399.5" ></text>
</g>
<g >
<title>::doSelect (1 samples, 0.70%)</title><rect x="736.2" y="949" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="739.15" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.70%)</title><rect x="934.2" y="181" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="191.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (4 samples, 2.80%)</title><rect x="653.6" y="821" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="831.5" >Pa..</text>
</g>
<g >
<title>::defineAnonymousClass (1 samples, 0.70%)</title><rect x="925.9" y="437" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="928.94" y="447.5" ></text>
</g>
<g >
<title>::sendAndReceive (1 samples, 0.70%)</title><rect x="793.9" y="1013" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="796.92" y="1023.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/InFlightRequests (1 samples, 0.70%)</title><rect x="1000.2" y="1189" width="8.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1003.21" y="1199.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="917" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="927.5" >I..</text>
</g>
<g >
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (1 samples, 0.70%)</title><rect x="1165.2" y="677" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1168.24" y="687.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.70%)</title><rect x="744.4" y="357" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="367.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="917" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="927.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.70%)</title><rect x="950.7" y="965" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="953.70" y="975.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="757" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="767.5" ></text>
</g>
<g >
<title>Lcom/mongodb/internal/connection/ClusterClockAdvancingSessionContext (1 samples, 0.70%)</title><rect x="793.9" y="981" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="796.92" y="991.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (3 samples, 2.10%)</title><rect x="1165.2" y="1109" width="24.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1168.24" y="1119.5" >J..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="785.7" y="1061" width="8.2" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="788.66" y="1071.5" ></text>
</g>
<g >
<title>Lcom/mongodb/internal/connection/InternalStreamConnection (1 samples, 0.70%)</title><rect x="793.9" y="1029" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="796.92" y="1039.5" ></text>
</g>
<g >
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.70%)</title><rect x="653.6" y="661" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="656.64" y="671.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.70%)</title><rect x="950.7" y="373" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="953.70" y="383.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="229" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="239.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 2.10%)</title><rect x="1165.2" y="1189" width="24.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1168.24" y="1199.5" >s..</text>
</g>
<g >
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const [clone .constprop.83] (1 samples, 0.70%)</title><rect x="183.3" y="997" width="8.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="186.29" y="1007.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.70%)</title><rect x="950.7" y="821" width="8.3" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="953.70" y="831.5" ></text>
</g>
<g >
<title>br_forward_finish (1 samples, 0.70%)</title><rect x="744.4" y="117" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="127.5" ></text>
</g>
<g >
<title>call_stub (1 samples, 0.70%)</title><rect x="793.9" y="1061" width="8.3" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="796.92" y="1071.5" ></text>
</g>
<g >
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 1.40%)</title><rect x="265.8" y="1029" width="16.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="268.80" y="1039.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.70%)</title><rect x="1016.7" y="965" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1019.71" y="975.5" ></text>
</g>
<g >
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.70%)</title><rect x="752.7" y="1093" width="8.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="755.66" y="1103.5" ></text>
</g>
<g >
<title>ConstantPool::resolve_constant_at_impl(constantPoolHandle const&amp;, int, int, bool*, Thread*) (2 samples, 1.40%)</title><rect x="909.4" y="437" width="16.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="912.44" y="447.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (4 samples, 2.80%)</title><rect x="760.9" y="1173" width="33.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="763.91" y="1183.5" >th..</text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper_internal(methodHandle, frame const&amp;, CompiledMethod*, bool, bool, Handle, CallInfo&amp;, Bytecodes::Code, Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="101" width="8.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="937.20" y="111.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1165.2" y="805" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="815.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient (1 samples, 0.70%)</title><rect x="959.0" y="1173" width="8.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="961.95" y="1183.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.70%)</title><rect x="686.6" y="789" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="983.7" y="1125" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="986.71" y="1135.5" ></text>
</g>
<g >
<title>::getDirectMethodForConstant (1 samples, 0.70%)</title><rect x="917.7" y="357" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="920.69" y="367.5" ></text>
</g>
<g >
<title>itable stub (1 samples, 0.70%)</title><rect x="1165.2" y="629" width="8.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1168.24" y="639.5" ></text>
</g>
<g >
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (1 samples, 0.70%)</title><rect x="752.7" y="1077" width="8.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="755.66" y="1087.5" ></text>
</g>
<g >
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.70%)</title><rect x="59.5" y="933" width="8.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="62.51" y="943.5" ></text>
</g>
<g >
<title>Interpreter (5 samples, 3.50%)</title><rect x="711.4" y="1013" width="41.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="1023.5" >Int..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="1107.5" y="1061" width="8.2" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1110.48" y="1071.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.70%)</title><rect x="950.7" y="917" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="953.70" y="927.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.70%)</title><rect x="950.7" y="1061" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="953.70" y="1071.5" ></text>
</g>
<g >
<title>InstanceKlass::call_class_initializer(Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="645" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="655.5" >I..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="821" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="831.5" ></text>
</g>
<g >
<title>Ljava/lang/AbstractStringBuilder (1 samples, 0.70%)</title><rect x="1148.7" y="1173" width="8.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1151.74" y="1183.5" ></text>
</g>
<g >
<title>Parse::do_get_xxx(Node*, ciField*, bool) [clone .constprop.51] (1 samples, 0.70%)</title><rect x="670.1" y="389" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="399.5" ></text>
</g>
<g >
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (8 samples, 5.59%)</title><rect x="51.3" y="997" width="66.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="54.26" y="1007.5" >GraphBu..</text>
</g>
<g >
<title>tcp_transmit_skb (1 samples, 0.70%)</title><rect x="744.4" y="741" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="747.41" y="751.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (66 samples, 46.15%)</title><rect x="166.8" y="1173" width="544.6" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="169.78" y="1183.5" >thread_native_entry(Thread*)</text>
</g>
<g >
<title>call_stub (3 samples, 2.10%)</title><rect x="909.4" y="613" width="24.8" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="912.44" y="623.5" >c..</text>
</g>
<g >
<title>Parse::do_one_bytecode() (4 samples, 2.80%)</title><rect x="653.6" y="805" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="815.5" >Pa..</text>
</g>
<g >
<title>Parse::do_all_blocks() (2 samples, 1.40%)</title><rect x="661.9" y="549" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="559.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (2 samples, 1.40%)</title><rect x="661.9" y="645" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="655.5" ></text>
</g>
<g >
<title>Lorg/apache/http/impl/nio/reactor/AbstractIOReactor (3 samples, 2.10%)</title><rect x="711.4" y="997" width="24.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="714.40" y="1007.5" >L..</text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="837" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="847.5" ></text>
</g>
<g >
<title>kvm_sched_clock_read (1 samples, 0.70%)</title><rect x="744.4" y="565" width="8.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="747.41" y="575.5" ></text>
</g>
<g >
<title>call_stub (8 samples, 5.59%)</title><rect x="843.4" y="1045" width="66.0" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="846.43" y="1055.5" >call_stub</text>
</g>
<g >
<title>Thread::call_run() (1 samples, 0.70%)</title><rect x="934.2" y="1157" width="8.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="937.20" y="1167.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (1 samples, 0.70%)</title><rect x="1157.0" y="1173" width="8.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1159.99" y="1183.5" ></text>
</g>
<g >
<title>start_thread (16 samples, 11.19%)</title><rect x="34.8" y="1189" width="132.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="37.76" y="1199.5" >start_thread</text>
</g>
<g >
<title>__schedule (1 samples, 0.70%)</title><rect x="802.2" y="949" width="8.2" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="805.17" y="959.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 2.80%)</title><rect x="529.9" y="1013" width="33.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="532.86" y="1023.5" >Ph..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="711.4" y="965" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="975.5" ></text>
</g>
<g >
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 2.10%)</title><rect x="282.3" y="1029" width="24.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="285.31" y="1039.5" >P..</text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (1 samples, 0.70%)</title><rect x="554.6" y="997" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="557.62" y="1007.5" ></text>
</g>
<g >
<title>::processEvent (3 samples, 2.10%)</title><rect x="711.4" y="981" width="24.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="714.40" y="991.5" >:..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="885" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="895.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.70%)</title><rect x="686.6" y="917" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="927.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="677" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="687.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 3.50%)</title><rect x="711.4" y="1189" width="41.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="714.40" y="1199.5" >sta..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="597" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="607.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.70%)</title><rect x="670.1" y="421" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="431.5" ></text>
</g>
<g >
<title>Thread::call_run() (3 samples, 2.10%)</title><rect x="1165.2" y="1157" width="24.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1168.24" y="1167.5" >T..</text>
</g>
<g >
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (3 samples, 2.10%)</title><rect x="496.9" y="997" width="24.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="499.85" y="1007.5" >N..</text>
</g>
<g >
<title>AddPNode::bottom_type() const (1 samples, 0.70%)</title><rect x="571.1" y="949" width="8.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="574.12" y="959.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1173.5" y="789" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="799.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.70%)</title><rect x="1107.5" y="997" width="8.2" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1110.48" y="1007.5" ></text>
</g>
<g >
<title>CompileBroker::collect_statistics(CompilerThread*, elapsedTimer, CompileTask*) (1 samples, 0.70%)</title><rect x="34.8" y="1093" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="37.76" y="1103.5" ></text>
</g>
<g >
<title>::sendFetches (1 samples, 0.70%)</title><rect x="1049.7" y="1173" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1052.72" y="1183.5" ></text>
</g>
<g >
<title>fib_validate_source (1 samples, 0.70%)</title><rect x="950.7" y="341" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="953.70" y="351.5" ></text>
</g>
<g >
<title>::contains (1 samples, 0.70%)</title><rect x="884.7" y="981" width="8.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="887.69" y="991.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1045" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1055.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_tlbonly (1 samples, 0.70%)</title><rect x="26.5" y="1045" width="8.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="29.50" y="1055.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.70%)</title><rect x="802.2" y="933" width="8.2" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="805.17" y="943.5" ></text>
</g>
<g >
<title>do_munmap (1 samples, 0.70%)</title><rect x="26.5" y="1109" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="29.50" y="1119.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.70%)</title><rect x="521.6" y="1013" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="524.61" y="1023.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 2.80%)</title><rect x="760.9" y="1157" width="33.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="763.91" y="1167.5" >Th..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="983.7" y="1141" width="8.3" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="986.71" y="1151.5" ></text>
</g>
<g >
<title>Matcher::xform(Node*, int) (5 samples, 3.50%)</title><rect x="199.8" y="1029" width="41.2" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="202.79" y="1039.5" >Mat..</text>
</g>
<g >
<title>__switch_to_asm (2 samples, 1.40%)</title><rect x="769.2" y="933" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="943.5" ></text>
</g>
<g >
<title>mark_mt (1 samples, 0.70%)</title><rect x="744.4" y="53" width="8.3" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="747.41" y="63.5" ></text>
</g>
<g >
<title>PhaseChaitin::post_allocate_copy_removal() (9 samples, 6.29%)</title><rect x="331.8" y="1029" width="74.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="334.82" y="1039.5" >PhaseCha..</text>
</g>
<g >
<title>SystemDictionary::invoke_bootstrap_method(BootstrapInfo&amp;, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="501" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="511.5" >S..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="789" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="799.5" ></text>
</g>
<g >
<title>__memset_sse2 (1 samples, 0.70%)</title><rect x="191.5" y="1029" width="8.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="194.54" y="1039.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (4 samples, 2.80%)</title><rect x="653.6" y="933" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="943.5" >Pa..</text>
</g>
<g >
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.70%)</title><rect x="620.6" y="965" width="8.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="623.63" y="975.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.40%)</title><rect x="851.7" y="981" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="854.68" y="991.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 9.09%)</title><rect x="826.9" y="1189" width="107.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="829.92" y="1199.5" >[unknown]</text>
</g>
<g >
<title>::handleCompletedReceives (1 samples, 0.70%)</title><rect x="1008.5" y="1173" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1011.46" y="1183.5" ></text>
</g>
<g >
<title>MethodHandles::resolve_MemberName(Handle, Klass*, bool, Thread*) (1 samples, 0.70%)</title><rect x="909.4" y="293" width="8.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="912.44" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_many (1 samples, 0.70%)</title><rect x="26.5" y="997" width="8.3" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="29.50" y="1007.5" ></text>
</g>
<g >
<title>kafka-producer- (2 samples, 1.40%)</title><rect x="975.5" y="1205" width="16.5" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="978.45" y="1215.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="711.4" y="949" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="959.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 1.40%)</title><rect x="909.4" y="389" width="16.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="912.44" y="399.5" ></text>
</g>
<g >
<title>munmap (1 samples, 0.70%)</title><rect x="26.5" y="1189" width="8.3" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="29.50" y="1199.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="197" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="207.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.70%)</title><rect x="686.6" y="677" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="687.5" ></text>
</g>
<g >
<title>I/O dispatcher  (5 samples, 3.50%)</title><rect x="711.4" y="1205" width="41.3" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="714.40" y="1215.5" >I/O..</text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="950.7" y="501" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="511.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="885" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="895.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 2.80%)</title><rect x="653.6" y="949" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="959.5" >Pa..</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.40%)</title><rect x="661.9" y="757" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="767.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (7 samples, 4.90%)</title><rect x="59.5" y="949" width="57.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="62.51" y="959.5" >GraphB..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (2 samples, 1.40%)</title><rect x="769.2" y="1061" width="16.5" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="772.16" y="1071.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.70%)</title><rect x="670.1" y="517" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="527.5" ></text>
</g>
<g >
<title>invoke(InstanceKlass*, methodHandle const&amp;, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*) [clone .constprop.104] (8 samples, 5.59%)</title><rect x="843.4" y="1077" width="66.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="846.43" y="1087.5" >invoke(..</text>
</g>
<g >
<title>br_nf_pre_routing (1 samples, 0.70%)</title><rect x="950.7" y="629" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="639.5" ></text>
</g>
<g >
<title>Parse::do_call() (5 samples, 3.50%)</title><rect x="653.6" y="981" width="41.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="991.5" >Par..</text>
</g>
<g >
<title>Interpreter (5 samples, 3.50%)</title><rect x="711.4" y="1029" width="41.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="1039.5" >Int..</text>
</g>
<g >
<title>::resize (1 samples, 0.70%)</title><rect x="1132.2" y="1173" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1135.24" y="1183.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="1045" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="1055.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (4 samples, 2.80%)</title><rect x="653.6" y="901" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="911.5" >Pa..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="949" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="959.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (3 samples, 2.10%)</title><rect x="909.4" y="1157" width="24.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="912.44" y="1167.5" >L..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1173.5" y="709" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="719.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SelectorImpl (1 samples, 0.70%)</title><rect x="736.2" y="997" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="739.15" y="1007.5" ></text>
</g>
<g >
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (1 samples, 0.70%)</title><rect x="290.6" y="1013" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="293.56" y="1023.5" ></text>
</g>
<g >
<title>PhaseCFG::do_global_code_motion() (2 samples, 1.40%)</title><rect x="241.0" y="1045" width="16.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="244.05" y="1055.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="901" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="911.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="851.7" y="917" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="854.68" y="927.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="802.2" y="1109" width="8.2" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="805.17" y="1119.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.70%)</title><rect x="1016.7" y="949" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1019.71" y="959.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1125" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1135.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="1013" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="1023.5" >I..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="744.4" y="885" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="747.41" y="895.5" ></text>
</g>
<g >
<title>SystemDictionary::link_method_handle_constant(Klass*, int, Klass*, Symbol*, Symbol*, Thread*) (2 samples, 1.40%)</title><rect x="909.4" y="421" width="16.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="431.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (5 samples, 3.50%)</title><rect x="711.4" y="1141" width="41.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="714.40" y="1151.5" >Jav..</text>
</g>
<g >
<title>::getEntryPos (1 samples, 0.70%)</title><rect x="1140.5" y="1173" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1143.49" y="1183.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/EPoll (1 samples, 0.70%)</title><rect x="736.2" y="933" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="739.15" y="943.5" ></text>
</g>
<g >
<title>::inputReady (2 samples, 1.40%)</title><rect x="719.7" y="949" width="16.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="722.65" y="959.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="453" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="463.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="981" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="991.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.70%)</title><rect x="777.4" y="773" width="8.3" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="780.41" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="485" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="495.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="741" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="751.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.70%)</title><rect x="703.1" y="949" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="706.15" y="959.5" ></text>
</g>
<g >
<title>Ljava/lang/invoke/VarHandleInts$FieldInstanceReadWrite (1 samples, 0.70%)</title><rect x="975.5" y="1189" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="978.45" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.70%)</title><rect x="1173.5" y="805" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="815.5" ></text>
</g>
<g >
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.70%)</title><rect x="298.8" y="1013" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="301.81" y="1023.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1165.2" y="773" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="783.5" ></text>
</g>
<g >
<title>call_stub (1 samples, 0.70%)</title><rect x="1157.0" y="1045" width="8.2" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1159.99" y="1055.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (1 samples, 0.70%)</title><rect x="793.9" y="1125" width="8.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="796.92" y="1135.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="950.7" y="517" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="527.5" ></text>
</g>
<g >
<title>Compile::Init(int) (1 samples, 0.70%)</title><rect x="488.6" y="1061" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="491.60" y="1071.5" ></text>
</g>
<g >
<title>VM Periodic Tas (4 samples, 2.80%)</title><rect x="760.9" y="1205" width="33.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="763.91" y="1215.5" >VM..</text>
</g>
<g >
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.70%)</title><rect x="142.0" y="997" width="8.3" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="145.03" y="1007.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="1066.2" y="1109" width="8.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1069.22" y="1119.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="821" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="831.5" ></text>
</g>
<g >
<title>PhaseLive::compute(unsigned int) (1 samples, 0.70%)</title><rect x="241.0" y="1013" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="244.05" y="1023.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="703.1" y="1045" width="8.3" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="706.15" y="1055.5" ></text>
</g>
<g >
<title>::poll (1 samples, 0.70%)</title><rect x="959.0" y="1157" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="961.95" y="1167.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.70%)</title><rect x="950.7" y="693" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="703.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (2 samples, 1.40%)</title><rect x="661.9" y="613" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="623.5" ></text>
</g>
<g >
<title>Compilation::emit_code_body() (1 samples, 0.70%)</title><rect x="133.8" y="1029" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="136.78" y="1039.5" ></text>
</g>
<g >
<title>Lorg/apache/http/message/HeaderGroup (1 samples, 0.70%)</title><rect x="727.9" y="821" width="8.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="730.90" y="831.5" ></text>
</g>
<g >
<title>Ljava/io/ObjectStreamClass (1 samples, 0.70%)</title><rect x="868.2" y="725" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="871.18" y="735.5" ></text>
</g>
<g >
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.70%)</title><rect x="653.6" y="773" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="959.0" y="1045" width="8.2" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="961.95" y="1055.5" ></text>
</g>
<g >
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.70%)</title><rect x="628.9" y="1029" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="631.88" y="1039.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="1107.5" y="1093" width="8.2" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1110.48" y="1103.5" ></text>
</g>
<g >
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.70%)</title><rect x="100.8" y="805" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="103.77" y="815.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/DeserializationContext (1 samples, 0.70%)</title><rect x="901.2" y="949" width="8.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="904.19" y="959.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="837" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="847.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*) (1 samples, 0.70%)</title><rect x="562.9" y="997" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="565.87" y="1007.5" ></text>
</g>
<g >
<title>Ljava/lang/invoke/MemberName$Factory (1 samples, 0.70%)</title><rect x="909.4" y="373" width="8.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="912.44" y="383.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 2.10%)</title><rect x="1165.2" y="1077" width="24.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1168.24" y="1087.5" >J..</text>
</g>
<g >
<title>process_backlog (1 samples, 0.70%)</title><rect x="950.7" y="805" width="8.3" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="953.70" y="815.5" ></text>
</g>
<g >
<title>Compile::inline_string_calls(bool) (1 samples, 0.70%)</title><rect x="645.4" y="1061" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="648.38" y="1071.5" ></text>
</g>
<g >
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (1 samples, 0.70%)</title><rect x="43.0" y="1013" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="46.01" y="1023.5" ></text>
</g>
<g >
<title>MethodData::compute_allocation_size_in_bytes(methodHandle const&amp;) (1 samples, 0.70%)</title><rect x="1181.7" y="661" width="8.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1184.75" y="671.5" ></text>
</g>
<g >
<title>Thread::call_run() (1 samples, 0.70%)</title><rect x="752.7" y="1157" width="8.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="755.66" y="1167.5" ></text>
</g>
<g >
<title>GraphBuilder::connect_to_end(BlockBegin*) (1 samples, 0.70%)</title><rect x="76.0" y="885" width="8.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="79.01" y="895.5" ></text>
</g>
<g >
<title>ciMethodData::load_data() (1 samples, 0.70%)</title><rect x="686.6" y="501" width="8.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="689.64" y="511.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/introspect/POJOPropertyBuilder (1 samples, 0.70%)</title><rect x="810.4" y="1013" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="813.42" y="1023.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.70%)</title><rect x="142.0" y="933" width="8.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="145.03" y="943.5" ></text>
</g>
<g >
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.70%)</title><rect x="670.1" y="373" width="8.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="673.14" y="383.5" ></text>
</g>
<g >
<title>ciTypeFlow::flow_types() (1 samples, 0.70%)</title><rect x="653.6" y="709" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="656.64" y="719.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (1 samples, 0.70%)</title><rect x="950.7" y="549" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="953.70" y="559.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="859.9" y="821" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="862.93" y="831.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="709" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="719.5" ></text>
</g>
<g >
<title>::_readAndBindStringKeyMap (1 samples, 0.70%)</title><rect x="876.4" y="981" width="8.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="879.43" y="991.5" ></text>
</g>
<g >
<title>http-nio-8080-B (1 samples, 0.70%)</title><rect x="802.2" y="1205" width="8.2" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="805.17" y="1215.5" ></text>
</g>
<g >
<title>Ljdk/internal/loader/URLClassPath (1 samples, 0.70%)</title><rect x="826.9" y="1173" width="8.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="829.92" y="1183.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.70%)</title><rect x="769.2" y="725" width="8.2" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="772.16" y="735.5" ></text>
</g>
<g >
<title>Compilation::compile_method() (15 samples, 10.49%)</title><rect x="43.0" y="1061" width="123.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="46.01" y="1071.5" >Compilation::co..</text>
</g>
<g >
<title>- (2 samples, 1.40%)</title><rect x="769.2" y="1077" width="16.5" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="772.16" y="1087.5" ></text>
</g>
<g >
<title>IR::IR(Compilation*, ciMethod*, int) (8 samples, 5.59%)</title><rect x="51.3" y="1013" width="66.0" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="54.26" y="1023.5" >IR::IR(..</text>
</g>
<g >
<title>nf_iterate (1 samples, 0.70%)</title><rect x="950.7" y="661" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="953.70" y="671.5" ></text>
</g>
<g >
<title>GraphBuilder::collect_args_for_profiling(GrowableArray&lt;Instruction*&gt;*, ciMethod*, bool) (1 samples, 0.70%)</title><rect x="67.8" y="933" width="8.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="70.76" y="943.5" ></text>
</g>
<g >
<title>::prepareFetchRequests (1 samples, 0.70%)</title><rect x="1041.5" y="1173" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1044.47" y="1183.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.70%)</title><rect x="744.4" y="581" width="8.3" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="747.41" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="26.5" y="1141" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="29.50" y="1151.5" ></text>
</g>
<g >
<title>LIRGenerator::do_ArithmeticOp_Int(ArithmeticOp*) (1 samples, 0.70%)</title><rect x="142.0" y="981" width="8.3" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="145.03" y="991.5" ></text>
</g>
<g >
<title>tcp_v4_inbound_md5_hash (1 samples, 0.70%)</title><rect x="1016.7" y="901" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1019.71" y="911.5" ></text>
</g>
<g >
<title>Assembler::emit_compressed_disp_byte(int&amp;) (1 samples, 0.70%)</title><rect x="183.3" y="965" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="186.29" y="975.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="950.7" y="725" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="735.5" ></text>
</g>
<g >
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.70%)</title><rect x="909.4" y="261" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="271.5" ></text>
</g>
<g >
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.70%)</title><rect x="653.6" y="693" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="656.64" y="703.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.70%)</title><rect x="1016.7" y="885" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1019.71" y="895.5" ></text>
</g>
<g >
<title>::search (3 samples, 2.10%)</title><rect x="909.4" y="981" width="24.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="912.44" y="991.5" >:..</text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="670.1" y="485" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="495.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1109" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1119.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.70%)</title><rect x="686.6" y="773" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="981" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="991.5" ></text>
</g>
<g >
<title>ciEnv::~ciEnv() (1 samples, 0.70%)</title><rect x="694.9" y="1093" width="8.2" height="15.0" fill="rgb(198,198,58)" rx="2" ry="2" />
<text  x="697.90" y="1103.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="1066.2" y="1077" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1069.22" y="1087.5" ></text>
</g>
<g >
<title>call_stub (5 samples, 3.50%)</title><rect x="711.4" y="1061" width="41.3" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="714.40" y="1071.5" >cal..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="917" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="927.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.70%)</title><rect x="950.7" y="613" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="623.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.70%)</title><rect x="1016.7" y="1077" width="8.3" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1019.71" y="1087.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="727.9" y="869" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="730.90" y="879.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.70%)</title><rect x="1016.7" y="1093" width="8.3" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1019.71" y="1103.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.70%)</title><rect x="802.2" y="917" width="8.2" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="805.17" y="927.5" ></text>
</g>
<g >
<title>::invoke (8 samples, 5.59%)</title><rect x="843.4" y="1157" width="66.0" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="846.43" y="1167.5" >::invoke</text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="719.7" y="901" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="722.65" y="911.5" ></text>
</g>
<g >
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.70%)</title><rect x="241.0" y="997" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="244.05" y="1007.5" ></text>
</g>
<g >
<title>MethodData::profile_arguments_for_invoke(methodHandle const&amp;, int) (1 samples, 0.70%)</title><rect x="1181.7" y="629" width="8.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1184.75" y="639.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (1 samples, 0.70%)</title><rect x="752.7" y="1173" width="8.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="755.66" y="1183.5" ></text>
</g>
<g >
<title>::compareAndSet (1 samples, 0.70%)</title><rect x="975.5" y="1173" width="8.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="978.45" y="1183.5" ></text>
</g>
<g >
<title>NMethodSweeper::sweeper_loop() (1 samples, 0.70%)</title><rect x="752.7" y="1125" width="8.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="755.66" y="1135.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="711.4" y="885" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="895.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (2 samples, 1.40%)</title><rect x="769.2" y="837" width="16.5" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="772.16" y="847.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.70%)</title><rect x="1016.7" y="1061" width="8.3" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1019.71" y="1071.5" ></text>
</g>
<g >
<title>decodeHeapOopNode::out_RegMask() const (1 samples, 0.70%)</title><rect x="249.3" y="1013" width="8.3" height="15.0" fill="rgb(225,225,68)" rx="2" ry="2" />
<text  x="252.30" y="1023.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.70%)</title><rect x="909.4" y="245" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="255.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/metrics/stats/Avg (1 samples, 0.70%)</title><rect x="967.2" y="1173" width="8.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="970.20" y="1183.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (5 samples, 3.50%)</title><rect x="711.4" y="1125" width="41.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="714.40" y="1135.5" >thr..</text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (4 samples, 2.80%)</title><rect x="653.6" y="869" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="879.5" >Pa..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="869" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="879.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 3.50%)</title><rect x="653.6" y="1045" width="41.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="1055.5" >Par..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="1066.2" y="1093" width="8.3" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1069.22" y="1103.5" ></text>
</g>
<g >
<title>::park (1 samples, 0.70%)</title><rect x="959.0" y="1125" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="961.95" y="1135.5" ></text>
</g>
<g >
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.70%)</title><rect x="653.6" y="677" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="656.64" y="687.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="686.6" y="549" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="559.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.70%)</title><rect x="802.2" y="965" width="8.2" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="805.17" y="975.5" ></text>
</g>
<g >
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.70%)</title><rect x="909.4" y="213" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.70%)</title><rect x="744.4" y="629" width="8.3" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="747.41" y="639.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.70%)</title><rect x="950.7" y="853" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="953.70" y="863.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="357" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="367.5" ></text>
</g>
<g >
<title>ValueStack::copy(ValueStack::Kind, int) (1 samples, 0.70%)</title><rect x="59.5" y="917" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="62.51" y="927.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/deser/DeserializerCache (1 samples, 0.70%)</title><rect x="901.2" y="917" width="8.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="904.19" y="927.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="629" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="639.5" ></text>
</g>
<g >
<title>sys_munmap (1 samples, 0.70%)</title><rect x="26.5" y="1125" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="29.50" y="1135.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::Dominators() (3 samples, 2.10%)</title><rect x="496.9" y="1013" width="24.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="499.85" y="1023.5" >P..</text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="744.4" y="293" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="303.5" ></text>
</g>
<g >
<title>C1 CompilerThre (19 samples, 13.29%)</title><rect x="10.0" y="1205" width="156.8" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" >C1 CompilerThre</text>
</g>
<g >
<title>tcp_transmit_skb (1 samples, 0.70%)</title><rect x="950.7" y="949" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="953.70" y="959.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="773" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="802.2" y="1077" width="8.2" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="805.17" y="1087.5" ></text>
</g>
<g >
<title>::getRoute (1 samples, 0.70%)</title><rect x="719.7" y="805" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="722.65" y="815.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (1 samples, 0.70%)</title><rect x="793.9" y="1173" width="8.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="796.92" y="1183.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.70%)</title><rect x="802.2" y="997" width="8.2" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="805.17" y="1007.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (2 samples, 1.40%)</title><rect x="661.9" y="741" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="751.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="965" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="975.5" ></text>
</g>
<g >
<title>Verifier::verify(InstanceKlass*, bool, Thread*) (1 samples, 0.70%)</title><rect x="925.9" y="341" width="8.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="928.94" y="351.5" ></text>
</g>
<g >
<title>__switch_to_asm (2 samples, 1.40%)</title><rect x="769.2" y="997" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="1007.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.70%)</title><rect x="744.4" y="197" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="207.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="1165.2" y="645" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1168.24" y="655.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.70%)</title><rect x="744.4" y="757" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="747.41" y="767.5" ></text>
</g>
<g >
<title>InstanceKlass::link_class_impl(Thread*) (1 samples, 0.70%)</title><rect x="925.9" y="357" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="928.94" y="367.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="719.7" y="869" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="722.65" y="879.5" ></text>
</g>
<g >
<title>Node::Identity(PhaseGVN*) (1 samples, 0.70%)</title><rect x="678.4" y="773" width="8.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="681.39" y="783.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.70%)</title><rect x="1016.7" y="1045" width="8.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1019.71" y="1055.5" ></text>
</g>
<g >
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.70%)</title><rect x="224.5" y="997" width="8.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="227.55" y="1007.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (5 samples, 3.50%)</title><rect x="653.6" y="1061" width="41.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="1071.5" >Par..</text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 1.40%)</title><rect x="769.2" y="805" width="16.5" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="772.16" y="815.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 4.20%)</title><rect x="1082.7" y="1189" width="49.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1085.73" y="1199.5" >[unk..</text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (3 samples, 2.10%)</title><rect x="1165.2" y="1093" width="24.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1168.24" y="1103.5" >J..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="421" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="431.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="686.6" y="853" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="863.5" ></text>
</g>
<g >
<title>__switch_to_asm (2 samples, 1.40%)</title><rect x="769.2" y="981" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="991.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.70%)</title><rect x="950.7" y="901" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="953.70" y="911.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="711.4" y="901" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="911.5" ></text>
</g>
<g >
<title>::search (1 samples, 0.70%)</title><rect x="868.2" y="981" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="871.18" y="991.5" ></text>
</g>
<g >
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.70%)</title><rect x="579.4" y="981" width="8.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="582.37" y="991.5" ></text>
</g>
<g >
<title>SYSC_connect (1 samples, 0.70%)</title><rect x="983.7" y="1077" width="8.3" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="986.71" y="1087.5" ></text>
</g>
<g >
<title>ip4_datagram_connect (1 samples, 0.70%)</title><rect x="983.7" y="1061" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="986.71" y="1071.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/IOUtil (1 samples, 0.70%)</title><rect x="1066.2" y="1189" width="8.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1069.22" y="1199.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_lir_list(LIR_List*) (1 samples, 0.70%)</title><rect x="133.8" y="997" width="8.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="136.78" y="1007.5" ></text>
</g>
<g >
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="686.6" y="965" width="8.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="689.64" y="975.5" ></text>
</g>
<g >
<title>::serializeValue (1 samples, 0.70%)</title><rect x="1157.0" y="933" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1159.99" y="943.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="277" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="287.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (1 samples, 0.70%)</title><rect x="703.1" y="1077" width="8.3" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="706.15" y="1087.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_from_cache(JavaThread*, Bytecodes::Code) (1 samples, 0.70%)</title><rect x="1165.2" y="757" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1168.24" y="767.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.70%)</title><rect x="26.5" y="1093" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="29.50" y="1103.5" ></text>
</g>
<g >
<title>LinearScan::do_linear_scan() (2 samples, 1.40%)</title><rect x="150.3" y="1013" width="16.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="153.28" y="1023.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.70%)</title><rect x="1066.2" y="1061" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1069.22" y="1071.5" ></text>
</g>
<g >
<title>Monitor::wait_without_safepoint_check(long) (2 samples, 1.40%)</title><rect x="769.2" y="1109" width="16.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="772.16" y="1119.5" ></text>
</g>
<g >
<title>ciMethodData::data_at(int) (1 samples, 0.70%)</title><rect x="67.8" y="885" width="8.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="70.76" y="895.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/Fetcher (2 samples, 1.40%)</title><rect x="1041.5" y="1189" width="16.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1044.47" y="1199.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.70%)</title><rect x="686.6" y="725" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="735.5" ></text>
</g>
<g >
<title>Thread::call_run() (66 samples, 46.15%)</title><rect x="166.8" y="1157" width="544.6" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="169.78" y="1167.5" >Thread::call_run()</text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="1016.7" y="1157" width="8.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1019.71" y="1167.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (3 samples, 2.10%)</title><rect x="1165.2" y="1173" width="24.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1168.24" y="1183.5" >t..</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.70%)</title><rect x="686.6" y="533" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="543.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.70%)</title><rect x="670.1" y="533" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="543.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="843.4" y="997" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="846.43" y="1007.5" >I..</text>
</g>
<g >
<title>LinkResolver::resolve_special_call(CallInfo&amp;, Handle, LinkInfo const&amp;, Thread*) (1 samples, 0.70%)</title><rect x="909.4" y="277" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="287.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (5 samples, 3.50%)</title><rect x="653.6" y="1029" width="41.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="1039.5" >Par..</text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="851.7" y="965" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="854.68" y="975.5" ></text>
</g>
<g >
<title>::pollSelectionKeys (1 samples, 0.70%)</title><rect x="950.7" y="1173" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="953.70" y="1183.5" ></text>
</g>
<g >
<title>::toStruct (1 samples, 0.70%)</title><rect x="1058.0" y="1173" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1060.97" y="1183.5" ></text>
</g>
<g >
<title>::write (1 samples, 0.70%)</title><rect x="1115.7" y="1157" width="8.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1118.73" y="1167.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.70%)</title><rect x="1107.5" y="981" width="8.2" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1110.48" y="991.5" ></text>
</g>
<g >
<title>Interpreter (5 samples, 3.50%)</title><rect x="711.4" y="1045" width="41.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="1055.5" >Int..</text>
</g>
<g >
<title>flush_tlb_func (1 samples, 0.70%)</title><rect x="26.5" y="965" width="8.3" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="29.50" y="975.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (11 samples, 7.69%)</title><rect x="496.9" y="1029" width="90.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="499.85" y="1039.5" >PhaseIdeal..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="741" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="751.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.70%)</title><rect x="744.4" y="597" width="8.3" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="747.41" y="607.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1148.7" y="1125" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1151.74" y="1135.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_mask (1 samples, 0.70%)</title><rect x="26.5" y="949" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="29.50" y="959.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="837" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="847.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.70%)</title><rect x="802.2" y="1013" width="8.2" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="805.17" y="1023.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="933" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="943.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/ser/impl/IndexedListSerializer (1 samples, 0.70%)</title><rect x="810.4" y="1189" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="813.42" y="1199.5" ></text>
</g>
<g >
<title>::emitConstantPoolUTF8 (1 samples, 0.70%)</title><rect x="818.7" y="1173" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="821.67" y="1183.5" ></text>
</g>
<g >
<title>Interpreter (8 samples, 5.59%)</title><rect x="843.4" y="1029" width="66.0" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="846.43" y="1039.5" >Interpr..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="853" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="863.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="933" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="943.5" ></text>
</g>
<g >
<title>slow_subtype_check Runtime1 stub (1 samples, 0.70%)</title><rect x="711.4" y="869" width="8.3" height="15.0" fill="rgb(232,96,96)" rx="2" ry="2" />
<text  x="714.40" y="879.5" ></text>
</g>
<g >
<title>DebugInformationRecorder::DebugInformationRecorder(OopRecorder*) (1 samples, 0.70%)</title><rect x="488.6" y="1045" width="8.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="491.60" y="1055.5" ></text>
</g>
<g >
<title>Sweeper thread (1 samples, 0.70%)</title><rect x="752.7" y="1205" width="8.2" height="15.0" fill="rgb(234,100,100)" rx="2" ry="2" />
<text  x="755.66" y="1215.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="719.7" y="853" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="722.65" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.70%)</title><rect x="158.5" y="981" width="8.3" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="161.53" y="991.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.70%)</title><rect x="744.4" y="69" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="747.41" y="79.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="117" width="8.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="937.20" y="127.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.70%)</title><rect x="686.6" y="821" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="785.7" y="1077" width="8.2" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="788.66" y="1087.5" ></text>
</g>
<g >
<title>ciTypeFlow::do_flow() (1 samples, 0.70%)</title><rect x="653.6" y="725" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="656.64" y="735.5" ></text>
</g>
<g >
<title>cluster-Cluster (1 samples, 0.70%)</title><rect x="793.9" y="1205" width="8.3" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="796.92" y="1215.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (5 samples, 3.50%)</title><rect x="653.6" y="997" width="41.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="1007.5" >Par..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="869" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="879.5" ></text>
</g>
<g >
<title>GraphKit::stopped() (1 samples, 0.70%)</title><rect x="661.9" y="533" width="8.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="664.89" y="543.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="727.9" y="837" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="730.90" y="847.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1029" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1039.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (1 samples, 0.70%)</title><rect x="950.7" y="485" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="495.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.70%)</title><rect x="950.7" y="597" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="953.70" y="607.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="949" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="959.5" ></text>
</g>
<g >
<title>Unsafe_Park (1 samples, 0.70%)</title><rect x="959.0" y="1109" width="8.2" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="961.95" y="1119.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 1.40%)</title><rect x="769.2" y="949" width="16.5" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="772.16" y="959.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (2 samples, 1.40%)</title><rect x="571.1" y="1013" width="16.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="574.12" y="1023.5" ></text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="26.5" y="1173" width="8.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="29.50" y="1183.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invokedynamic(CallInfo&amp;, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.70%)</title><rect x="1165.2" y="709" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1168.24" y="719.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="965" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="975.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="885" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="895.5" ></text>
</g>
<g >
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.70%)</title><rect x="109.0" y="933" width="8.3" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="112.02" y="943.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1173.5" y="773" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="783.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="1165.2" y="997" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="1007.5" >I..</text>
</g>
<g >
<title>ip_output (1 samples, 0.70%)</title><rect x="744.4" y="709" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="747.41" y="719.5" ></text>
</g>
<g >
<title>Ljava/io/UnixFileSystem (1 samples, 0.70%)</title><rect x="826.9" y="1141" width="8.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="829.92" y="1151.5" ></text>
</g>
<g >
<title>Node::out_grow(unsigned int) (1 samples, 0.70%)</title><rect x="670.1" y="325" width="8.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="673.14" y="335.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.70%)</title><rect x="1066.2" y="1045" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1069.22" y="1055.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="793.9" y="1093" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="796.92" y="1103.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (5 samples, 3.50%)</title><rect x="711.4" y="1093" width="41.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="714.40" y="1103.5" >Jav..</text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.70%)</title><rect x="959.0" y="1093" width="8.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="961.95" y="1103.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.70%)</title><rect x="959.0" y="1029" width="8.2" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="961.95" y="1039.5" ></text>
</g>
<g >
<title>__switch_to_asm (2 samples, 1.40%)</title><rect x="769.2" y="885" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="895.5" ></text>
</g>
<g >
<title>__memmove_ssse3_back (1 samples, 0.70%)</title><rect x="232.8" y="981" width="8.2" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="235.80" y="991.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="869" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="879.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.70%)</title><rect x="703.1" y="885" width="8.3" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="706.15" y="895.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="719.7" y="933" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="722.65" y="943.5" ></text>
</g>
<g >
<title>Compile::gvn_replace_by(Node*, Node*) (1 samples, 0.70%)</title><rect x="645.4" y="1013" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="648.38" y="1023.5" ></text>
</g>
<g >
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (2 samples, 1.40%)</title><rect x="909.4" y="405" width="16.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="912.44" y="415.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="719.7" y="917" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="722.65" y="927.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="1093" width="8.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="937.20" y="1103.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.70%)</title><rect x="950.7" y="453" width="8.3" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="953.70" y="463.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.70%)</title><rect x="950.7" y="645" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="655.5" ></text>
</g>
<g >
<title>Compile::Code_Gen() (39 samples, 27.27%)</title><rect x="166.8" y="1061" width="321.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="169.78" y="1071.5" >Compile::Code_Gen()</text>
</g>
<g >
<title>start_thread (66 samples, 46.15%)</title><rect x="166.8" y="1189" width="544.6" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="169.78" y="1199.5" >start_thread</text>
</g>
<g >
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (4 samples, 2.80%)</title><rect x="439.1" y="1013" width="33.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="442.09" y="1023.5" >Ph..</text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="1165.2" y="1013" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="1023.5" >I..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1093" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1103.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.70%)</title><rect x="950.7" y="677" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="953.70" y="687.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="837" width="24.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="847.5" >L..</text>
</g>
<g >
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (3 samples, 2.10%)</title><rect x="909.4" y="565" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="575.5" >I..</text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (1 samples, 0.70%)</title><rect x="793.9" y="1109" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="796.92" y="1119.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/RequestFuture (1 samples, 0.70%)</title><rect x="942.4" y="1189" width="8.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="945.45" y="1199.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="597" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="607.5" >I..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="793.9" y="997" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="796.92" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="949" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="959.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.70%)</title><rect x="554.6" y="981" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="557.62" y="991.5" ></text>
</g>
<g >
<title>[Missed User Stack] (1 samples, 0.70%)</title><rect x="10.0" y="1189" width="8.3" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.70%)</title><rect x="950.7" y="757" width="8.3" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="953.70" y="767.5" ></text>
</g>
<g >
<title>WatcherThread::sleep() const (2 samples, 1.40%)</title><rect x="769.2" y="1125" width="16.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="772.16" y="1135.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.70%)</title><rect x="744.4" y="533" width="8.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="747.41" y="543.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.70%)</title><rect x="744.4" y="725" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="747.41" y="735.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (2 samples, 1.40%)</title><rect x="769.2" y="1093" width="16.5" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="772.16" y="1103.5" ></text>
</g>
<g >
<title>InstanceKlass::initialize_impl(Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="661" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="671.5" >I..</text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/KafkaConsumer (1 samples, 0.70%)</title><rect x="1016.7" y="1189" width="8.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1019.71" y="1199.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 1.40%)</title><rect x="769.2" y="1029" width="16.5" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="772.16" y="1039.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="917" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="927.5" ></text>
</g>
<g >
<title>CompiledIC::set_to_monomorphic(CompiledICInfo&amp;) (1 samples, 0.70%)</title><rect x="934.2" y="85" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="937.20" y="95.5" ></text>
</g>
<g >
<title>br_nf_forward_ip (1 samples, 0.70%)</title><rect x="744.4" y="165" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="175.5" ></text>
</g>
<g >
<title>::resolve (1 samples, 0.70%)</title><rect x="909.4" y="357" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="912.44" y="367.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SelectorImpl (1 samples, 0.70%)</title><rect x="1074.5" y="1189" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1077.48" y="1199.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (16 samples, 11.19%)</title><rect x="34.8" y="1173" width="132.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="37.76" y="1183.5" >thread_native_en..</text>
</g>
<g >
<title>ClassVerifier::verify_class(Thread*) (1 samples, 0.70%)</title><rect x="925.9" y="325" width="8.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="928.94" y="335.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="837" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="847.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="469" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="479.5" ></text>
</g>
<g >
<title>deliver_clone (1 samples, 0.70%)</title><rect x="744.4" y="277" width="8.3" height="15.0" fill="rgb(252,152,0)" rx="2" ry="2" />
<text  x="747.41" y="287.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.40%)</title><rect x="661.9" y="677" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="687.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="892.9" y="981" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="895.94" y="991.5" ></text>
</g>
<g >
<title>::_createAndCache2 (1 samples, 0.70%)</title><rect x="901.2" y="901" width="8.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="904.19" y="911.5" ></text>
</g>
<g >
<title>mark_mt (1 samples, 0.70%)</title><rect x="744.4" y="37" width="8.3" height="15.0" fill="rgb(216,116,0)" rx="2" ry="2" />
<text  x="747.41" y="47.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.70%)</title><rect x="744.4" y="501" width="8.3" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="747.41" y="511.5" ></text>
</g>
<g >
<title>Thread::call_run() (1 samples, 0.70%)</title><rect x="793.9" y="1157" width="8.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="796.92" y="1167.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="859.9" y="885" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="862.93" y="895.5" ></text>
</g>
<g >
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.70%)</title><rect x="604.1" y="1013" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="607.13" y="1023.5" ></text>
</g>
<g >
<title>::write (1 samples, 0.70%)</title><rect x="744.4" y="981" width="8.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="747.41" y="991.5" ></text>
</g>
<g >
<title>PhaseIFG::init(unsigned int) (1 samples, 0.70%)</title><rect x="414.3" y="1029" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="417.34" y="1039.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1 samples, 0.70%)</title><rect x="744.4" y="421" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="431.5" ></text>
</g>
<g >
<title>InstanceKlass::call_class_initializer(Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="789" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="799.5" >I..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="859.9" y="853" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="862.93" y="863.5" ></text>
</g>
<g >
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.70%)</title><rect x="257.6" y="1029" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="260.55" y="1039.5" ></text>
</g>
<g >
<title>PhaseMacroExpand::expand_macro_nodes() (3 samples, 2.10%)</title><rect x="612.4" y="1045" width="24.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="615.38" y="1055.5" >P..</text>
</g>
<g >
<title>Compilation::emit_lir() (3 samples, 2.10%)</title><rect x="142.0" y="1029" width="24.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="145.03" y="1039.5" >C..</text>
</g>
<g >
<title>JavaThread::thread_main_inner() (1 samples, 0.70%)</title><rect x="934.2" y="1141" width="8.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="937.20" y="1151.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/deser/std/MapDeserializer (1 samples, 0.70%)</title><rect x="876.4" y="997" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="879.43" y="1007.5" ></text>
</g>
<g >
<title>all (143 samples, 100%)</title><rect x="10.0" y="1221" width="1180.0" height="15.0" fill="rgb(255,130,130)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.70%)</title><rect x="744.4" y="453" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="463.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="629" width="24.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="912.44" y="639.5" >J..</text>
</g>
<g >
<title>PhaseIdealLoop::dom_depth(Node*) const (1 samples, 0.70%)</title><rect x="521.6" y="981" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="524.61" y="991.5" ></text>
</g>
<g >
<title>Compilation::compile_java_method() (15 samples, 10.49%)</title><rect x="43.0" y="1045" width="123.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="46.01" y="1055.5" >Compilation::co..</text>
</g>
<g >
<title>LateInlineCallGenerator::do_late_inline() (1 samples, 0.70%)</title><rect x="645.4" y="1045" width="8.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="648.38" y="1055.5" ></text>
</g>
<g >
<title>native_send_call_func_ipi (1 samples, 0.70%)</title><rect x="26.5" y="981" width="8.3" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="29.50" y="991.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="613" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="623.5" ></text>
</g>
<g >
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.70%)</title><rect x="406.1" y="1029" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="409.08" y="1039.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="26.5" y="1157" width="8.3" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="29.50" y="1167.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (15 samples, 10.49%)</title><rect x="43.0" y="1093" width="123.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="46.01" y="1103.5" >Compiler::compi..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="719.7" y="837" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="722.65" y="847.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.70%)</title><rect x="744.4" y="677" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="747.41" y="687.5" ></text>
</g>
<g >
<title>Matcher::Matcher() (1 samples, 0.70%)</title><rect x="191.5" y="1045" width="8.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="194.54" y="1055.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (8 samples, 5.59%)</title><rect x="843.4" y="1061" width="66.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="846.43" y="1071.5" >JavaCal..</text>
</g>
<g >
<title>Lsun/nio/ch/EPollSelectorImpl (1 samples, 0.70%)</title><rect x="736.2" y="965" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="739.15" y="975.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.70%)</title><rect x="744.4" y="789" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="747.41" y="799.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 5.59%)</title><rect x="51.3" y="965" width="66.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="54.26" y="975.5" >GraphBu..</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.70%)</title><rect x="686.6" y="629" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="639.5" ></text>
</g>
<g >
<title>::getResource (1 samples, 0.70%)</title><rect x="826.9" y="1157" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="829.92" y="1167.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="293" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="303.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="793.9" y="1077" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="796.92" y="1087.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 3.50%)</title><rect x="711.4" y="1157" width="41.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="714.40" y="1167.5" >Thr..</text>
</g>
<g >
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.70%)</title><rect x="620.6" y="997" width="8.3" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="623.63" y="1007.5" ></text>
</g>
<g >
<title>sock_map_fd (1 samples, 0.70%)</title><rect x="983.7" y="1109" width="8.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="986.71" y="1119.5" ></text>
</g>
<g >
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (1 samples, 0.70%)</title><rect x="133.8" y="981" width="8.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="136.78" y="991.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="789" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="799.5" ></text>
</g>
<g >
<title>__switch_to_asm (2 samples, 1.40%)</title><rect x="769.2" y="901" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="911.5" ></text>
</g>
<g >
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.70%)</title><rect x="67.8" y="869" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="70.76" y="879.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.70%)</title><rect x="703.1" y="981" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="706.15" y="991.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.70%)</title><rect x="100.8" y="821" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="103.77" y="831.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="901" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="911.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.70%)</title><rect x="703.1" y="965" width="8.3" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="706.15" y="975.5" ></text>
</g>
<g >
<title>__switch_to_asm (2 samples, 1.40%)</title><rect x="769.2" y="869" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="879.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="245" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="255.5" ></text>
</g>
<g >
<title>metadata_Relocation::metadata_value() (1 samples, 0.70%)</title><rect x="752.7" y="1029" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="755.66" y="1039.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.70%)</title><rect x="802.2" y="1045" width="8.2" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="805.17" y="1055.5" ></text>
</g>
<g >
<title>Dictionary::find_class(int, unsigned int, Symbol*) (1 samples, 0.70%)</title><rect x="909.4" y="197" width="8.3" height="15.0" fill="rgb(205,205,60)" rx="2" ry="2" />
<text  x="912.44" y="207.5" ></text>
</g>
<g >
<title>::write0 (1 samples, 0.70%)</title><rect x="744.4" y="949" width="8.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="747.41" y="959.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SocketDispatcher (1 samples, 0.70%)</title><rect x="1066.2" y="1157" width="8.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1069.22" y="1167.5" ></text>
</g>
<g >
<title>Compilation::build_hir() [clone .part.96] (11 samples, 7.69%)</title><rect x="43.0" y="1029" width="90.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="46.01" y="1039.5" >Compilatio..</text>
</g>
<g >
<title>Lorg/apache/kafka/clients/NetworkClient (1 samples, 0.70%)</title><rect x="1008.5" y="1189" width="8.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1011.46" y="1199.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 1.40%)</title><rect x="769.2" y="853" width="16.5" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="772.16" y="863.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.70%)</title><rect x="298.8" y="997" width="8.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="301.81" y="1007.5" ></text>
</g>
<g >
<title>Ljava/util/regex/Pattern$BmpCharPropertyGreedy (1 samples, 0.70%)</title><rect x="992.0" y="1189" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="994.96" y="1199.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (65 samples, 45.45%)</title><rect x="166.8" y="1109" width="536.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="169.78" y="1119.5" >CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient (2 samples, 1.40%)</title><rect x="1025.0" y="1189" width="16.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1027.97" y="1199.5" ></text>
</g>
<g >
<title>Ljava/util/zip/ZipFile$Source (1 samples, 0.70%)</title><rect x="1140.5" y="1189" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1143.49" y="1199.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (3 samples, 2.10%)</title><rect x="587.6" y="1045" width="24.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="590.62" y="1055.5" >P..</text>
</g>
<g >
<title>PhaseCFG::global_code_motion() (2 samples, 1.40%)</title><rect x="241.0" y="1029" width="16.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="244.05" y="1039.5" ></text>
</g>
<g >
<title>Ljava/lang/invoke/MethodHandleNatives (1 samples, 0.70%)</title><rect x="909.4" y="341" width="8.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="912.44" y="351.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.70%)</title><rect x="950.7" y="421" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="953.70" y="431.5" ></text>
</g>
<g >
<title>::wait (1 samples, 0.70%)</title><rect x="802.2" y="1141" width="8.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="805.17" y="1151.5" ></text>
</g>
<g >
<title>fib_table_lookup (1 samples, 0.70%)</title><rect x="950.7" y="325" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="953.70" y="335.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="517" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="527.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="853" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="863.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="901" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="911.5" ></text>
</g>
<g >
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.70%)</title><rect x="100.8" y="853" width="8.2" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="103.77" y="863.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="1157.0" y="1061" width="8.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1159.99" y="1071.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="501" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="511.5" ></text>
</g>
<g >
<title>tcp_md5_do_lookup (1 samples, 0.70%)</title><rect x="1016.7" y="869" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1019.71" y="879.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/EPoll (1 samples, 0.70%)</title><rect x="802.2" y="1157" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="805.17" y="1167.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="1029" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="1039.5" ></text>
</g>
<g >
<title>PhaseChaitin::Register_Allocate() (27 samples, 18.88%)</title><rect x="257.6" y="1045" width="222.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="260.55" y="1055.5" >PhaseChaitin::Register_Alloca..</text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="686.6" y="949" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="959.5" ></text>
</g>
<g >
<title>ip4_datagram_connect (1 samples, 0.70%)</title><rect x="983.7" y="1045" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="986.71" y="1055.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="773" width="24.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="912.44" y="783.5" >J..</text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.40%)</title><rect x="661.9" y="581" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="591.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1173.5" y="741" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="751.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.70%)</title><rect x="744.4" y="693" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="747.41" y="703.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="859.9" y="837" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="862.93" y="847.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="741" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="751.5" >I..</text>
</g>
<g >
<title>thread_native_entry(Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="1173" width="8.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="937.20" y="1183.5" ></text>
</g>
<g >
<title>Lcom/elisity/nattunnel/datastore/ESDataStore (3 samples, 2.10%)</title><rect x="909.4" y="997" width="24.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="912.44" y="1007.5" >L..</text>
</g>
<g >
<title>::handleSecondaryContextualization (1 samples, 0.70%)</title><rect x="901.2" y="933" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="904.19" y="943.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.70%)</title><rect x="133.8" y="1013" width="8.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="136.78" y="1023.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.70%)</title><rect x="793.9" y="1189" width="8.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="796.92" y="1199.5" ></text>
</g>
<g >
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.70%)</title><rect x="670.1" y="341" width="8.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="673.14" y="351.5" ></text>
</g>
<g >
<title>IndexSet::initialize(unsigned int) (1 samples, 0.70%)</title><rect x="414.3" y="1013" width="8.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="417.34" y="1023.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="885" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="895.5" >I..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="389" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="399.5" ></text>
</g>
<g >
<title>Ljava/lang/invoke/MethodHandles$Lookup (1 samples, 0.70%)</title><rect x="917.7" y="373" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="920.69" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.70%)</title><rect x="950.7" y="837" width="8.3" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="953.70" y="847.5" ></text>
</g>
<g >
<title>do_softirq.part.18 (1 samples, 0.70%)</title><rect x="744.4" y="661" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="747.41" y="671.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.70%)</title><rect x="686.6" y="933" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="943.5" ></text>
</g>
<g >
<title>ConstantPool::copy_bootstrap_arguments_at_impl(constantPoolHandle const&amp;, int, int, int, objArrayHandle, int, bool, Handle, Thread*) (2 samples, 1.40%)</title><rect x="909.4" y="453" width="16.5" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="912.44" y="463.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1165.2" y="789" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="799.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="1165.2" y="1045" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="1055.5" >I..</text>
</g>
<g >
<title>Lcom/elisity/nattunnel/datastore/ESDataStore (1 samples, 0.70%)</title><rect x="868.2" y="997" width="8.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="871.18" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="1013" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="1023.5" ></text>
</g>
<g >
<title>Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*) (8 samples, 5.59%)</title><rect x="843.4" y="1093" width="66.0" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="846.43" y="1103.5" >Reflect..</text>
</g>
<g >
<title>Ljava/util/HashMap (1 samples, 0.70%)</title><rect x="1091.0" y="1173" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1093.98" y="1183.5" ></text>
</g>
<g >
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.70%)</title><rect x="76.0" y="853" width="8.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="79.01" y="863.5" ></text>
</g>
<g >
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.70%)</title><rect x="100.8" y="773" width="8.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="103.77" y="783.5" ></text>
</g>
<g >
<title>Lsun/invoke/util/VerifyAccess (1 samples, 0.70%)</title><rect x="917.7" y="341" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="920.69" y="351.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (3 samples, 2.10%)</title><rect x="909.4" y="853" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="863.5" >I..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="950.7" y="1093" width="8.3" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="953.70" y="1103.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="341" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="351.5" ></text>
</g>
<g >
<title>Ljava/util/stream/AbstractPipeline (1 samples, 0.70%)</title><rect x="1099.2" y="1173" width="8.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1102.23" y="1183.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.70%)</title><rect x="1016.7" y="1109" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1019.71" y="1119.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.70%)</title><rect x="950.7" y="981" width="8.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="953.70" y="991.5" ></text>
</g>
<g >
<title>::advanceClusterTime (1 samples, 0.70%)</title><rect x="793.9" y="965" width="8.3" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="796.92" y="975.5" ></text>
</g>
<g >
<title>::invoke (3 samples, 2.10%)</title><rect x="909.4" y="1141" width="24.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="912.44" y="1151.5" >:..</text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="703.1" y="1061" width="8.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="706.15" y="1071.5" ></text>
</g>
<g >
<title>::invoke (1 samples, 0.70%)</title><rect x="1157.0" y="1157" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1159.99" y="1167.5" ></text>
</g>
<g >
<title>call_stub (1 samples, 0.70%)</title><rect x="934.2" y="1061" width="8.2" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="937.20" y="1071.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="843.4" y="901" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="846.43" y="911.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="711.4" y="917" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="927.5" ></text>
</g>
<g >
<title>Ljava/lang/Class (1 samples, 0.70%)</title><rect x="868.2" y="693" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="871.18" y="703.5" ></text>
</g>
<g >
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.70%)</title><rect x="1181.7" y="725" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1184.75" y="735.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (1 samples, 0.70%)</title><rect x="1165.2" y="725" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1168.24" y="735.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 5.59%)</title><rect x="51.3" y="981" width="66.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="54.26" y="991.5" >GraphBu..</text>
</g>
<g >
<title>Lsun/nio/ch/FileDispatcherImpl (1 samples, 0.70%)</title><rect x="744.4" y="965" width="8.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="747.41" y="975.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="853" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="863.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 0.70%)</title><rect x="521.6" y="997" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="524.61" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="821" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="831.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.70%)</title><rect x="752.7" y="1189" width="8.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="755.66" y="1199.5" ></text>
</g>
<g >
<title>org.springframe (17 samples, 11.89%)</title><rect x="992.0" y="1205" width="140.2" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="994.96" y="1215.5" >org.springframe</text>
</g>
<g >
<title>JVM_InvokeMethod (3 samples, 2.10%)</title><rect x="909.4" y="1093" width="24.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="912.44" y="1103.5" >J..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="821" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="802.2" y="1093" width="8.2" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="805.17" y="1103.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (3 samples, 2.10%)</title><rect x="1165.2" y="1141" width="24.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1168.24" y="1151.5" >J..</text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="1165.2" y="965" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="975.5" >I..</text>
</g>
<g >
<title>new_sync_read (1 samples, 0.70%)</title><rect x="950.7" y="1013" width="8.3" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="953.70" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.70%)</title><rect x="950.7" y="741" width="8.3" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="953.70" y="751.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="373" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="383.5" ></text>
</g>
<g >
<title>Interpreter (6 samples, 4.20%)</title><rect x="843.4" y="1013" width="49.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="846.43" y="1023.5" >Inte..</text>
</g>
<g >
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.70%)</title><rect x="934.2" y="149" width="8.2" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="937.20" y="159.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.70%)</title><rect x="84.3" y="853" width="8.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="87.27" y="863.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.70%)</title><rect x="686.6" y="837" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="847.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="933" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="943.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 2.10%)</title><rect x="909.4" y="1173" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="1183.5" >[..</text>
</g>
<g >
<title>::lockAndDoSelect (1 samples, 0.70%)</title><rect x="1074.5" y="1173" width="8.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1077.48" y="1183.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="933" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="943.5" >I..</text>
</g>
<g >
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.70%)</title><rect x="752.7" y="1109" width="8.2" height="15.0" fill="rgb(210,210,63)" rx="2" ry="2" />
<text  x="755.66" y="1119.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1077" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1087.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="725" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="735.5" ></text>
</g>
<g >
<title>MethodData::compute_data_size(BytecodeStream*) (1 samples, 0.70%)</title><rect x="1181.7" y="645" width="8.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1184.75" y="655.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 1.40%)</title><rect x="612.4" y="1013" width="16.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="615.38" y="1023.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="757" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="767.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.70%)</title><rect x="686.6" y="869" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="879.5" ></text>
</g>
<g >
<title>C2 CompilerThre (66 samples, 46.15%)</title><rect x="166.8" y="1205" width="544.6" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="169.78" y="1215.5" >C2 CompilerThre</text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="853" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="863.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.70%)</title><rect x="1016.7" y="1141" width="8.3" height="15.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="1019.71" y="1151.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.70%)</title><rect x="670.1" y="437" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="447.5" ></text>
</g>
<g >
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.70%)</title><rect x="571.1" y="933" width="8.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="574.12" y="943.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.70%)</title><rect x="703.1" y="933" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="706.15" y="943.5" ></text>
</g>
<g >
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.70%)</title><rect x="183.3" y="1013" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="186.29" y="1023.5" ></text>
</g>
<g >
<title>::match (1 samples, 0.70%)</title><rect x="992.0" y="1173" width="8.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="994.96" y="1183.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (1 samples, 0.70%)</title><rect x="934.2" y="1109" width="8.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="937.20" y="1119.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.70%)</title><rect x="1016.7" y="1125" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1019.71" y="1135.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.70%)</title><rect x="744.4" y="837" width="8.3" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="747.41" y="847.5" ></text>
</g>
<g >
<title>__vsnprintf (1 samples, 0.70%)</title><rect x="18.3" y="1173" width="8.2" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="21.25" y="1183.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.70%)</title><rect x="950.7" y="565" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="575.5" ></text>
</g>
<g >
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.70%)</title><rect x="686.6" y="757" width="8.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="689.64" y="767.5" ></text>
</g>
<g >
<title>call_stub (3 samples, 2.10%)</title><rect x="909.4" y="757" width="24.8" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="912.44" y="767.5" >c..</text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (66 samples, 46.15%)</title><rect x="166.8" y="1125" width="544.6" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="169.78" y="1135.5" >CompileBroker::compiler_thread_loop()</text>
</g>
<g >
<title>Parse::do_call() (2 samples, 1.40%)</title><rect x="661.9" y="693" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="703.5" ></text>
</g>
<g >
<title>LinearScan::assign_reg_num() (1 samples, 0.70%)</title><rect x="150.3" y="997" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="153.28" y="1007.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.70%)</title><rect x="670.1" y="453" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="463.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_invoke(JavaThread*, Bytecodes::Code) (3 samples, 2.10%)</title><rect x="909.4" y="709" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="719.5" >I..</text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="950.7" y="581" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="953.70" y="591.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/network/Selector (1 samples, 0.70%)</title><rect x="950.7" y="1189" width="8.3" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="953.70" y="1199.5" ></text>
</g>
<g >
<title>::pollForFetches (1 samples, 0.70%)</title><rect x="1016.7" y="1173" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1019.71" y="1183.5" ></text>
</g>
<g >
<title>Parse::do_call() (2 samples, 1.40%)</title><rect x="661.9" y="597" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="607.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (1 samples, 0.70%)</title><rect x="752.7" y="1141" width="8.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="755.66" y="1151.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 2.80%)</title><rect x="653.6" y="853" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="863.5" >Pa..</text>
</g>
<g >
<title>::pollSelectionKeys (1 samples, 0.70%)</title><rect x="1107.5" y="1157" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1110.48" y="1167.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.70%)</title><rect x="744.4" y="309" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="319.5" ></text>
</g>
<g >
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.70%)</title><rect x="67.8" y="901" width="8.2" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="70.76" y="911.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="925.9" y="469" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="928.94" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="959.0" y="1061" width="8.2" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="961.95" y="1071.5" ></text>
</g>
<g >
<title>Ljava/util/RegularEnumSet (1 samples, 0.70%)</title><rect x="884.7" y="997" width="8.2" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="887.69" y="1007.5" ></text>
</g>
<g >
<title>BootstrapInfo::resolve_args(Thread*) (2 samples, 1.40%)</title><rect x="909.4" y="469" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="912.44" y="479.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="981" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="991.5" ></text>
</g>
<g >
<title>Type::hashcons() (1 samples, 0.70%)</title><rect x="620.6" y="981" width="8.3" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="623.63" y="991.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.70%)</title><rect x="100.8" y="789" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="103.77" y="799.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (1 samples, 0.70%)</title><rect x="744.4" y="325" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="335.5" ></text>
</g>
<g >
<title>do_softirq.part.18 (1 samples, 0.70%)</title><rect x="950.7" y="869" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="953.70" y="879.5" ></text>
</g>
<g >
<title>http-nio-8080-e (16 samples, 11.19%)</title><rect x="810.4" y="1205" width="132.0" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="813.42" y="1215.5" >http-nio-8080-e</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="789" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="799.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_static_call(CallInfo&amp;, LinkInfo const&amp;, bool, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="821" width="24.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="831.5" >L..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="711.4" y="933" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="714.40" y="943.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="793.9" y="1045" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="796.92" y="1055.5" ></text>
</g>
<g >
<title>::nodesWithTimedOutRequests (1 samples, 0.70%)</title><rect x="1000.2" y="1173" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1003.21" y="1183.5" ></text>
</g>
<g >
<title>ip_vs_in (1 samples, 0.70%)</title><rect x="1016.7" y="933" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1019.71" y="943.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="869" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="879.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.70%)</title><rect x="703.1" y="869" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="706.15" y="879.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.70%)</title><rect x="686.6" y="565" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="575.5" ></text>
</g>
<g >
<title>Thread::call_run() (16 samples, 11.19%)</title><rect x="34.8" y="1157" width="132.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="37.76" y="1167.5" >Thread::call_run()</text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.70%)</title><rect x="686.6" y="709" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="719.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe (1 samples, 0.70%)</title><rect x="959.0" y="1141" width="8.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="961.95" y="1151.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SocketDispatcher (1 samples, 0.70%)</title><rect x="1107.5" y="1141" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1110.48" y="1151.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SelectorImpl (1 samples, 0.70%)</title><rect x="802.2" y="1189" width="8.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="805.17" y="1199.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.70%)</title><rect x="686.6" y="597" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="607.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="869" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="879.5" ></text>
</g>
<g >
<title>Matcher::match_tree(Node const*) (1 samples, 0.70%)</title><rect x="224.5" y="1013" width="8.3" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="227.55" y="1023.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 2.80%)</title><rect x="76.0" y="901" width="33.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="79.01" y="911.5" >Gr..</text>
</g>
<g >
<title>vfs_read (1 samples, 0.70%)</title><rect x="1107.5" y="1013" width="8.2" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="1110.48" y="1023.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="693" width="24.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="703.5" >L..</text>
</g>
<g >
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.70%)</title><rect x="447.3" y="997" width="8.3" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="450.34" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="843.4" y="949" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="846.43" y="959.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (3 samples, 2.10%)</title><rect x="909.4" y="1125" width="24.8" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="912.44" y="1135.5" >L..</text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.70%)</title><rect x="950.7" y="885" width="8.3" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="953.70" y="895.5" ></text>
</g>
<g >
<title>ConINode::Opcode() const (1 samples, 0.70%)</title><rect x="595.9" y="1013" width="8.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="598.87" y="1023.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.70%)</title><rect x="125.5" y="1013" width="8.3" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="128.52" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.70%)</title><rect x="983.7" y="1189" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="986.71" y="1199.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (1 samples, 0.70%)</title><rect x="133.8" y="965" width="8.2" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="136.78" y="975.5" ></text>
</g>
<g >
<title>ValueStack::pin_stack_for_linear_scan() (1 samples, 0.70%)</title><rect x="117.3" y="997" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="120.27" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="859.9" y="901" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="862.93" y="911.5" ></text>
</g>
<g >
<title>::poll (1 samples, 0.70%)</title><rect x="1025.0" y="1173" width="8.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1027.97" y="1183.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="810.4" y="1157" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="813.42" y="1167.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.70%)</title><rect x="1016.7" y="917" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1019.71" y="927.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/network/Selector (1 samples, 0.70%)</title><rect x="1107.5" y="1173" width="8.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1110.48" y="1183.5" ></text>
</g>
<g >
<title>br_forward_finish (1 samples, 0.70%)</title><rect x="744.4" y="101" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="111.5" ></text>
</g>
<g >
<title>JVM_InvokeMethod (8 samples, 5.59%)</title><rect x="843.4" y="1109" width="66.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="846.43" y="1119.5" >JVM_Inv..</text>
</g>
<g >
<title>Lcom/elisity/nattunnel/datastore/ESDataStore (1 samples, 0.70%)</title><rect x="843.4" y="981" width="8.3" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="846.43" y="991.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (5 samples, 3.50%)</title><rect x="653.6" y="1013" width="41.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="1023.5" >Par..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="785.7" y="1093" width="8.2" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="788.66" y="1103.5" ></text>
</g>
<g >
<title>sock_write_iter (1 samples, 0.70%)</title><rect x="744.4" y="821" width="8.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="747.41" y="831.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (5 samples, 3.50%)</title><rect x="711.4" y="1173" width="41.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="714.40" y="1183.5" >thr..</text>
</g>
<g >
<title>ep_poll (1 samples, 0.70%)</title><rect x="802.2" y="1029" width="8.2" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="805.17" y="1039.5" ></text>
</g>
<g >
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.70%)</title><rect x="760.9" y="1125" width="8.3" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="763.91" y="1135.5" ></text>
</g>
<g >
<title>SubstitutionResolver::block_do(BlockBegin*) (1 samples, 0.70%)</title><rect x="43.0" y="821" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="46.01" y="831.5" ></text>
</g>
<g >
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool) (1 samples, 0.70%)</title><rect x="752.7" y="1045" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="755.66" y="1055.5" ></text>
</g>
<g >
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (64 samples, 44.76%)</title><rect x="166.8" y="1093" width="528.1" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="169.78" y="1103.5" >C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*)</text>
</g>
<g >
<title>native_flush_tlb_others (1 samples, 0.70%)</title><rect x="26.5" y="1013" width="8.3" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="29.50" y="1023.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="805" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="815.5" ></text>
</g>
<g >
<title>::getSuperclass (1 samples, 0.70%)</title><rect x="868.2" y="677" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="871.18" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.70%)</title><rect x="727.9" y="885" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="730.90" y="895.5" ></text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="917" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="927.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="1165.2" y="981" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="991.5" >I..</text>
</g>
<g >
<title>_dl_update_slotinfo (2 samples, 1.40%)</title><rect x="455.6" y="981" width="16.5" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="458.59" y="991.5" ></text>
</g>
<g >
<title>Parse::do_field_access(bool, bool) (1 samples, 0.70%)</title><rect x="670.1" y="405" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="415.5" ></text>
</g>
<g >
<title>invoke(InstanceKlass*, methodHandle const&amp;, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*) [clone .constprop.104] (1 samples, 0.70%)</title><rect x="1157.0" y="1077" width="8.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1159.99" y="1087.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.70%)</title><rect x="26.5" y="1061" width="8.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="29.50" y="1071.5" ></text>
</g>
<g >
<title>invoke(InstanceKlass*, methodHandle const&amp;, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*) [clone .constprop.104] (3 samples, 2.10%)</title><rect x="909.4" y="1061" width="24.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="912.44" y="1071.5" >i..</text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="851.7" y="933" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="854.68" y="943.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.70%)</title><rect x="744.4" y="773" width="8.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="747.41" y="783.5" ></text>
</g>
<g >
<title>BootstrapInfo::resolve_bsm(Thread*) (2 samples, 1.40%)</title><rect x="909.4" y="485" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="912.44" y="495.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.70%)</title><rect x="744.4" y="229" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="747.41" y="239.5" ></text>
</g>
<g >
<title>Ljava/util/concurrent/ConcurrentHashMap (1 samples, 0.70%)</title><rect x="843.4" y="885" width="8.3" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="846.43" y="895.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.40%)</title><rect x="769.2" y="1045" width="16.5" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="772.16" y="1055.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.70%)</title><rect x="1016.7" y="997" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1019.71" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="1165.2" y="1029" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="1039.5" >I..</text>
</g>
<g >
<title>Assembler::locate_operand(unsigned char*, Assembler::WhichOperand) (1 samples, 0.70%)</title><rect x="752.7" y="1013" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="755.66" y="1023.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.70%)</title><rect x="959.0" y="1013" width="8.2" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="961.95" y="1023.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (1 samples, 0.70%)</title><rect x="1165.2" y="693" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="1168.24" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.70%)</title><rect x="744.4" y="901" width="8.3" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="747.41" y="911.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/requests/FetchRequest (1 samples, 0.70%)</title><rect x="1058.0" y="1189" width="8.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1060.97" y="1199.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.70%)</title><rect x="744.4" y="149" width="8.3" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="747.41" y="159.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.70%)</title><rect x="686.6" y="613" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="689.64" y="623.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.70%)</title><rect x="744.4" y="485" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="495.5" ></text>
</g>
<g >
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.70%)</title><rect x="76.0" y="869" width="8.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="79.01" y="879.5" ></text>
</g>
<g >
<title>JavaCalls::call_static(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.70%)</title><rect x="925.9" y="485" width="8.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="928.94" y="495.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.40%)</title><rect x="1165.2" y="933" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1168.24" y="943.5" ></text>
</g>
<g >
<title>Invoke::visit(InstructionVisitor*) (1 samples, 0.70%)</title><rect x="92.5" y="853" width="8.3" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="95.52" y="863.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (2 samples, 1.40%)</title><rect x="455.6" y="997" width="16.5" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="458.59" y="1007.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (66 samples, 46.15%)</title><rect x="166.8" y="1141" width="544.6" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="169.78" y="1151.5" >JavaThread::thread_main_inner()</text>
</g>
<g >
<title>ip_rcv (1 samples, 0.70%)</title><rect x="1016.7" y="1013" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1019.71" y="1023.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.70%)</title><rect x="950.7" y="1077" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="953.70" y="1087.5" ></text>
</g>
<g >
<title>br_nf_dev_queue_xmit (1 samples, 0.70%)</title><rect x="744.4" y="85" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="95.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.70%)</title><rect x="785.7" y="1125" width="8.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="788.66" y="1135.5" ></text>
</g>
<g >
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.70%)</title><rect x="142.0" y="1013" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="145.03" y="1023.5" ></text>
</g>
<g >
<title>InstanceKlass::initialize_impl(Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="805" width="24.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="912.44" y="815.5" >I..</text>
</g>
<g >
<title>__GI__IO_default_xsputn (1 samples, 0.70%)</title><rect x="18.3" y="1157" width="8.2" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="21.25" y="1167.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.70%)</title><rect x="950.7" y="933" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="953.70" y="943.5" ></text>
</g>
<g >
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.70%)</title><rect x="909.4" y="229" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.70%)</title><rect x="18.3" y="1189" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="21.25" y="1199.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/deser/std/UntypedObjectDeserializer (1 samples, 0.70%)</title><rect x="901.2" y="885" width="8.2" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="904.19" y="895.5" ></text>
</g>
<g >
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.70%)</title><rect x="653.6" y="757" width="8.3" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="656.64" y="767.5" ></text>
</g>
<g >
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.70%)</title><rect x="678.4" y="789" width="8.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="681.39" y="799.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1173.5" y="693" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="703.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (16 samples, 11.19%)</title><rect x="34.8" y="1125" width="132.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="37.76" y="1135.5" >CompileBroker::c..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="1029" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="1039.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1173.5" y="757" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1176.50" y="767.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.70%)</title><rect x="744.4" y="869" width="8.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="747.41" y="879.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="901" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="911.5" >I..</text>
</g>
<g >
<title>PhaseRenumberLive::update_embedded_ids(Node*) (1 samples, 0.70%)</title><rect x="637.1" y="1029" width="8.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="640.13" y="1039.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/Reflection (1 samples, 0.70%)</title><rect x="917.7" y="309" width="8.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="920.69" y="319.5" ></text>
</g>
<g >
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.70%)</title><rect x="150.3" y="981" width="8.2" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="153.28" y="991.5" ></text>
</g>
<g >
<title>PhaseMacroExpand::replace_input(Node*, Node*, Node*) [clone .constprop.159] (1 samples, 0.70%)</title><rect x="628.9" y="1013" width="8.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="631.88" y="1023.5" ></text>
</g>
<g >
<title>__switch_to_asm (2 samples, 1.40%)</title><rect x="769.2" y="917" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="927.5" ></text>
</g>
<g >
<title>sock_read_iter (1 samples, 0.70%)</title><rect x="950.7" y="997" width="8.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="953.70" y="1007.5" ></text>
</g>
<g >
<title>LinearScan::sort_intervals_after_allocation() (1 samples, 0.70%)</title><rect x="158.5" y="997" width="8.3" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="161.53" y="1007.5" ></text>
</g>
<g >
<title>Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*) (1 samples, 0.70%)</title><rect x="1157.0" y="1093" width="8.2" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="1159.99" y="1103.5" ></text>
</g>
<g >
<title>jni_GetSuperclass (1 samples, 0.70%)</title><rect x="868.2" y="661" width="8.2" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="871.18" y="671.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 1.40%)</title><rect x="959.0" y="1189" width="16.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="961.95" y="1199.5" ></text>
</g>
<g >
<title>Method::build_interpreter_method_data(methodHandle const&amp;, Thread*) (1 samples, 0.70%)</title><rect x="1181.7" y="693" width="8.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1184.75" y="703.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="549" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="559.5" ></text>
</g>
<g >
<title>::wrapAndCopyInto (1 samples, 0.70%)</title><rect x="1099.2" y="1157" width="8.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1102.23" y="1167.5" ></text>
</g>
<g >
<title>MethodData::allocate(ClassLoaderData*, methodHandle const&amp;, Thread*) (1 samples, 0.70%)</title><rect x="1181.7" y="677" width="8.3" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1184.75" y="687.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="1045" width="24.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="912.44" y="1055.5" >J..</text>
</g>
<g >
<title>::invoke (1 samples, 0.70%)</title><rect x="835.2" y="1157" width="8.2" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="838.17" y="1167.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="533" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="543.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SocketDispatcher (1 samples, 0.70%)</title><rect x="744.4" y="997" width="8.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="747.41" y="1007.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (2 samples, 1.40%)</title><rect x="661.9" y="709" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="719.5" ></text>
</g>
<g >
<title>ciMethod::method_data() [clone .part.101] (1 samples, 0.70%)</title><rect x="686.6" y="517" width="8.3" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="689.64" y="527.5" ></text>
</g>
<g >
<title>PhaseLive::compute(unsigned int) (6 samples, 4.20%)</title><rect x="422.6" y="1029" width="49.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="425.59" y="1039.5" >Phas..</text>
</g>
<g >
<title>::size (1 samples, 0.70%)</title><rect x="843.4" y="869" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="846.43" y="879.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="949" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="959.5" >I..</text>
</g>
<g >
<title>- (1 samples, 0.70%)</title><rect x="950.7" y="1109" width="8.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="953.70" y="1119.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="917" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="927.5" ></text>
</g>
<g >
<title>::search (1 samples, 0.70%)</title><rect x="843.4" y="965" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="846.43" y="975.5" ></text>
</g>
<g >
<title>ip_route_input_noref (1 samples, 0.70%)</title><rect x="950.7" y="357" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="953.70" y="367.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 11.19%)</title><rect x="34.8" y="1109" width="132.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="37.76" y="1119.5" >CompileBroker::i..</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.40%)</title><rect x="661.9" y="661" width="16.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="664.89" y="671.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="773" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="783.5" ></text>
</g>
<g >
<title>JNU_GetStringPlatformChars (1 samples, 0.70%)</title><rect x="826.9" y="1093" width="8.3" height="15.0" fill="rgb(245,115,115)" rx="2" ry="2" />
<text  x="829.92" y="1103.5" ></text>
</g>
<g >
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.70%)</title><rect x="51.3" y="949" width="8.2" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="54.26" y="959.5" ></text>
</g>
<g >
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.70%)</title><rect x="67.8" y="917" width="8.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="70.76" y="927.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.70%)</title><rect x="950.7" y="389" width="8.3" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="953.70" y="399.5" ></text>
</g>
<g >
<title>InterpreterRuntime::resolve_invokedynamic(JavaThread*) (1 samples, 0.70%)</title><rect x="1165.2" y="741" width="8.3" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="1168.24" y="751.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.70%)</title><rect x="769.2" y="773" width="8.2" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="772.16" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="581" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="591.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="213" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="223.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.70%)</title><rect x="769.2" y="757" width="8.2" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="767.5" ></text>
</g>
<g >
<title>GraphKit::replace_call(CallNode*, Node*, bool) (1 samples, 0.70%)</title><rect x="645.4" y="1029" width="8.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="648.38" y="1039.5" ></text>
</g>
<g >
<title>update_get_addr (1 samples, 0.70%)</title><rect x="760.9" y="1093" width="8.3" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="763.91" y="1103.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_dynamic_call(CallInfo&amp;, BootstrapInfo&amp;, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="517" width="24.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="527.5" >L..</text>
</g>
<g >
<title>br_nf_forward_finish (1 samples, 0.70%)</title><rect x="744.4" y="181" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="191.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.70%)</title><rect x="744.4" y="805" width="8.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="747.41" y="815.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="645" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="655.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.70%)</title><rect x="670.1" y="501" width="8.3" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="673.14" y="511.5" ></text>
</g>
<g >
<title>schedule (2 samples, 1.40%)</title><rect x="769.2" y="789" width="16.5" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="772.16" y="799.5" ></text>
</g>
<g >
<title>Ljava/util/ArrayList (2 samples, 1.40%)</title><rect x="892.9" y="1013" width="16.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="895.94" y="1023.5" ></text>
</g>
<g >
<title>TieredThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.70%)</title><rect x="1181.7" y="709" width="8.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1184.75" y="719.5" ></text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (15 samples, 10.49%)</title><rect x="43.0" y="1077" width="123.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="46.01" y="1087.5" >Compilation::Co..</text>
</g>
<g >
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.70%)</title><rect x="43.0" y="885" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="46.01" y="895.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.70%)</title><rect x="950.7" y="709" width="8.3" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="953.70" y="719.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 2.10%)</title><rect x="909.4" y="965" width="24.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="912.44" y="975.5" >I..</text>
</g>
<g >
<title>::wait (1 samples, 0.70%)</title><rect x="736.2" y="917" width="8.2" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="739.15" y="927.5" ></text>
</g>
<g >
<title>::resolve (1 samples, 0.70%)</title><rect x="909.4" y="325" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="912.44" y="335.5" ></text>
</g>
<g >
<title>Monitor::wait(long, bool) (1 samples, 0.70%)</title><rect x="703.1" y="1093" width="8.3" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="706.15" y="1103.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1157.0" y="997" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.99" y="1007.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (5 samples, 3.50%)</title><rect x="711.4" y="1109" width="41.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="714.40" y="1119.5" >Jav..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="1013" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="1023.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (1 samples, 0.70%)</title><rect x="1157.0" y="1141" width="8.2" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="1159.99" y="1151.5" ></text>
</g>
<g >
<title>__switch_to (2 samples, 1.40%)</title><rect x="769.2" y="965" width="16.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="772.16" y="975.5" ></text>
</g>
<g >
<title>Parse::do_call() (4 samples, 2.80%)</title><rect x="653.6" y="885" width="33.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="656.64" y="895.5" >Pa..</text>
</g>
<g >
<title>::_closeInput (1 samples, 0.70%)</title><rect x="892.9" y="933" width="8.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="895.94" y="943.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe (1 samples, 0.70%)</title><rect x="925.9" y="453" width="8.3" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="928.94" y="463.5" ></text>
</g>
<g >
<title>vtable stub (1 samples, 0.70%)</title><rect x="1124.0" y="1173" width="8.2" height="15.0" fill="rgb(231,96,96)" rx="2" ry="2" />
<text  x="1126.99" y="1183.5" ></text>
</g>
<g >
<title>::serializeContents (1 samples, 0.70%)</title><rect x="810.4" y="1173" width="8.3" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="813.42" y="1183.5" ></text>
</g>
<g >
<title>::read0 (1 samples, 0.70%)</title><rect x="950.7" y="1141" width="8.3" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="953.70" y="1151.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 2.80%)</title><rect x="76.0" y="933" width="33.0" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="79.01" y="943.5" >Gr..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="693" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="703.5" ></text>
</g>
<g >
<title>::containsKey (1 samples, 0.70%)</title><rect x="1091.0" y="1157" width="8.2" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1093.98" y="1167.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="1181.7" y="917" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1184.75" y="927.5" ></text>
</g>
<g >
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.70%)</title><rect x="645.4" y="997" width="8.2" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="648.38" y="1007.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="325" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="335.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (16 samples, 11.19%)</title><rect x="34.8" y="1141" width="132.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="37.76" y="1151.5" >JavaThread::thre..</text>
</g>
<g >
<title>kvm_sched_clock_read (1 samples, 0.70%)</title><rect x="950.7" y="773" width="8.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="953.70" y="783.5" ></text>
</g>
<g >
<title>::trySend (1 samples, 0.70%)</title><rect x="1033.2" y="1173" width="8.3" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1036.22" y="1183.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.70%)</title><rect x="744.4" y="437" width="8.3" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="747.41" y="447.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.70%)</title><rect x="703.1" y="901" width="8.3" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="706.15" y="911.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="934.2" y="261" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="937.20" y="271.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="859.9" y="869" width="8.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="862.93" y="879.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.70%)</title><rect x="744.4" y="645" width="8.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="747.41" y="655.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.70%)</title><rect x="868.2" y="901" width="8.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="871.18" y="911.5" ></text>
</g>
<g >
<title>LinkResolver::resolve_invoke(CallInfo&amp;, Handle, constantPoolHandle const&amp;, int, Bytecodes::Code, Thread*) (3 samples, 2.10%)</title><rect x="909.4" y="549" width="24.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="912.44" y="559.5" >L..</text>
</g>
<g >
<title>read (1 samples, 0.70%)</title><rect x="950.7" y="1125" width="8.3" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="953.70" y="1135.5" ></text>
</g>
</g>
</svg>
