<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1046.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1029" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1029" > </text>
<g id="frames">
<g >
<title>Thread::call_run() (16 samples, 9.14%)</title><rect x="16.7" y="933" width="107.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="19.74" y="943.5" >Thread::call_..</text>
</g>
<g >
<title>[unknown] (4 samples, 2.29%)</title><rect x="583.1" y="965" width="27.0" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="586.14" y="975.5" >[..</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="549.4" y="629" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="639.5" ></text>
</g>
<g >
<title>::maybeTriggerWakeup (1 samples, 0.57%)</title><rect x="1088.9" y="757" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1091.86" y="767.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 2.29%)</title><rect x="1082.1" y="853" width="27.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1085.11" y="863.5" >J..</text>
</g>
<g >
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.57%)</title><rect x="97.7" y="757" width="6.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="100.66" y="767.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.57%)</title><rect x="906.8" y="533" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="543.5" ></text>
</g>
<g >
<title>I/O dispatcher  (10 samples, 5.71%)</title><rect x="583.1" y="981" width="67.5" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="586.14" y="991.5" >I/O dis..</text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.57%)</title><rect x="906.8" y="709" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="719.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="549.4" y="501" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="511.5" ></text>
</g>
<g >
<title>RegMask::Size() const (1 samples, 0.57%)</title><rect x="299.9" y="789" width="6.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="302.94" y="799.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.57%)</title><rect x="1028.2" y="885" width="6.7" height="15.0" fill="rgb(235,135,0)" rx="2" ry="2" />
<text  x="1031.17" y="895.5" ></text>
</g>
<g >
<title>::isBlank (1 samples, 0.57%)</title><rect x="643.8" y="757" width="6.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="646.83" y="767.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="1061.9" y="693" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1064.89" y="703.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info(JavaThread*, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.57%)</title><rect x="616.9" y="661" width="6.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="619.86" y="671.5" ></text>
</g>
<g >
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool, bool) (1 samples, 0.57%)</title><rect x="562.9" y="693" width="6.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="565.91" y="703.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.57%)</title><rect x="670.8" y="741" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="673.80" y="751.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.57%)</title><rect x="1028.2" y="645" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1031.17" y="655.5" ></text>
</g>
<g >
<title>Ljava/util/stream/MatchOps$BooleanTerminalSink (1 samples, 0.57%)</title><rect x="852.9" y="965" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="855.86" y="975.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.57%)</title><rect x="798.9" y="341" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="801.91" y="351.5" ></text>
</g>
<g >
<title>Return::visit(InstructionVisitor*) (1 samples, 0.57%)</title><rect x="43.7" y="709" width="6.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="46.71" y="719.5" ></text>
</g>
<g >
<title>Thread::call_run() (1 samples, 0.57%)</title><rect x="1176.5" y="933" width="6.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1179.51" y="943.5" ></text>
</g>
<g >
<title>Node_List::push(Node*) (1 samples, 0.57%)</title><rect x="414.6" y="789" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="417.57" y="799.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="906.8" y="357" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="367.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1136.1" y="725" width="20.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="735.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="738.2" y="885" width="6.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="741.23" y="895.5" ></text>
</g>
<g >
<title>::tryAcquire (1 samples, 0.57%)</title><rect x="839.4" y="949" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="842.37" y="959.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 1.71%)</title><rect x="455.0" y="757" width="20.3" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="458.03" y="767.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.57%)</title><rect x="1102.3" y="533" width="6.8" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1105.34" y="543.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="549.4" y="261" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="271.5" ></text>
</g>
<g >
<title>Node::clone() const (1 samples, 0.57%)</title><rect x="407.8" y="709" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="410.83" y="719.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="549.4" y="405" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="415.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1 samples, 0.57%)</title><rect x="792.2" y="421" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="431.5" ></text>
</g>
<g >
<title>_new_instance_Java (1 samples, 0.57%)</title><rect x="603.4" y="949" width="6.7" height="15.0" fill="rgb(241,110,110)" rx="2" ry="2" />
<text  x="606.37" y="959.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (6 samples, 3.43%)</title><rect x="610.1" y="869" width="40.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="613.11" y="879.5" >Jav..</text>
</g>
<g >
<title>Thread::call_run() (3 samples, 1.71%)</title><rect x="1115.8" y="933" width="20.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1118.83" y="943.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.57%)</title><rect x="798.9" y="229" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="801.91" y="239.5" ></text>
</g>
<g >
<title>call_stub (6 samples, 3.43%)</title><rect x="610.1" y="837" width="40.5" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="613.11" y="847.5" >cal..</text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.57%)</title><rect x="124.6" y="837" width="6.8" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="127.63" y="847.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="1136.1" y="629" width="13.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="639.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.57%)</title><rect x="906.8" y="693" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="703.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="1163.0" y="837" width="6.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1166.03" y="847.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.57%)</title><rect x="670.8" y="645" width="6.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="673.80" y="655.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.57%)</title><rect x="401.1" y="741" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="404.09" y="751.5" ></text>
</g>
<g >
<title>Lorg/apache/http/protocol/ImmutableHttpProcessor (1 samples, 0.57%)</title><rect x="947.3" y="677" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="950.26" y="687.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/introspect/POJOPropertiesCollector (1 samples, 0.57%)</title><rect x="1129.3" y="581" width="6.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1132.31" y="591.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.57%)</title><rect x="1061.9" y="805" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1064.89" y="815.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.57%)</title><rect x="1028.2" y="853" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1031.17" y="863.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (1 samples, 0.57%)</title><rect x="792.2" y="341" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="795.17" y="351.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="556.2" y="485" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="495.5" ></text>
</g>
<g >
<title>::consumeInput (1 samples, 0.57%)</title><rect x="616.9" y="757" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="619.86" y="767.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;) (3 samples, 1.71%)</title><rect x="482.0" y="789" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="485.00" y="799.5" ></text>
</g>
<g >
<title>C1 CompilerThre (17 samples, 9.71%)</title><rect x="10.0" y="981" width="114.6" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="13.00" y="991.5" >C1 CompilerThre</text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="947.3" y="709" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="950.26" y="719.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.57%)</title><rect x="1102.3" y="629" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1105.34" y="639.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.57%)</title><rect x="124.6" y="805" width="6.8" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="127.63" y="815.5" ></text>
</g>
<g >
<title>ip_forward (1 samples, 0.57%)</title><rect x="792.2" y="149" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="795.17" y="159.5" ></text>
</g>
<g >
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.57%)</title><rect x="219.0" y="789" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="222.03" y="799.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="677" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="687.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (16 samples, 9.14%)</title><rect x="16.7" y="949" width="107.9" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="19.74" y="959.5" >thread_native..</text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="549.4" y="421" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="431.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 1.71%)</title><rect x="23.5" y="709" width="20.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="26.49" y="719.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="549.4" y="517" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="1061.9" y="853" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1064.89" y="863.5" ></text>
</g>
<g >
<title>sys_read (3 samples, 1.71%)</title><rect x="785.4" y="821" width="20.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="788.43" y="831.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::update_skeleton_predicates(Node*, CountedLoopNode*, Node*, int) (1 samples, 0.57%)</title><rect x="407.8" y="741" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="410.83" y="751.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.57%)</title><rect x="738.2" y="789" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="741.23" y="799.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1122.6" y="597" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1125.57" y="607.5" ></text>
</g>
<g >
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.57%)</title><rect x="1163.0" y="869" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1166.03" y="879.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1082.1" y="805" width="27.0" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1085.11" y="815.5" >I..</text>
</g>
<g >
<title>tlb_flush_mmu_tlbonly (1 samples, 0.57%)</title><rect x="124.6" y="821" width="6.8" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="127.63" y="831.5" ></text>
</g>
<g >
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.57%)</title><rect x="556.2" y="389" width="6.7" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="559.17" y="399.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.57%)</title><rect x="906.8" y="517" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="909.80" y="527.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 1.14%)</title><rect x="589.9" y="789" width="13.5" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="592.89" y="799.5" ></text>
</g>
<g >
<title>::read0 (1 samples, 0.57%)</title><rect x="906.8" y="917" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="909.80" y="927.5" ></text>
</g>
<g >
<title>pool-2-thread-4 (1 samples, 0.57%)</title><rect x="1163.0" y="981" width="6.8" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1166.03" y="991.5" ></text>
</g>
<g >
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 1.14%)</title><rect x="306.7" y="805" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="309.69" y="815.5" ></text>
</g>
<g >
<title>LinearScan::number_instructions() (1 samples, 0.57%)</title><rect x="111.1" y="773" width="6.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="114.14" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="10.0" y="965" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="789" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="799.5" ></text>
</g>
<g >
<title>ip_forward_finish (1 samples, 0.57%)</title><rect x="792.2" y="165" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="795.17" y="175.5" ></text>
</g>
<g >
<title>::pollAndInvoke (1 samples, 0.57%)</title><rect x="1095.6" y="757" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1098.60" y="767.5" ></text>
</g>
<g >
<title>- (2 samples, 1.14%)</title><rect x="589.9" y="869" width="13.5" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="592.89" y="879.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/metrics/Sensor (1 samples, 0.57%)</title><rect x="718.0" y="965" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="721.00" y="975.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.57%)</title><rect x="1163.0" y="965" width="6.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1166.03" y="975.5" ></text>
</g>
<g >
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 1.71%)</title><rect x="232.5" y="805" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="235.51" y="815.5" ></text>
</g>
<g >
<title>::intern (1 samples, 0.57%)</title><rect x="947.3" y="581" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="950.26" y="591.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (1 samples, 0.57%)</title><rect x="906.8" y="325" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="335.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.35 (1 samples, 0.57%)</title><rect x="792.2" y="101" width="6.7" height="15.0" fill="rgb(223,123,0)" rx="2" ry="2" />
<text  x="795.17" y="111.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="1136.1" y="597" width="13.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="607.5" ></text>
</g>
<g >
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.57%)</title><rect x="535.9" y="789" width="6.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="538.94" y="799.5" ></text>
</g>
<g >
<title>sys_madvise (1 samples, 0.57%)</title><rect x="670.8" y="773" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="673.80" y="783.5" ></text>
</g>
<g >
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.57%)</title><rect x="407.8" y="693" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="410.83" y="703.5" ></text>
</g>
<g >
<title>::processDeregisterQueue (2 samples, 1.14%)</title><rect x="1021.4" y="917" width="13.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1024.43" y="927.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="825.9" y="709" width="6.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="828.89" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="906.8" y="853" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="909.80" y="863.5" ></text>
</g>
<g >
<title>BlockEnd::as_BlockEnd() (1 samples, 0.57%)</title><rect x="23.5" y="661" width="6.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="26.49" y="671.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.57%)</title><rect x="1061.9" y="757" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1064.89" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.14%)</title><rect x="1007.9" y="821" width="13.5" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1010.94" y="831.5" ></text>
</g>
<g >
<title>Compile::Code_Gen() (37 samples, 21.14%)</title><rect x="131.4" y="837" width="249.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="134.37" y="847.5" >Compile::Code_Gen()</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 1.71%)</title><rect x="785.4" y="837" width="20.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="788.43" y="847.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1129.3" y="549" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1132.31" y="559.5" ></text>
</g>
<g >
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 2.29%)</title><rect x="515.7" y="805" width="27.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="518.71" y="815.5" >P..</text>
</g>
<g >
<title>Lorg/apache/kafka/common/protocol/types/Type$8 (1 samples, 0.57%)</title><rect x="974.2" y="949" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="977.23" y="959.5" ></text>
</g>
<g >
<title>__GI_epoll_wait (2 samples, 1.14%)</title><rect x="589.9" y="885" width="13.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="592.89" y="895.5" ></text>
</g>
<g >
<title>Thread::call_run() (1 samples, 0.57%)</title><rect x="1163.0" y="933" width="6.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1166.03" y="943.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.57%)</title><rect x="616.9" y="709" width="6.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="619.86" y="719.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (66 samples, 37.71%)</title><rect x="131.4" y="917" width="445.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="134.37" y="927.5" >JavaThread::thread_main_inner()</text>
</g>
<g >
<title>LinearScan::assign_reg_num() (1 samples, 0.57%)</title><rect x="97.7" y="773" width="6.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="100.66" y="783.5" ></text>
</g>
<g >
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 1.14%)</title><rect x="347.1" y="789" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="350.14" y="799.5" ></text>
</g>
<g >
<title>PhaseChaitin::Select() (2 samples, 1.14%)</title><rect x="212.3" y="805" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="215.29" y="815.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (3 samples, 1.71%)</title><rect x="812.4" y="901" width="20.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="815.40" y="911.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (3 samples, 1.71%)</title><rect x="1115.8" y="949" width="20.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1118.83" y="959.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.57%)</title><rect x="906.8" y="805" width="6.7" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="909.80" y="815.5" ></text>
</g>
<g >
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.57%)</title><rect x="57.2" y="725" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="60.20" y="735.5" ></text>
</g>
<g >
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.57%)</title><rect x="225.8" y="789" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="228.77" y="799.5" ></text>
</g>
<g >
<title>::invoke (1 samples, 0.57%)</title><rect x="947.3" y="933" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="950.26" y="943.5" ></text>
</g>
<g >
<title>::write (3 samples, 1.71%)</title><rect x="785.4" y="933" width="20.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="788.43" y="943.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/protocol/types/Struct (1 samples, 0.57%)</title><rect x="981.0" y="885" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="983.97" y="895.5" ></text>
</g>
<g >
<title>sys_epoll_wait (2 samples, 1.14%)</title><rect x="589.9" y="821" width="13.5" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="592.89" y="831.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (4 samples, 2.29%)</title><rect x="1082.1" y="901" width="27.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1085.11" y="911.5" >t..</text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (2 samples, 1.14%)</title><rect x="286.5" y="773" width="13.4" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="289.46" y="783.5" ></text>
</g>
<g >
<title>pool-2-thread-9 (1 samples, 0.57%)</title><rect x="1176.5" y="981" width="6.8" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1179.51" y="991.5" ></text>
</g>
<g >
<title>ObjectMonitor::wait(long, bool, Thread*) (1 samples, 0.57%)</title><rect x="825.9" y="741" width="6.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="828.89" y="751.5" ></text>
</g>
<g >
<title>LinearScan::compute_local_live_sets() (1 samples, 0.57%)</title><rect x="104.4" y="773" width="6.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="107.40" y="783.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/FetchSessionHandler (1 samples, 0.57%)</title><rect x="960.7" y="901" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="963.74" y="911.5" ></text>
</g>
<g >
<title>__vsnprintf (1 samples, 0.57%)</title><rect x="10.0" y="949" width="6.7" height="15.0" fill="rgb(229,92,92)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.57%)</title><rect x="576.4" y="901" width="6.7" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="579.40" y="911.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.57%)</title><rect x="1102.3" y="565" width="6.8" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1105.34" y="575.5" ></text>
</g>
<g >
<title>ena_io_poll (1 samples, 0.57%)</title><rect x="1028.2" y="805" width="6.7" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="1031.17" y="815.5" ></text>
</g>
<g >
<title>GraphBuilder::access_field(Bytecodes::Code) (1 samples, 0.57%)</title><rect x="16.7" y="725" width="6.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="19.74" y="735.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.57%)</title><rect x="906.8" y="117" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="127.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.57%)</title><rect x="1061.9" y="821" width="6.7" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1064.89" y="831.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 2.29%)</title><rect x="1136.1" y="853" width="26.9" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1139.06" y="863.5" >J..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="1102.3" y="661" width="6.8" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1105.34" y="671.5" ></text>
</g>
<g >
<title>nf_ip_checksum (1 samples, 0.57%)</title><rect x="798.9" y="261" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="801.91" y="271.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (1 samples, 0.57%)</title><rect x="1176.5" y="949" width="6.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1179.51" y="959.5" ></text>
</g>
<g >
<title>smp_call_function_many (1 samples, 0.57%)</title><rect x="124.6" y="757" width="6.8" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="127.63" y="767.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.57%)</title><rect x="1028.2" y="837" width="6.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1031.17" y="847.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient (1 samples, 0.57%)</title><rect x="1088.9" y="773" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1091.86" y="783.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (1 samples, 0.57%)</title><rect x="792.2" y="325" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="335.5" ></text>
</g>
<g >
<title>PhaseCFG::global_code_motion() (3 samples, 1.71%)</title><rect x="178.6" y="805" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="181.57" y="815.5" ></text>
</g>
<g >
<title>_dl_update_slotinfo (1 samples, 0.57%)</title><rect x="37.0" y="597" width="6.7" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="39.97" y="607.5" ></text>
</g>
<g >
<title>counter_overflow Runtime1 stub (1 samples, 0.57%)</title><rect x="576.4" y="917" width="6.7" height="15.0" fill="rgb(229,93,93)" rx="2" ry="2" />
<text  x="579.40" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.57%)</title><rect x="1183.3" y="837" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1186.26" y="847.5" ></text>
</g>
<g >
<title>Node::Node(unsigned int) (1 samples, 0.57%)</title><rect x="138.1" y="789" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="141.11" y="799.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.57%)</title><rect x="906.8" y="229" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="239.5" ></text>
</g>
<g >
<title>ValueMap::find_insert(Instruction*) (1 samples, 0.57%)</title><rect x="16.7" y="693" width="6.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="19.74" y="703.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/FetchSessionHandler (1 samples, 0.57%)</title><rect x="954.0" y="949" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="957.00" y="959.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.57%)</title><rect x="798.9" y="213" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="801.91" y="223.5" ></text>
</g>
<g >
<title>AccessInternal::PostRuntimeDispatch&lt;CardTableBarrierSet::AccessBarrier&lt;565366ul, CardTableBarrierSet&gt;, (AccessInternal::BarrierType)3, 565366ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.57%)</title><rect x="947.3" y="501" width="6.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="950.26" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 1.14%)</title><rect x="792.2" y="581" width="13.5" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="795.17" y="591.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 1.71%)</title><rect x="812.4" y="853" width="20.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="815.40" y="863.5" ></text>
</g>
<g >
<title>::findTypedValueSerializer (1 samples, 0.57%)</title><rect x="1156.3" y="709" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1159.29" y="719.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.57%)</title><rect x="475.3" y="789" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="478.26" y="799.5" ></text>
</g>
<g >
<title>ciMethod::is_accessor() const (1 samples, 0.57%)</title><rect x="50.5" y="773" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="53.46" y="783.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="556.2" y="629" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="639.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1136.1" y="773" width="26.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="783.5" >I..</text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 1.71%)</title><rect x="1115.8" y="853" width="20.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1118.83" y="863.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.57%)</title><rect x="1028.2" y="869" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1031.17" y="879.5" ></text>
</g>
<g >
<title>ObjectMonitor::enter(Thread*) (5 samples, 2.86%)</title><rect x="1041.7" y="933" width="33.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1044.66" y="943.5" >Ob..</text>
</g>
<g >
<title>JavaThread::thread_main_inner() (3 samples, 1.71%)</title><rect x="812.4" y="917" width="20.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="815.40" y="927.5" ></text>
</g>
<g >
<title>JVM_InternString (1 samples, 0.57%)</title><rect x="947.3" y="565" width="6.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="950.26" y="575.5" ></text>
</g>
<g >
<title>::match (1 samples, 0.57%)</title><rect x="846.1" y="949" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="849.11" y="959.5" ></text>
</g>
<g >
<title>PhaseChaitin::Simplify() (1 samples, 0.57%)</title><rect x="225.8" y="805" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="228.77" y="815.5" ></text>
</g>
<g >
<title>Ljava/util/concurrent/ConcurrentHashMap (1 samples, 0.57%)</title><rect x="1109.1" y="949" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1112.09" y="959.5" ></text>
</g>
<g >
<title>_nf_register_hooks (1 samples, 0.57%)</title><rect x="906.8" y="165" width="6.7" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="909.80" y="175.5" ></text>
</g>
<g >
<title>LinearScan::allocate_registers() (2 samples, 1.14%)</title><rect x="84.2" y="773" width="13.5" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="87.17" y="783.5" ></text>
</g>
<g >
<title>::wait (1 samples, 0.57%)</title><rect x="751.7" y="949" width="6.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="754.71" y="959.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.57%)</title><rect x="1007.9" y="709" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1010.94" y="719.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.57%)</title><rect x="670.8" y="725" width="6.7" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="673.80" y="735.5" ></text>
</g>
<g >
<title>PhaseLive::compute(unsigned int) (3 samples, 1.71%)</title><rect x="178.6" y="789" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="181.57" y="799.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_fn (1 samples, 0.57%)</title><rect x="906.8" y="389" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="909.80" y="399.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 1.14%)</title><rect x="589.9" y="805" width="13.5" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="592.89" y="815.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="1028.2" y="901" width="6.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1031.17" y="911.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1 samples, 0.57%)</title><rect x="798.9" y="357" width="6.8" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="801.91" y="367.5" ></text>
</g>
<g >
<title>PhaseCCP::analyze() (1 samples, 0.57%)</title><rect x="394.3" y="821" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="397.34" y="831.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.57%)</title><rect x="151.6" y="757" width="6.7" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="154.60" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="1055.1" y="837" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1058.14" y="847.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 10.86%)</title><rect x="913.5" y="965" width="128.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="916.54" y="975.5" >[unknown]</text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="613" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="623.5" ></text>
</g>
<g >
<title>br_nf_hook_thresh (1 samples, 0.57%)</title><rect x="906.8" y="373" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="383.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="741" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="751.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (3 samples, 1.71%)</title><rect x="785.4" y="677" width="20.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="788.43" y="687.5" ></text>
</g>
<g >
<title>MachSpillCopyNode::bottom_type() const (1 samples, 0.57%)</title><rect x="131.4" y="773" width="6.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="134.37" y="783.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.57%)</title><rect x="792.2" y="245" width="6.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="795.17" y="255.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.57%)</title><rect x="906.8" y="789" width="6.7" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="909.80" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="1109.1" y="965" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1112.09" y="975.5" ></text>
</g>
<g >
<title>::isUnavailable (1 samples, 0.57%)</title><rect x="879.8" y="949" width="6.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="882.83" y="959.5" ></text>
</g>
<g >
<title>PerfLongVariant::sample() (1 samples, 0.57%)</title><rect x="650.6" y="885" width="6.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="653.57" y="895.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (16 samples, 9.14%)</title><rect x="16.7" y="885" width="107.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.74" y="895.5" >CompileBroker..</text>
</g>
<g >
<title>StringTable::intern(oopDesc*, Thread*) (1 samples, 0.57%)</title><rect x="947.3" y="549" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="950.26" y="559.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.57%)</title><rect x="798.9" y="309" width="6.8" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="801.91" y="319.5" ></text>
</g>
<g >
<title>invoke(InstanceKlass*, methodHandle const&amp;, Handle, bool, objArrayHandle, BasicType, objArrayHandle, bool, Thread*) [clone .constprop.104] (1 samples, 0.57%)</title><rect x="947.3" y="853" width="6.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="950.26" y="863.5" ></text>
</g>
<g >
<title>LinearScanWalker::insert_move(int, Interval*, Interval*) (1 samples, 0.57%)</title><rect x="90.9" y="725" width="6.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="93.91" y="735.5" ></text>
</g>
<g >
<title>pool-3-thread-1 (1 samples, 0.57%)</title><rect x="1183.3" y="981" width="6.7" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1186.26" y="991.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1082.1" y="789" width="27.0" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1085.11" y="799.5" >I..</text>
</g>
<g >
<title>Unsafe_Park (1 samples, 0.57%)</title><rect x="805.7" y="901" width="6.7" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="808.66" y="911.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="549.4" y="293" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="303.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="549.4" y="597" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="607.5" ></text>
</g>
<g >
<title>tcp_error (1 samples, 0.57%)</title><rect x="798.9" y="277" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="801.91" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.57%)</title><rect x="670.8" y="757" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="673.80" y="767.5" ></text>
</g>
<g >
<title>ip_forward_finish (1 samples, 0.57%)</title><rect x="906.8" y="213" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.57%)</title><rect x="670.8" y="805" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="673.80" y="815.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.57%)</title><rect x="616.9" y="693" width="6.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="619.86" y="703.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.57%)</title><rect x="785.4" y="661" width="6.8" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="788.43" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.57%)</title><rect x="906.8" y="565" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="909.80" y="575.5" ></text>
</g>
<g >
<title>::_createUntypedSerializer (1 samples, 0.57%)</title><rect x="1115.8" y="597" width="6.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1118.83" y="607.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 1.14%)</title><rect x="589.9" y="693" width="13.5" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="592.89" y="703.5" ></text>
</g>
<g >
<title>__GI_epoll_wait (1 samples, 0.57%)</title><rect x="738.2" y="901" width="6.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="741.23" y="911.5" ></text>
</g>
<g >
<title>Ljava/lang/reflect/Method (2 samples, 1.14%)</title><rect x="913.5" y="949" width="13.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="916.54" y="959.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (1 samples, 0.57%)</title><rect x="947.3" y="917" width="6.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="950.26" y="927.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.57%)</title><rect x="434.8" y="757" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="437.80" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.57%)</title><rect x="906.8" y="133" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.57%)</title><rect x="866.3" y="773" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="869.34" y="783.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.57%)</title><rect x="906.8" y="181" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="191.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.57%)</title><rect x="1183.3" y="869" width="6.7" height="15.0" fill="rgb(241,141,0)" rx="2" ry="2" />
<text  x="1186.26" y="879.5" ></text>
</g>
<g >
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 1.14%)</title><rect x="326.9" y="789" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="329.91" y="799.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.57%)</title><rect x="670.8" y="661" width="6.7" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="673.80" y="671.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.57%)</title><rect x="549.4" y="181" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="191.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::optimize(PhaseIterGVN&amp;, LoopOptsMode) (17 samples, 9.71%)</title><rect x="401.1" y="821" width="114.6" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="404.09" y="831.5" >PhaseIdealLoop..</text>
</g>
<g >
<title>__GI_epoll_wait (2 samples, 1.14%)</title><rect x="1007.9" y="869" width="13.5" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="1010.94" y="879.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SocketDispatcher (1 samples, 0.57%)</title><rect x="906.8" y="933" width="6.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="909.80" y="943.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (5 samples, 2.86%)</title><rect x="441.5" y="789" width="33.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="444.54" y="799.5" >Ph..</text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.57%)</title><rect x="670.8" y="693" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="673.80" y="703.5" ></text>
</g>
<g >
<title>CastP2XNode::bottom_type() const (1 samples, 0.57%)</title><rect x="569.7" y="661" width="6.7" height="15.0" fill="rgb(200,200,59)" rx="2" ry="2" />
<text  x="572.66" y="671.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.57%)</title><rect x="947.3" y="837" width="6.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="950.26" y="847.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.57%)</title><rect x="684.3" y="901" width="6.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="687.29" y="911.5" ></text>
</g>
<g >
<title>LIRGenerator::do_Invoke(Invoke*) (1 samples, 0.57%)</title><rect x="77.4" y="757" width="6.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="80.43" y="767.5" ></text>
</g>
<g >
<title>read (1 samples, 0.57%)</title><rect x="906.8" y="901" width="6.7" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="909.80" y="911.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="741" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="751.5" ></text>
</g>
<g >
<title>Ljava/util/LinkedHashMap$LinkedKeySet (1 samples, 0.57%)</title><rect x="1082.1" y="773" width="6.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1085.11" y="783.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.57%)</title><rect x="906.8" y="85" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="909.80" y="95.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1136.1" y="789" width="26.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="799.5" >I..</text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1136.1" y="741" width="26.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="751.5" >I..</text>
</g>
<g >
<title>LinearScanWalker::activate_current() (1 samples, 0.57%)</title><rect x="90.9" y="741" width="6.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="93.91" y="751.5" ></text>
</g>
<g >
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.57%)</title><rect x="569.7" y="709" width="6.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="572.66" y="719.5" ></text>
</g>
<g >
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (1 samples, 0.57%)</title><rect x="549.4" y="69" width="6.8" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="552.43" y="79.5" ></text>
</g>
<g >
<title>Interpreter (6 samples, 3.43%)</title><rect x="610.1" y="805" width="40.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="613.11" y="815.5" >Int..</text>
</g>
<g >
<title>Ljava/util/regex/Pattern$Branch (1 samples, 0.57%)</title><rect x="846.1" y="965" width="6.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="849.11" y="975.5" ></text>
</g>
<g >
<title>IndexSet::initialize(unsigned int) (1 samples, 0.57%)</title><rect x="360.6" y="789" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="363.63" y="799.5" ></text>
</g>
<g >
<title>::findMissing (1 samples, 0.57%)</title><rect x="960.7" y="885" width="6.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="963.74" y="895.5" ></text>
</g>
<g >
<title>kvm_sched_clock_read (1 samples, 0.57%)</title><rect x="798.9" y="501" width="6.8" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="801.91" y="511.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/EPoll (1 samples, 0.57%)</title><rect x="704.5" y="917" width="6.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="707.51" y="927.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="1163.0" y="805" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1166.03" y="815.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.57%)</title><rect x="792.2" y="133" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="795.17" y="143.5" ></text>
</g>
<g >
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.57%)</title><rect x="57.2" y="709" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="60.20" y="719.5" ></text>
</g>
<g >
<title>::findTokenEnd (1 samples, 0.57%)</title><rect x="630.3" y="693" width="6.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="633.34" y="703.5" ></text>
</g>
<g >
<title>br_netif_receive_skb (1 samples, 0.57%)</title><rect x="792.2" y="277" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="287.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1122.6" y="645" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1125.57" y="655.5" ></text>
</g>
<g >
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.57%)</title><rect x="542.7" y="757" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="545.69" y="767.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (4 samples, 2.29%)</title><rect x="1082.1" y="885" width="27.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1085.11" y="895.5" >J..</text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="549.4" y="245" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="255.5" ></text>
</g>
<g >
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (3 samples, 1.71%)</title><rect x="279.7" y="789" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="282.71" y="799.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="798.9" y="389" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="801.91" y="399.5" ></text>
</g>
<g >
<title>munmap (1 samples, 0.57%)</title><rect x="124.6" y="965" width="6.8" height="15.0" fill="rgb(227,90,90)" rx="2" ry="2" />
<text  x="127.63" y="975.5" ></text>
</g>
<g >
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.57%)</title><rect x="569.7" y="693" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="572.66" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.57%)</title><rect x="792.2" y="517" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="795.17" y="527.5" ></text>
</g>
<g >
<title>sched_clock (1 samples, 0.57%)</title><rect x="798.9" y="517" width="6.8" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="801.91" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="1122.6" y="581" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1125.57" y="591.5" ></text>
</g>
<g >
<title>PhaseChaitin::Register_Allocate() (27 samples, 15.43%)</title><rect x="198.8" y="821" width="182.1" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="201.80" y="831.5" >PhaseChaitin::Register_..</text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.57%)</title><rect x="798.9" y="405" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="801.91" y="415.5" ></text>
</g>
<g >
<title>WatcherThread::run() (5 samples, 2.86%)</title><rect x="650.6" y="917" width="33.7" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="653.57" y="927.5" >Wa..</text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.57%)</title><rect x="738.2" y="725" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="741.23" y="735.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.57%)</title><rect x="1176.5" y="965" width="6.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1179.51" y="975.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (4 samples, 2.29%)</title><rect x="1082.1" y="917" width="27.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1085.11" y="927.5" >J..</text>
</g>
<g >
<title>wake_up_q (1 samples, 0.57%)</title><rect x="825.9" y="613" width="6.7" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="828.89" y="623.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 4.00%)</title><rect x="987.7" y="949" width="47.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="990.71" y="959.5" >[unk..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="1055.1" y="853" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1058.14" y="863.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/metrics/Sensor (1 samples, 0.57%)</title><rect x="900.1" y="965" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="903.06" y="975.5" ></text>
</g>
<g >
<title>::firePendingCompletedRequests (1 samples, 0.57%)</title><rect x="873.1" y="949" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="876.09" y="959.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="805" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="815.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.57%)</title><rect x="495.5" y="757" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="498.49" y="767.5" ></text>
</g>
<g >
<title>Lorg/apache/http/message/BasicLineParser (1 samples, 0.57%)</title><rect x="623.6" y="773" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="626.60" y="783.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/NetworkClient$DefaultMetadataUpdater (1 samples, 0.57%)</title><rect x="859.6" y="965" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="862.60" y="975.5" ></text>
</g>
<g >
<title>writev (3 samples, 1.71%)</title><rect x="785.4" y="885" width="20.3" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="788.43" y="895.5" ></text>
</g>
<g >
<title>schedule (2 samples, 1.14%)</title><rect x="589.9" y="741" width="13.5" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="592.89" y="751.5" ></text>
</g>
<g >
<title>::firePendingCompletedRequests (1 samples, 0.57%)</title><rect x="771.9" y="933" width="6.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="774.94" y="943.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="821" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="831.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.57%)</title><rect x="1163.0" y="741" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1166.03" y="751.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.57%)</title><rect x="124.6" y="741" width="6.8" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="127.63" y="751.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="1028.2" y="661" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1031.17" y="671.5" ></text>
</g>
<g >
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.57%)</title><rect x="576.4" y="837" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="579.40" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.57%)</title><rect x="825.9" y="581" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="828.89" y="591.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/IOUtil (3 samples, 1.71%)</title><rect x="785.4" y="949" width="20.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="788.43" y="959.5" ></text>
</g>
<g >
<title>::parse (1 samples, 0.57%)</title><rect x="832.6" y="949" width="6.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="835.63" y="959.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.57%)</title><rect x="556.2" y="453" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="805.7" y="949" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="808.66" y="959.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 1.14%)</title><rect x="549.4" y="725" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="735.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (3 samples, 1.71%)</title><rect x="812.4" y="949" width="20.2" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="815.40" y="959.5" ></text>
</g>
<g >
<title>ObjectLocker::ObjectLocker(Handle, Thread*, bool) (1 samples, 0.57%)</title><rect x="1163.0" y="885" width="6.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1166.03" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.57%)</title><rect x="792.2" y="229" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="795.17" y="239.5" ></text>
</g>
<g >
<title>::poll (3 samples, 1.71%)</title><rect x="1001.2" y="917" width="20.2" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="1004.20" y="927.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 2.29%)</title><rect x="549.4" y="821" width="27.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="831.5" >P..</text>
</g>
<g >
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.57%)</title><rect x="650.6" y="901" width="6.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="653.57" y="911.5" ></text>
</g>
<g >
<title>GraphBuilder::if_zero(ValueType*, Instruction::Condition) [clone .constprop.370] (1 samples, 0.57%)</title><rect x="37.0" y="645" width="6.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="39.97" y="655.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.57%)</title><rect x="906.8" y="261" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="271.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="549.4" y="309" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="319.5" ></text>
</g>
<g >
<title>__irqentry_text_start (1 samples, 0.57%)</title><rect x="1183.3" y="949" width="6.7" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="1186.26" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="1169.8" y="965" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1172.77" y="975.5" ></text>
</g>
<g >
<title>do_munmap (1 samples, 0.57%)</title><rect x="124.6" y="885" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="127.63" y="895.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 2.29%)</title><rect x="1136.1" y="933" width="26.9" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1139.06" y="943.5" >T..</text>
</g>
<g >
<title>packet_rcv (1 samples, 0.57%)</title><rect x="906.8" y="69" width="6.7" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="909.80" y="79.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="616.9" y="741" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="619.86" y="751.5" ></text>
</g>
<g >
<title>tcp_write_xmit (3 samples, 1.71%)</title><rect x="785.4" y="693" width="20.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="788.43" y="703.5" ></text>
</g>
<g >
<title>sch_direct_xmit (1 samples, 0.57%)</title><rect x="906.8" y="101" width="6.7" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="909.80" y="111.5" ></text>
</g>
<g >
<title>Lorg/apache/http/nio/protocol/HttpAsyncRequestExecutor (2 samples, 1.14%)</title><rect x="630.3" y="773" width="13.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="633.34" y="783.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.57%)</title><rect x="866.3" y="757" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="869.34" y="767.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (1 samples, 0.57%)</title><rect x="906.8" y="725" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="909.80" y="735.5" ></text>
</g>
<g >
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.57%)</title><rect x="616.9" y="645" width="6.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="619.86" y="655.5" ></text>
</g>
<g >
<title>C2 CompilerThre (67 samples, 38.29%)</title><rect x="124.6" y="981" width="451.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="127.63" y="991.5" >C2 CompilerThre</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="1102.3" y="469" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1105.34" y="479.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.57%)</title><rect x="57.2" y="789" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="60.20" y="799.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (4 samples, 2.29%)</title><rect x="549.4" y="789" width="27.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="799.5" >P..</text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (1 samples, 0.57%)</title><rect x="1176.5" y="869" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1179.51" y="879.5" ></text>
</g>
<g >
<title>itable stub (1 samples, 0.57%)</title><rect x="1075.4" y="965" width="6.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1078.37" y="975.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="549.4" y="149" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="159.5" ></text>
</g>
<g >
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.57%)</title><rect x="866.3" y="933" width="6.8" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="869.34" y="943.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (3 samples, 1.71%)</title><rect x="812.4" y="885" width="20.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="815.40" y="895.5" ></text>
</g>
<g >
<title>__memset_sse2 (2 samples, 1.14%)</title><rect x="367.4" y="805" width="13.5" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="370.37" y="815.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.57%)</title><rect x="1028.2" y="773" width="6.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1031.17" y="783.5" ></text>
</g>
<g >
<title>::wait (1 samples, 0.57%)</title><rect x="825.9" y="789" width="6.7" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="828.89" y="799.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.57%)</title><rect x="576.4" y="869" width="6.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="579.40" y="879.5" ></text>
</g>
<g >
<title>::parseResponse (1 samples, 0.57%)</title><rect x="981.0" y="933" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="983.97" y="943.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="947.3" y="757" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="950.26" y="767.5" ></text>
</g>
<g >
<title>ciMethod::interpreter_call_site_count(int) (1 samples, 0.57%)</title><rect x="556.2" y="373" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="559.17" y="383.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="798.9" y="325" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="801.91" y="335.5" ></text>
</g>
<g >
<title>JVMState::debug_start() const (1 samples, 0.57%)</title><rect x="259.5" y="789" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="262.49" y="799.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 1.14%)</title><rect x="461.8" y="741" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="464.77" y="751.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.57%)</title><rect x="1176.5" y="853" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1179.51" y="863.5" ></text>
</g>
<g >
<title>Thread::call_run() (3 samples, 1.71%)</title><rect x="812.4" y="933" width="20.2" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="815.40" y="943.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/SerializerProvider (1 samples, 0.57%)</title><rect x="1129.3" y="645" width="6.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1132.31" y="655.5" ></text>
</g>
<g >
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.57%)</title><rect x="542.7" y="773" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="545.69" y="783.5" ></text>
</g>
<g >
<title>do_writev (3 samples, 1.71%)</title><rect x="785.4" y="805" width="20.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="788.43" y="815.5" ></text>
</g>
<g >
<title>ip_output (2 samples, 1.14%)</title><rect x="792.2" y="645" width="13.5" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="795.17" y="655.5" ></text>
</g>
<g >
<title>::characteristics (2 samples, 1.14%)</title><rect x="927.0" y="933" width="13.5" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="930.03" y="943.5" ></text>
</g>
<g >
<title>ip_forward (1 samples, 0.57%)</title><rect x="906.8" y="197" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="207.5" ></text>
</g>
<g >
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (2 samples, 1.14%)</title><rect x="131.4" y="805" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="134.37" y="815.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/requests/AbstractResponse (1 samples, 0.57%)</title><rect x="981.0" y="949" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="983.97" y="959.5" ></text>
</g>
<g >
<title>PhaseChaitin::compute_initial_block_pressure(Block*, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;, double) (1 samples, 0.57%)</title><rect x="273.0" y="789" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="275.97" y="799.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1122.6" y="629" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1125.57" y="639.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.57%)</title><rect x="906.8" y="453" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="463.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2 samples, 1.14%)</title><rect x="792.2" y="629" width="13.5" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="795.17" y="639.5" ></text>
</g>
<g >
<title>Lorg/elasticsearch/client/RestHighLevelClient (1 samples, 0.57%)</title><rect x="1142.8" y="549" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1145.80" y="559.5" ></text>
</g>
<g >
<title>Compile::Optimize() (25 samples, 14.29%)</title><rect x="380.9" y="837" width="168.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="383.86" y="847.5" >Compile::Optimize()</text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="549.4" y="389" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="399.5" ></text>
</g>
<g >
<title>::findJsonValueAccessor (1 samples, 0.57%)</title><rect x="1129.3" y="597" width="6.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1132.31" y="607.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.57%)</title><rect x="1102.3" y="693" width="6.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1105.34" y="703.5" ></text>
</g>
<g >
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.57%)</title><rect x="616.9" y="597" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="619.86" y="607.5" ></text>
</g>
<g >
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.57%)</title><rect x="556.2" y="437" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="447.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (1 samples, 0.57%)</title><rect x="1176.5" y="901" width="6.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1179.51" y="911.5" ></text>
</g>
<g >
<title>::apply (1 samples, 0.57%)</title><rect x="967.5" y="933" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="970.49" y="943.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.57%)</title><rect x="825.9" y="645" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="828.89" y="655.5" ></text>
</g>
<g >
<title>WatcherThread::sleep() const (4 samples, 2.29%)</title><rect x="657.3" y="901" width="27.0" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="660.31" y="911.5" >W..</text>
</g>
<g >
<title>Lsun/nio/ch/FileDispatcherImpl (3 samples, 1.71%)</title><rect x="785.4" y="917" width="20.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="788.43" y="927.5" ></text>
</g>
<g >
<title>Matcher::match() (4 samples, 2.29%)</title><rect x="144.9" y="821" width="26.9" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="147.86" y="831.5" >M..</text>
</g>
<g >
<title>Catalina-utilit (1 samples, 0.57%)</title><rect x="576.4" y="981" width="6.7" height="15.0" fill="rgb(224,85,85)" rx="2" ry="2" />
<text  x="579.40" y="991.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="947.3" y="789" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="950.26" y="799.5" ></text>
</g>
<g >
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.57%)</title><rect x="97.7" y="741" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="100.66" y="751.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="866.3" y="901" width="6.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="869.34" y="911.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="825.9" y="677" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="828.89" y="687.5" ></text>
</g>
<g >
<title>::sizeOf (1 samples, 0.57%)</title><rect x="974.2" y="933" width="6.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="977.23" y="943.5" ></text>
</g>
<g >
<title>Matcher::match_tree(Node const*) (2 samples, 1.14%)</title><rect x="151.6" y="789" width="13.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="154.60" y="799.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="124.6" y="949" width="6.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="127.63" y="959.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.57%)</title><rect x="219.0" y="773" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="222.03" y="783.5" ></text>
</g>
<g >
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (66 samples, 37.71%)</title><rect x="131.4" y="869" width="445.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="134.37" y="879.5" >C2Compiler::compile_method(ciEnv*, ciMethod*, int, Directive..</text>
</g>
<g >
<title>thread_native_entry(Thread*) (66 samples, 37.71%)</title><rect x="131.4" y="949" width="445.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="134.37" y="959.5" >thread_native_entry(Thread*)</text>
</g>
<g >
<title>::pollSelectionKeys (1 samples, 0.57%)</title><rect x="745.0" y="949" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="747.97" y="959.5" ></text>
</g>
<g >
<title>PhaseCFG::build_cfg() (1 samples, 0.57%)</title><rect x="171.8" y="805" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="174.83" y="815.5" ></text>
</g>
<g >
<title>Monitor::wait_without_safepoint_check(long) (3 samples, 1.71%)</title><rect x="657.3" y="885" width="20.2" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="660.31" y="895.5" ></text>
</g>
<g >
<title>::poll (1 samples, 0.57%)</title><rect x="866.3" y="949" width="6.8" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="869.34" y="959.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="1014.7" y="661" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1017.69" y="671.5" ></text>
</g>
<g >
<title>org.springframe (41 samples, 23.43%)</title><rect x="832.6" y="981" width="276.5" height="15.0" fill="rgb(242,112,112)" rx="2" ry="2" />
<text  x="835.63" y="991.5" >org.springframe</text>
</g>
<g >
<title>Ljava/lang/Object (1 samples, 0.57%)</title><rect x="825.9" y="805" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="828.89" y="815.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="1055.1" y="885" width="6.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1058.14" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (2 samples, 1.14%)</title><rect x="70.7" y="773" width="13.5" height="15.0" fill="rgb(227,227,69)" rx="2" ry="2" />
<text  x="73.69" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="645" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="655.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient (2 samples, 1.14%)</title><rect x="873.1" y="965" width="13.5" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="876.09" y="975.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/EPoll (3 samples, 1.71%)</title><rect x="583.1" y="917" width="20.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="586.14" y="927.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (4 samples, 2.29%)</title><rect x="1082.1" y="949" width="27.0" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1085.11" y="959.5" >t..</text>
</g>
<g >
<title>sock_poll (1 samples, 0.57%)</title><rect x="1001.2" y="773" width="6.7" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1004.20" y="783.5" ></text>
</g>
<g >
<title>::lockAndDoSelect (3 samples, 1.71%)</title><rect x="583.1" y="933" width="20.3" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="586.14" y="943.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/SerializerProvider (1 samples, 0.57%)</title><rect x="1156.3" y="677" width="6.7" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1159.29" y="687.5" ></text>
</g>
<g >
<title>CallStaticJavaNode::uncommon_trap_request() const (1 samples, 0.57%)</title><rect x="448.3" y="757" width="6.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="451.29" y="767.5" ></text>
</g>
<g >
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.57%)</title><rect x="171.8" y="821" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="174.83" y="831.5" ></text>
</g>
<g >
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.57%)</title><rect x="37.0" y="613" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="39.97" y="623.5" ></text>
</g>
<g >
<title>::assignedState (1 samples, 0.57%)</title><rect x="893.3" y="949" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="896.31" y="959.5" ></text>
</g>
<g >
<title>BlockBegin::try_merge(ValueStack*) (1 samples, 0.57%)</title><rect x="30.2" y="645" width="6.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="33.23" y="655.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="556.2" y="533" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="543.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (4 samples, 2.29%)</title><rect x="1136.1" y="917" width="26.9" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1139.06" y="927.5" >J..</text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (3 samples, 1.71%)</title><rect x="1115.8" y="885" width="20.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1118.83" y="895.5" ></text>
</g>
<g >
<title>__GI_epoll_wait (1 samples, 0.57%)</title><rect x="704.5" y="885" width="6.8" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="707.51" y="895.5" ></text>
</g>
<g >
<title>SafeFetchN (1 samples, 0.57%)</title><rect x="1048.4" y="901" width="6.7" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="1051.40" y="911.5" ></text>
</g>
<g >
<title>VM Thread (1 samples, 0.57%)</title><rect x="684.3" y="981" width="6.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="687.29" y="991.5" ></text>
</g>
<g >
<title>pool-2-thread-5 (1 samples, 0.57%)</title><rect x="1169.8" y="981" width="6.7" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1172.77" y="991.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="1136.1" y="581" width="13.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="591.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1129.3" y="661" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1132.31" y="671.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.57%)</title><rect x="225.8" y="773" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="228.77" y="783.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.57%)</title><rect x="1028.2" y="725" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1031.17" y="735.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.57%)</title><rect x="1028.2" y="709" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1031.17" y="719.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.57%)</title><rect x="1028.2" y="677" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1031.17" y="687.5" ></text>
</g>
<g >
<title>sock_read_iter (1 samples, 0.57%)</title><rect x="906.8" y="773" width="6.7" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="909.80" y="783.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.57%)</title><rect x="1183.3" y="933" width="6.7" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="1186.26" y="943.5" ></text>
</g>
<g >
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 2.86%)</title><rect x="16.7" y="789" width="33.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="19.74" y="799.5" >IR..</text>
</g>
<g >
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (16 samples, 9.14%)</title><rect x="16.7" y="853" width="107.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.74" y="863.5" >Compilation::..</text>
</g>
<g >
<title>itable stub (1 samples, 0.57%)</title><rect x="1034.9" y="949" width="6.8" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1037.91" y="959.5" ></text>
</g>
<g >
<title>Parse::do_field_access(bool, bool) (2 samples, 1.14%)</title><rect x="562.9" y="757" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="565.91" y="767.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.57%)</title><rect x="434.8" y="741" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="437.80" y="751.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.57%)</title><rect x="1102.3" y="517" width="6.8" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1105.34" y="527.5" ></text>
</g>
<g >
<title>Ljdk/internal/reflect/NativeMethodAccessorImpl (1 samples, 0.57%)</title><rect x="947.3" y="949" width="6.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="950.26" y="959.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="906.8" y="549" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="559.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="913.5" y="853" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="916.54" y="863.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="947.3" y="693" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="950.26" y="703.5" ></text>
</g>
<g >
<title>Ljava/util/LinkedHashMap$LinkedEntrySet (1 samples, 0.57%)</title><rect x="940.5" y="949" width="6.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="943.51" y="959.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1 samples, 0.57%)</title><rect x="906.8" y="677" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="687.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SocketChannelImpl (1 samples, 0.57%)</title><rect x="906.8" y="965" width="6.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="909.80" y="975.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="906.8" y="421" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="431.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="792.2" y="293" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.57%)</title><rect x="1183.3" y="901" width="6.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1186.26" y="911.5" ></text>
</g>
<g >
<title>Ljava/lang/String (1 samples, 0.57%)</title><rect x="947.3" y="597" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="950.26" y="607.5" ></text>
</g>
<g >
<title>Lorg/springframework/kafka/listener/KafkaMessageListenerContainer$ListenerConsumer (1 samples, 0.57%)</title><rect x="1095.6" y="773" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1098.60" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="947.3" y="773" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="950.26" y="783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="866.3" y="885" width="6.8" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="869.34" y="895.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="549.4" y="101" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="111.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1 samples, 0.57%)</title><rect x="906.8" y="661" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="909.80" y="671.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.57%)</title><rect x="185.3" y="773" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="188.31" y="783.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (6 samples, 3.43%)</title><rect x="610.1" y="949" width="40.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="613.11" y="959.5" >thr..</text>
</g>
<g >
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.57%)</title><rect x="63.9" y="741" width="6.8" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="66.94" y="751.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.57%)</title><rect x="124.6" y="725" width="6.8" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="127.63" y="735.5" ></text>
</g>
<g >
<title>do_writev (1 samples, 0.57%)</title><rect x="825.9" y="661" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="828.89" y="671.5" ></text>
</g>
<g >
<title>Reflection::invoke_method(oopDesc*, Handle, objArrayHandle, Thread*) (1 samples, 0.57%)</title><rect x="947.3" y="869" width="6.7" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="950.26" y="879.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="812.4" y="821" width="20.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="815.40" y="831.5" ></text>
</g>
<g >
<title>Ljava/util/HashMap$KeySpliterator (2 samples, 1.14%)</title><rect x="927.0" y="949" width="13.5" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="930.03" y="959.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.57%)</title><rect x="549.4" y="373" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="383.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (4 samples, 2.29%)</title><rect x="1136.1" y="949" width="26.9" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1139.06" y="959.5" >t..</text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.57%)</title><rect x="906.8" y="757" width="6.7" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="909.80" y="767.5" ></text>
</g>
<g >
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (16 samples, 9.14%)</title><rect x="16.7" y="869" width="107.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.74" y="879.5" >Compiler::com..</text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1136.1" y="645" width="20.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="655.5" ></text>
</g>
<g >
<title>Ljava/util/Formatter (1 samples, 0.57%)</title><rect x="832.6" y="965" width="6.8" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="835.63" y="975.5" ></text>
</g>
<g >
<title>::compile (1 samples, 0.57%)</title><rect x="1142.8" y="469" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1145.80" y="479.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="556.2" y="517" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="527.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.57%)</title><rect x="576.4" y="885" width="6.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="579.40" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="576.4" y="965" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="579.40" y="975.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (1 samples, 0.57%)</title><rect x="1163.0" y="949" width="6.8" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1166.03" y="959.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.57%)</title><rect x="1102.3" y="581" width="6.8" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1105.34" y="591.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="549.4" y="341" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="351.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="549.4" y="453" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="124.6" y="917" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="127.63" y="927.5" ></text>
</g>
<g >
<title>::_copyCurrentContents (1 samples, 0.57%)</title><rect x="1169.8" y="933" width="6.7" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1172.77" y="943.5" ></text>
</g>
<g >
<title>GraphKit::access_store_at(Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.57%)</title><rect x="569.7" y="725" width="6.7" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="572.66" y="735.5" ></text>
</g>
<g >
<title>br_nf_pre_routing (1 samples, 0.57%)</title><rect x="906.8" y="469" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="479.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="549.4" y="437" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="447.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (2 samples, 1.14%)</title><rect x="549.4" y="709" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="719.5" ></text>
</g>
<g >
<title>IntervalWalker::walk_to(int) [clone .constprop.242] (2 samples, 1.14%)</title><rect x="84.2" y="757" width="13.5" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="87.17" y="767.5" ></text>
</g>
<g >
<title>::onSuccess (1 samples, 0.57%)</title><rect x="960.7" y="933" width="6.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="963.74" y="943.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="549.4" y="581" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="591.5" ></text>
</g>
<g >
<title>ena_start_xmit (1 samples, 0.57%)</title><rect x="906.8" y="37" width="6.7" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="909.80" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.57%)</title><rect x="1183.3" y="853" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1186.26" y="863.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="556.2" y="565" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="575.5" ></text>
</g>
<g >
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (8 samples, 4.57%)</title><rect x="252.7" y="805" width="54.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="255.74" y="815.5" >Phase..</text>
</g>
<g >
<title>Lorg/elasticsearch/client/RestHighLevelClient (1 samples, 0.57%)</title><rect x="1136.1" y="533" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1139.06" y="543.5" ></text>
</g>
<g >
<title>br_dev_xmit (1 samples, 0.57%)</title><rect x="792.2" y="197" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="207.5" ></text>
</g>
<g >
<title>::wait (1 samples, 0.57%)</title><rect x="738.2" y="917" width="6.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="741.23" y="927.5" ></text>
</g>
<g >
<title>start_thread (5 samples, 2.86%)</title><rect x="650.6" y="965" width="33.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="653.57" y="975.5" >st..</text>
</g>
<g >
<title>JavaThread::thread_main_inner() (3 samples, 1.71%)</title><rect x="1115.8" y="917" width="20.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1118.83" y="927.5" ></text>
</g>
<g >
<title>::_createUntypedSerializer (1 samples, 0.57%)</title><rect x="1129.3" y="629" width="6.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1132.31" y="639.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="549.4" y="645" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="655.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (2 samples, 1.14%)</title><rect x="691.0" y="917" width="13.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="694.03" y="927.5" ></text>
</g>
<g >
<title>Arena::contains(void const*) const (1 samples, 0.57%)</title><rect x="144.9" y="805" width="6.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="147.86" y="815.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1082.1" y="821" width="27.0" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1085.11" y="831.5" >I..</text>
</g>
<g >
<title>__nf_conntrack_find_get (1 samples, 0.57%)</title><rect x="1028.2" y="629" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1031.17" y="639.5" ></text>
</g>
<g >
<title>Thread::call_run() (5 samples, 2.86%)</title><rect x="650.6" y="933" width="33.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="653.57" y="943.5" >Th..</text>
</g>
<g >
<title>all (175 samples, 100%)</title><rect x="10.0" y="997" width="1180.0" height="15.0" fill="rgb(255,130,130)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="670.8" y="629" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="673.80" y="639.5" ></text>
</g>
<g >
<title>::verifyIncrementalFetchResponsePartitions (1 samples, 0.57%)</title><rect x="954.0" y="933" width="6.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="957.00" y="943.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="798.9" y="453" width="6.8" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="801.91" y="463.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.57%)</title><rect x="792.2" y="181" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="795.17" y="191.5" ></text>
</g>
<g >
<title>wake_up_q (1 samples, 0.57%)</title><rect x="866.3" y="805" width="6.8" height="15.0" fill="rgb(211,111,0)" rx="2" ry="2" />
<text  x="869.34" y="815.5" ></text>
</g>
<g >
<title>Compilation::compile_method() (16 samples, 9.14%)</title><rect x="16.7" y="837" width="107.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.74" y="847.5" >Compilation::..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="1122.6" y="661" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1125.57" y="671.5" ></text>
</g>
<g >
<title>call_stub (2 samples, 1.14%)</title><rect x="691.0" y="837" width="13.5" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="694.03" y="847.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.57%)</title><rect x="1061.9" y="837" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1064.89" y="847.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="691.0" y="821" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="694.03" y="831.5" ></text>
</g>
<g >
<title>__memmove_ssse3_back (1 samples, 0.57%)</title><rect x="401.1" y="693" width="6.7" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="404.09" y="703.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 1.14%)</title><rect x="589.9" y="677" width="13.5" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="592.89" y="687.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.57%)</title><rect x="684.3" y="965" width="6.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="687.29" y="975.5" ></text>
</g>
<g >
<title>PhaseCoalesce::coalesce_driver() (2 samples, 1.14%)</title><rect x="347.1" y="805" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="350.14" y="815.5" ></text>
</g>
<g >
<title>PhaseChaitin::post_allocate_copy_removal() (3 samples, 1.71%)</title><rect x="320.2" y="805" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="323.17" y="815.5" ></text>
</g>
<g >
<title>::backgroundProcess (1 samples, 0.57%)</title><rect x="576.4" y="933" width="6.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="579.40" y="943.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 0.57%)</title><rect x="434.8" y="773" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="437.80" y="783.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.57%)</title><rect x="1163.0" y="773" width="6.8" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1166.03" y="783.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.57%)</title><rect x="792.2" y="53" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="795.17" y="63.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (6 samples, 3.43%)</title><rect x="610.1" y="885" width="40.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="613.11" y="895.5" >Jav..</text>
</g>
<g >
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.57%)</title><rect x="1102.3" y="709" width="6.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1105.34" y="719.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="1136.1" y="565" width="13.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node_trace (1 samples, 0.57%)</title><rect x="792.2" y="85" width="6.7" height="15.0" fill="rgb(220,120,0)" rx="2" ry="2" />
<text  x="795.17" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="1163.0" y="821" width="6.8" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1166.03" y="831.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (4 samples, 2.29%)</title><rect x="1136.1" y="869" width="26.9" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1139.06" y="879.5" >J..</text>
</g>
<g >
<title>start_thread (2 samples, 1.14%)</title><rect x="691.0" y="965" width="13.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="694.03" y="975.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.57%)</title><rect x="549.4" y="277" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="287.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.57%)</title><rect x="792.2" y="405" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="415.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (1 samples, 0.57%)</title><rect x="1061.9" y="789" width="6.7" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1064.89" y="799.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.57%)</title><rect x="798.9" y="469" width="6.8" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="801.91" y="479.5" ></text>
</g>
<g >
<title>::checkDisconnects (1 samples, 0.57%)</title><rect x="758.5" y="933" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="761.46" y="943.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/EPoll (1 samples, 0.57%)</title><rect x="738.2" y="933" width="6.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="741.23" y="943.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.57%)</title><rect x="549.4" y="565" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="575.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.57%)</title><rect x="670.8" y="677" width="6.7" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="673.80" y="687.5" ></text>
</g>
<g >
<title>LIRGenerator::increment_event_counter(CodeEmitInfo*, LIR_OprDesc*, int, bool) (1 samples, 0.57%)</title><rect x="70.7" y="741" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="73.69" y="751.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 2.86%)</title><rect x="16.7" y="757" width="33.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="19.74" y="767.5" >Gr..</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="670.8" y="613" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="673.80" y="623.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/Fetcher (1 samples, 0.57%)</title><rect x="886.6" y="965" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="889.57" y="975.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1136.1" y="821" width="26.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="831.5" >I..</text>
</g>
<g >
<title>Node::out_grow(unsigned int) (1 samples, 0.57%)</title><rect x="549.4" y="53" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="552.43" y="63.5" ></text>
</g>
<g >
<title>::invoke (2 samples, 1.14%)</title><rect x="913.5" y="933" width="13.5" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="916.54" y="943.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="821" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="831.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.57%)</title><rect x="825.9" y="565" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="828.89" y="575.5" ></text>
</g>
<g >
<title>InstanceConstant::constant_value() const (1 samples, 0.57%)</title><rect x="16.7" y="677" width="6.8" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="19.74" y="687.5" ></text>
</g>
<g >
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.57%)</title><rect x="616.9" y="677" width="6.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="619.86" y="687.5" ></text>
</g>
<g >
<title>Thread::call_run() (1 samples, 0.57%)</title><rect x="684.3" y="933" width="6.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="687.29" y="943.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1136.1" y="805" width="26.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="815.5" >I..</text>
</g>
<g >
<title>do_futex (1 samples, 0.57%)</title><rect x="1102.3" y="597" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1105.34" y="607.5" ></text>
</g>
<g >
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.57%)</title><rect x="576.4" y="853" width="6.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="579.40" y="863.5" ></text>
</g>
<g >
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="556.2" y="645" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="559.17" y="655.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.57%)</title><rect x="1102.3" y="501" width="6.8" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1105.34" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="124.6" y="933" width="6.8" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="127.63" y="943.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.57%)</title><rect x="906.8" y="149" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="909.80" y="159.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.57%)</title><rect x="1014.7" y="741" width="6.7" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1017.69" y="751.5" ></text>
</g>
<g >
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 2.86%)</title><rect x="1041.7" y="949" width="33.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="1044.66" y="959.5" >Sh..</text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (2 samples, 1.14%)</title><rect x="691.0" y="869" width="13.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="694.03" y="879.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="725" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="735.5" ></text>
</g>
<g >
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) [clone .part.59] (2 samples, 1.14%)</title><rect x="347.1" y="773" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="350.14" y="783.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.57%)</title><rect x="738.2" y="837" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="741.23" y="847.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="792.2" y="453" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="795.17" y="463.5" ></text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.57%)</title><rect x="792.2" y="469" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="795.17" y="479.5" ></text>
</g>
<g >
<title>sys_epoll_wait (2 samples, 1.14%)</title><rect x="1007.9" y="805" width="13.5" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1010.94" y="815.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (2 samples, 1.14%)</title><rect x="691.0" y="901" width="13.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="694.03" y="911.5" ></text>
</g>
<g >
<title>::wait (3 samples, 1.71%)</title><rect x="583.1" y="901" width="20.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="586.14" y="911.5" ></text>
</g>
<g >
<title>::failExpiredRequests (1 samples, 0.57%)</title><rect x="765.2" y="933" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="768.20" y="943.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="549.4" y="549" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="559.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.57%)</title><rect x="1061.9" y="773" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1064.89" y="783.5" ></text>
</g>
<g >
<title>I2C/C2I adapters (1 samples, 0.57%)</title><rect x="1156.3" y="533" width="6.7" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1159.29" y="543.5" ></text>
</g>
<g >
<title>flush_tlb_func (1 samples, 0.57%)</title><rect x="124.6" y="773" width="6.8" height="15.0" fill="rgb(229,129,0)" rx="2" ry="2" />
<text  x="127.63" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="704.5" y="965" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="707.51" y="975.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe (1 samples, 0.57%)</title><rect x="994.5" y="933" width="6.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="997.46" y="943.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.57%)</title><rect x="1061.9" y="725" width="6.7" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1064.89" y="735.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.57%)</title><rect x="738.2" y="757" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="741.23" y="767.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/core/base/ParserBase (1 samples, 0.57%)</title><rect x="920.3" y="853" width="6.7" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="923.29" y="863.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="556.2" y="613" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="623.5" ></text>
</g>
<g >
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (1 samples, 0.57%)</title><rect x="340.4" y="805" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="343.40" y="815.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.57%)</title><rect x="906.8" y="837" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="909.80" y="847.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="913.5" y="917" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="916.54" y="927.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="725" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="735.5" ></text>
</g>
<g >
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.57%)</title><rect x="70.7" y="757" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="73.69" y="767.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="1014.7" y="677" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1017.69" y="687.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 2.29%)</title><rect x="1082.1" y="965" width="27.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1085.11" y="975.5" >s..</text>
</g>
<g >
<title>tcp_sendmsg (3 samples, 1.71%)</title><rect x="785.4" y="725" width="20.3" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="788.43" y="735.5" ></text>
</g>
<g >
<title>ConnectionGraph::compute_escape() (2 samples, 1.14%)</title><rect x="380.9" y="805" width="13.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="383.86" y="815.5" ></text>
</g>
<g >
<title>::pollNoWakeup (1 samples, 0.57%)</title><rect x="778.7" y="933" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="781.69" y="943.5" ></text>
</g>
<g >
<title>ClassLoaderData::holder_phantom() const (1 samples, 0.57%)</title><rect x="603.4" y="933" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="606.37" y="943.5" ></text>
</g>
<g >
<title>- (2 samples, 1.14%)</title><rect x="1007.9" y="853" width="13.5" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1010.94" y="863.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (16 samples, 9.14%)</title><rect x="401.1" y="805" width="107.9" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="404.09" y="815.5" >PhaseIdealLoo..</text>
</g>
<g >
<title>::getArray (1 samples, 0.57%)</title><rect x="981.0" y="869" width="6.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="983.97" y="879.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/SerializerProvider (1 samples, 0.57%)</title><rect x="1129.3" y="693" width="6.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1132.31" y="703.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.57%)</title><rect x="1028.2" y="693" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="1031.17" y="703.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="981.0" y="917" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="983.97" y="927.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="1102.3" y="677" width="6.8" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1105.34" y="687.5" ></text>
</g>
<g >
<title>::check (1 samples, 0.57%)</title><rect x="637.1" y="693" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="640.09" y="703.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.57%)</title><rect x="906.8" y="485" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="495.5" ></text>
</g>
<g >
<title>resolve_virtual_call (1 samples, 0.57%)</title><rect x="616.9" y="725" width="6.7" height="15.0" fill="rgb(239,107,107)" rx="2" ry="2" />
<text  x="619.86" y="735.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/ConsumerCoordinator (1 samples, 0.57%)</title><rect x="866.3" y="965" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="869.34" y="975.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.57%)</title><rect x="906.8" y="613" width="6.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="909.80" y="623.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.57%)</title><rect x="866.3" y="853" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="869.34" y="863.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1136.1" y="709" width="20.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="719.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="792.2" y="373" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="383.5" ></text>
</g>
<g >
<title>::internalPerformRequest (1 samples, 0.57%)</title><rect x="1142.8" y="533" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1145.80" y="543.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 1.71%)</title><rect x="1115.8" y="965" width="20.3" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1118.83" y="975.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.57%)</title><rect x="1061.9" y="741" width="6.7" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1064.89" y="751.5" ></text>
</g>
<g >
<title>FrameMap::java_calling_convention(GrowableArray&lt;BasicType&gt; const*, bool) (1 samples, 0.57%)</title><rect x="77.4" y="741" width="6.8" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="80.43" y="751.5" ></text>
</g>
<g >
<title>call_stub (1 samples, 0.57%)</title><rect x="947.3" y="821" width="6.7" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="950.26" y="831.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (4 samples, 2.29%)</title><rect x="549.4" y="805" width="27.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="815.5" >P..</text>
</g>
<g >
<title>::execute (1 samples, 0.57%)</title><rect x="947.3" y="725" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="950.26" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="1061.9" y="869" width="6.7" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1064.89" y="879.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="549.4" y="485" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="495.5" ></text>
</g>
<g >
<title>dput (1 samples, 0.57%)</title><rect x="124.6" y="869" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="127.63" y="879.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="1102.3" y="453" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1105.34" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="906.8" y="869" width="6.7" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="909.80" y="879.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::clone_skeleton_predicate(Node*, Node*, Node*, Node*, Node*, IdealLoopTree*, Node*) (1 samples, 0.57%)</title><rect x="407.8" y="725" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="410.83" y="735.5" ></text>
</g>
<g >
<title>Lorg/bson/AbstractBsonWriter (1 samples, 0.57%)</title><rect x="691.0" y="805" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="694.03" y="815.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (66 samples, 37.71%)</title><rect x="131.4" y="901" width="445.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="134.37" y="911.5" >CompileBroker::compiler_thread_loop()</text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.57%)</title><rect x="556.2" y="549" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="738.2" y="853" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="741.23" y="863.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="1061.9" y="885" width="6.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1064.89" y="895.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.57%)</title><rect x="1007.9" y="725" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1010.94" y="735.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.57%)</title><rect x="198.8" y="805" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="201.80" y="815.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (5 samples, 2.86%)</title><rect x="650.6" y="949" width="33.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="653.57" y="959.5" >th..</text>
</g>
<g >
<title>State::MachNodeGenerator(int) (1 samples, 0.57%)</title><rect x="158.3" y="757" width="6.8" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="161.34" y="767.5" ></text>
</g>
<g >
<title>frame::sender(RegisterMap*) const (1 samples, 0.57%)</title><rect x="616.9" y="629" width="6.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="619.86" y="639.5" ></text>
</g>
<g >
<title>__GI__IO_vfprintf (1 samples, 0.57%)</title><rect x="10.0" y="933" width="6.7" height="15.0" fill="rgb(228,91,91)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>napi_gro_receive (1 samples, 0.57%)</title><rect x="1028.2" y="789" width="6.7" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1031.17" y="799.5" ></text>
</g>
<g >
<title>::wait (2 samples, 1.14%)</title><rect x="1007.9" y="885" width="13.5" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1010.94" y="895.5" ></text>
</g>
<g >
<title>::timedRead (1 samples, 0.57%)</title><rect x="697.8" y="789" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="700.77" y="799.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.57%)</title><rect x="1102.3" y="485" width="6.8" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1105.34" y="495.5" ></text>
</g>
<g >
<title>__nf_conntrack_find_get (1 samples, 0.57%)</title><rect x="1028.2" y="613" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1031.17" y="623.5" ></text>
</g>
<g >
<title>::wait (1 samples, 0.57%)</title><rect x="704.5" y="901" width="6.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="707.51" y="911.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.57%)</title><rect x="1061.9" y="677" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="1064.89" y="687.5" ></text>
</g>
<g >
<title>::unpark (1 samples, 0.57%)</title><rect x="994.5" y="917" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="997.46" y="927.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/ConsumerNetworkClient (4 samples, 2.29%)</title><rect x="758.5" y="949" width="26.9" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="761.46" y="959.5" >L..</text>
</g>
<g >
<title>native_flush_tlb_others (1 samples, 0.57%)</title><rect x="124.6" y="789" width="6.8" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="127.63" y="799.5" ></text>
</g>
<g >
<title>::_createUntypedSerializer (1 samples, 0.57%)</title><rect x="1156.3" y="661" width="6.7" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1159.29" y="671.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.57%)</title><rect x="1001.2" y="869" width="6.7" height="15.0" fill="rgb(248,120,120)" rx="2" ry="2" />
<text  x="1004.20" y="879.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/internals/PartitionStates$$Lambda$1090/1857367564 (1 samples, 0.57%)</title><rect x="967.5" y="949" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="970.49" y="959.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.57%)</title><rect x="1001.2" y="725" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1004.20" y="735.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (4 samples, 2.29%)</title><rect x="1136.1" y="901" width="26.9" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1139.06" y="911.5" >t..</text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="549.4" y="213" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="223.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2 samples, 1.14%)</title><rect x="589.9" y="757" width="13.5" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="592.89" y="767.5" ></text>
</g>
<g >
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.57%)</title><rect x="522.5" y="757" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="525.46" y="767.5" ></text>
</g>
<g >
<title>Ljava/io/ObjectStreamField (1 samples, 0.57%)</title><rect x="947.3" y="629" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="950.26" y="639.5" ></text>
</g>
<g >
<title>JavaThread::post_run() (1 samples, 0.57%)</title><rect x="1163.0" y="917" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1166.03" y="927.5" ></text>
</g>
<g >
<title>Node::out_grow(unsigned int) (1 samples, 0.57%)</title><rect x="401.1" y="709" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="404.09" y="719.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="1136.1" y="613" width="13.4" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="623.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (3 samples, 1.71%)</title><rect x="1115.8" y="901" width="20.3" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="1118.83" y="911.5" ></text>
</g>
<g >
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 1.14%)</title><rect x="401.1" y="773" width="13.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="404.09" y="783.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SelectorImpl (2 samples, 1.14%)</title><rect x="1021.4" y="933" width="13.5" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1024.43" y="943.5" ></text>
</g>
<g >
<title>Node::clone() const (1 samples, 0.57%)</title><rect x="401.1" y="725" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="404.09" y="735.5" ></text>
</g>
<g >
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (66 samples, 37.71%)</title><rect x="131.4" y="885" width="445.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="134.37" y="895.5" >CompileBroker::invoke_compiler_on_method(CompileTask*)</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="1102.3" y="645" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1105.34" y="655.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="670.8" y="853" width="6.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="673.80" y="863.5" ></text>
</g>
<g >
<title>GrowableArray&lt;int&gt;::grow(int) (1 samples, 0.57%)</title><rect x="117.9" y="805" width="6.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="120.89" y="815.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="789" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="799.5" ></text>
</g>
<g >
<title>do_readv_writev (3 samples, 1.71%)</title><rect x="785.4" y="789" width="20.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="788.43" y="799.5" ></text>
</g>
<g >
<title>::fetchablePartitions (1 samples, 0.57%)</title><rect x="886.6" y="949" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="889.57" y="959.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_lir_list(LIR_List*) (1 samples, 0.57%)</title><rect x="57.2" y="773" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="60.20" y="783.5" ></text>
</g>
<g >
<title>JavaThread::exit(bool, JavaThread::ExitType) (1 samples, 0.57%)</title><rect x="1163.0" y="901" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1166.03" y="911.5" ></text>
</g>
<g >
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.57%)</title><rect x="569.7" y="741" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="572.66" y="751.5" ></text>
</g>
<g >
<title>br_dev_xmit (1 samples, 0.57%)</title><rect x="906.8" y="245" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="255.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (1 samples, 0.57%)</title><rect x="1163.0" y="853" width="6.8" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="1166.03" y="863.5" ></text>
</g>
<g >
<title>os::javaTimeNanos() (1 samples, 0.57%)</title><rect x="677.5" y="885" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="680.54" y="895.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.57%)</title><rect x="1014.7" y="709" width="6.7" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1017.69" y="719.5" ></text>
</g>
<g >
<title>Interpreter (4 samples, 2.29%)</title><rect x="1136.1" y="757" width="26.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="767.5" >I..</text>
</g>
<g >
<title>do_iter_readv_writev (3 samples, 1.71%)</title><rect x="785.4" y="773" width="20.3" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="788.43" y="783.5" ></text>
</g>
<g >
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.57%)</title><rect x="340.4" y="789" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="343.40" y="799.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="792.2" y="117" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="795.17" y="127.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 1.14%)</title><rect x="30.2" y="661" width="13.5" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="33.23" y="671.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/Fetcher$1 (1 samples, 0.57%)</title><rect x="960.7" y="949" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="963.74" y="959.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="792.2" y="501" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="511.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.57%)</title><rect x="738.2" y="709" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="741.23" y="719.5" ></text>
</g>
<g >
<title>Node::is_CFG() const (1 samples, 0.57%)</title><rect x="535.9" y="773" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="538.94" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="773" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="783.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (4 samples, 2.29%)</title><rect x="549.4" y="773" width="27.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="783.5" >P..</text>
</g>
<g >
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.57%)</title><rect x="542.7" y="821" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="545.69" y="831.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (1 samples, 0.57%)</title><rect x="684.3" y="949" width="6.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="687.29" y="959.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1136.1" y="501" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="511.5" ></text>
</g>
<g >
<title>Matcher::xform(Node*, int) (2 samples, 1.14%)</title><rect x="151.6" y="805" width="13.5" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="154.60" y="815.5" ></text>
</g>
<g >
<title>start_thread (16 samples, 9.14%)</title><rect x="16.7" y="965" width="107.9" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="19.74" y="975.5" >start_thread</text>
</g>
<g >
<title>process_backlog (2 samples, 1.14%)</title><rect x="792.2" y="533" width="13.5" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="795.17" y="543.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.57%)</title><rect x="798.9" y="437" width="6.8" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="801.91" y="447.5" ></text>
</g>
<g >
<title>OopMapStream::find_next() (1 samples, 0.57%)</title><rect x="616.9" y="581" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="619.86" y="591.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) [clone .part.110] (3 samples, 1.71%)</title><rect x="482.0" y="773" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="485.00" y="783.5" ></text>
</g>
<g >
<title>start_thread (66 samples, 37.71%)</title><rect x="131.4" y="965" width="445.0" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="134.37" y="975.5" >start_thread</text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.57%)</title><rect x="792.2" y="69" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="795.17" y="79.5" ></text>
</g>
<g >
<title>pool-2-thread-2 (4 samples, 2.29%)</title><rect x="1136.1" y="981" width="26.9" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1139.06" y="991.5" >p..</text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.57%)</title><rect x="798.9" y="485" width="6.8" height="15.0" fill="rgb(248,148,0)" rx="2" ry="2" />
<text  x="801.91" y="495.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (4 samples, 2.29%)</title><rect x="1082.1" y="869" width="27.0" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1085.11" y="879.5" >J..</text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="630.3" y="725" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="633.34" y="735.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (1 samples, 0.57%)</title><rect x="1176.5" y="885" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1179.51" y="895.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.57%)</title><rect x="670.8" y="709" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="673.80" y="719.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1136.1" y="661" width="20.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="671.5" ></text>
</g>
<g >
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.57%)</title><rect x="522.5" y="789" width="6.7" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="525.46" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.57%)</title><rect x="906.8" y="629" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="909.80" y="639.5" ></text>
</g>
<g >
<title>br_pass_frame_up (1 samples, 0.57%)</title><rect x="906.8" y="309" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="319.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="1102.3" y="773" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1105.34" y="783.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.57%)</title><rect x="906.8" y="405" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="415.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (2 samples, 1.14%)</title><rect x="401.1" y="757" width="13.5" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="404.09" y="767.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/clients/consumer/internals/SubscriptionState (1 samples, 0.57%)</title><rect x="893.3" y="965" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="896.31" y="975.5" ></text>
</g>
<g >
<title>::size (1 samples, 0.57%)</title><rect x="1082.1" y="757" width="6.8" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1085.11" y="767.5" ></text>
</g>
<g >
<title>sock_write_iter (3 samples, 1.71%)</title><rect x="785.4" y="757" width="20.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="788.43" y="767.5" ></text>
</g>
<g >
<title>Compilation::emit_lir() (7 samples, 4.00%)</title><rect x="70.7" y="805" width="47.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="73.69" y="815.5" >Comp..</text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/SerializerProvider (1 samples, 0.57%)</title><rect x="1156.3" y="725" width="6.7" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1159.29" y="735.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (6 samples, 3.43%)</title><rect x="610.1" y="917" width="40.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="613.11" y="927.5" >Jav..</text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.57%)</title><rect x="798.9" y="373" width="6.8" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="801.91" y="383.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 1.14%)</title><rect x="792.2" y="549" width="13.5" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="795.17" y="559.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.57%)</title><rect x="1102.3" y="549" width="6.8" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1105.34" y="559.5" ></text>
</g>
<g >
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.57%)</title><rect x="562.9" y="709" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="565.91" y="719.5" ></text>
</g>
<g >
<title>start_thread (4 samples, 2.29%)</title><rect x="1136.1" y="965" width="26.9" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="1139.06" y="975.5" >s..</text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.57%)</title><rect x="792.2" y="357" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="367.5" ></text>
</g>
<g >
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.57%)</title><rect x="1102.3" y="741" width="6.8" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="1105.34" y="751.5" ></text>
</g>
<g >
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.57%)</title><rect x="63.9" y="725" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="66.94" y="735.5" ></text>
</g>
<g >
<title>Compilation::build_hir() [clone .part.96] (6 samples, 3.43%)</title><rect x="16.7" y="805" width="40.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.74" y="815.5" >Com..</text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.57%)</title><rect x="30.2" y="629" width="6.8" height="15.0" fill="rgb(230,94,94)" rx="2" ry="2" />
<text  x="33.23" y="639.5" ></text>
</g>
<g >
<title>start_thread (6 samples, 3.43%)</title><rect x="610.1" y="965" width="40.5" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="613.11" y="975.5" >sta..</text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.57%)</title><rect x="1055.1" y="901" width="6.8" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1058.14" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="825.9" y="693" width="6.7" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="828.89" y="703.5" ></text>
</g>
<g >
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 1.71%)</title><rect x="1048.4" y="917" width="20.2" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1051.40" y="927.5" ></text>
</g>
<g >
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 1.14%)</title><rect x="401.1" y="789" width="13.5" height="15.0" fill="rgb(219,219,66)" rx="2" ry="2" />
<text  x="404.09" y="799.5" ></text>
</g>
<g >
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.57%)</title><rect x="192.1" y="773" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="195.06" y="783.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.57%)</title><rect x="1014.7" y="725" width="6.7" height="15.0" fill="rgb(236,136,0)" rx="2" ry="2" />
<text  x="1017.69" y="735.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="757" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="767.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="549.4" y="325" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="335.5" ></text>
</g>
<g >
<title>call_stub (1 samples, 0.57%)</title><rect x="1176.5" y="837" width="6.8" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1179.51" y="847.5" ></text>
</g>
<g >
<title>Compilation::emit_code_body() (2 samples, 1.14%)</title><rect x="57.2" y="805" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="60.20" y="815.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.57%)</title><rect x="906.8" y="597" width="6.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="909.80" y="607.5" ></text>
</g>
<g >
<title>BlockList::iterate_forward(BlockClosure*) (2 samples, 1.14%)</title><rect x="70.7" y="789" width="13.5" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="73.69" y="799.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="792.2" y="389" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="795.17" y="399.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (3 samples, 1.71%)</title><rect x="785.4" y="709" width="20.3" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="788.43" y="719.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SelectorImpl (1 samples, 0.57%)</title><rect x="704.5" y="949" width="6.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="707.51" y="959.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.57%)</title><rect x="798.9" y="421" width="6.8" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="801.91" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (2 samples, 1.14%)</title><rect x="589.9" y="853" width="13.5" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="592.89" y="863.5" ></text>
</g>
<g >
<title>__memset_sse2 (1 samples, 0.57%)</title><rect x="509.0" y="805" width="6.7" height="15.0" fill="rgb(236,102,102)" rx="2" ry="2" />
<text  x="511.97" y="815.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.57%)</title><rect x="1163.0" y="789" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1166.03" y="799.5" ></text>
</g>
<g >
<title>::parseProtocolVersion (1 samples, 0.57%)</title><rect x="623.6" y="757" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="626.60" y="767.5" ></text>
</g>
<g >
<title>call_stub (4 samples, 2.29%)</title><rect x="1082.1" y="837" width="27.0" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1085.11" y="847.5" >c..</text>
</g>
<g >
<title>tcp_poll (1 samples, 0.57%)</title><rect x="1001.2" y="757" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1004.20" y="767.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (2 samples, 1.14%)</title><rect x="549.4" y="741" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="751.5" ></text>
</g>
<g >
<title>Parse::do_call() (2 samples, 1.14%)</title><rect x="549.4" y="661" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="671.5" ></text>
</g>
<g >
<title>::process (1 samples, 0.57%)</title><rect x="947.3" y="661" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="950.26" y="671.5" ></text>
</g>
<g >
<title>jfr_is_event_enabled(JfrEventId) (1 samples, 0.57%)</title><rect x="1068.6" y="917" width="6.8" height="15.0" fill="rgb(235,101,101)" rx="2" ry="2" />
<text  x="1071.63" y="927.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (1 samples, 0.57%)</title><rect x="1176.5" y="917" width="6.8" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1179.51" y="927.5" ></text>
</g>
<g >
<title>kafka-coordinat (18 samples, 10.29%)</title><rect x="711.3" y="981" width="121.3" height="15.0" fill="rgb(226,87,87)" rx="2" ry="2" />
<text  x="714.26" y="991.5" >kafka-coordinat</text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="556.2" y="501" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="511.5" ></text>
</g>
<g >
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.57%)</title><rect x="63.9" y="757" width="6.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="66.94" y="767.5" ></text>
</g>
<g >
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.57%)</title><rect x="556.2" y="405" width="6.7" height="15.0" fill="rgb(224,224,67)" rx="2" ry="2" />
<text  x="559.17" y="415.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.57%)</title><rect x="124.6" y="853" width="6.8" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="127.63" y="863.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (2 samples, 1.14%)</title><rect x="549.4" y="677" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="687.5" ></text>
</g>
<g >
<title>_complete_monitor_locking_Java (5 samples, 2.86%)</title><rect x="1041.7" y="965" width="33.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1044.66" y="975.5" >_c..</text>
</g>
<g >
<title>CardTableBarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.57%)</title><rect x="569.7" y="677" width="6.7" height="15.0" fill="rgb(201,201,59)" rx="2" ry="2" />
<text  x="572.66" y="687.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="906.8" y="341" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="909.80" y="351.5" ></text>
</g>
<g >
<title>::writeStartDocument (1 samples, 0.57%)</title><rect x="691.0" y="789" width="6.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="694.03" y="799.5" ></text>
</g>
<g >
<title>::lockAndDoSelect (1 samples, 0.57%)</title><rect x="704.5" y="933" width="6.8" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="707.51" y="943.5" ></text>
</g>
<g >
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.57%)</title><rect x="158.3" y="773" width="6.8" height="15.0" fill="rgb(199,199,58)" rx="2" ry="2" />
<text  x="161.34" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="1115.8" y="581" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="591.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.57%)</title><rect x="792.2" y="213" width="6.7" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="795.17" y="223.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (1 samples, 0.57%)</title><rect x="1061.9" y="901" width="6.7" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="1064.89" y="911.5" ></text>
</g>
<g >
<title>ep_poll (2 samples, 1.14%)</title><rect x="1007.9" y="773" width="13.5" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1010.94" y="783.5" ></text>
</g>
<g >
<title>JVM_MonitorWait (1 samples, 0.57%)</title><rect x="825.9" y="773" width="6.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="828.89" y="783.5" ></text>
</g>
<g >
<title>timerqueue_add (1 samples, 0.57%)</title><rect x="1183.3" y="885" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="1186.26" y="895.5" ></text>
</g>
<g >
<title>- (3 samples, 1.71%)</title><rect x="785.4" y="869" width="20.3" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="788.43" y="879.5" ></text>
</g>
<g >
<title>Ljava/util/Formatter (1 samples, 0.57%)</title><rect x="711.3" y="965" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="714.26" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="670.8" y="837" width="6.7" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="673.80" y="847.5" ></text>
</g>
<g >
<title>::mapAbstractType (1 samples, 0.57%)</title><rect x="1149.5" y="613" width="6.8" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="1152.54" y="623.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.57%)</title><rect x="906.8" y="293" width="6.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="909.80" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (2 samples, 1.14%)</title><rect x="1007.9" y="837" width="13.5" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1010.94" y="847.5" ></text>
</g>
<g >
<title>::processResponse (2 samples, 1.14%)</title><rect x="630.3" y="757" width="13.5" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="633.34" y="767.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (1 samples, 0.57%)</title><rect x="785.4" y="645" width="6.8" height="15.0" fill="rgb(225,125,0)" rx="2" ry="2" />
<text  x="788.43" y="655.5" ></text>
</g>
<g >
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.57%)</title><rect x="562.9" y="677" width="6.8" height="15.0" fill="rgb(216,216,65)" rx="2" ry="2" />
<text  x="565.91" y="687.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="630.3" y="741" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="633.34" y="751.5" ></text>
</g>
<g >
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.57%)</title><rect x="205.5" y="805" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="208.54" y="815.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="1055.1" y="869" width="6.8" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1058.14" y="879.5" ></text>
</g>
<g >
<title>::parse (1 samples, 0.57%)</title><rect x="711.3" y="949" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="714.26" y="959.5" ></text>
</g>
<g >
<title>::read (1 samples, 0.57%)</title><rect x="906.8" y="949" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="909.80" y="959.5" ></text>
</g>
<g >
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.57%)</title><rect x="266.2" y="789" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="269.23" y="799.5" ></text>
</g>
<g >
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 1.71%)</title><rect x="23.5" y="725" width="20.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="26.49" y="735.5" ></text>
</g>
<g >
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.57%)</title><rect x="131.4" y="789" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="134.37" y="799.5" ></text>
</g>
<g >
<title>::internalPerformRequest (1 samples, 0.57%)</title><rect x="1136.1" y="517" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="1139.06" y="527.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="549.4" y="165" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="175.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.57%)</title><rect x="906.8" y="741" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="909.80" y="751.5" ></text>
</g>
<g >
<title>::ctl (1 samples, 0.57%)</title><rect x="1001.2" y="885" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="1004.20" y="895.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="947.3" y="645" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="950.26" y="655.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="913.5" y="901" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="916.54" y="911.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (3 samples, 1.71%)</title><rect x="812.4" y="869" width="20.2" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="815.40" y="879.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="913.5" y="885" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="916.54" y="895.5" ></text>
</g>
<g >
<title>Unsafe_Unpark (1 samples, 0.57%)</title><rect x="994.5" y="901" width="6.7" height="15.0" fill="rgb(240,108,108)" rx="2" ry="2" />
<text  x="997.46" y="911.5" ></text>
</g>
<g >
<title>::close (1 samples, 0.57%)</title><rect x="920.3" y="837" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="923.29" y="847.5" ></text>
</g>
<g >
<title>br_nf_pre_routing_finish (1 samples, 0.57%)</title><rect x="792.2" y="437" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="447.5" ></text>
</g>
<g >
<title>call_stub (3 samples, 1.71%)</title><rect x="1115.8" y="837" width="20.3" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1118.83" y="847.5" ></text>
</g>
<g >
<title>StringTable::intern(Handle, unsigned short const*, int, Thread*) (1 samples, 0.57%)</title><rect x="947.3" y="533" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="950.26" y="543.5" ></text>
</g>
<g >
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.57%)</title><rect x="1102.3" y="725" width="6.8" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="1105.34" y="735.5" ></text>
</g>
<g >
<title>CompileBroker::compiler_thread_loop() (16 samples, 9.14%)</title><rect x="16.7" y="901" width="107.9" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.74" y="911.5" >CompileBroker..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.57%)</title><rect x="866.3" y="789" width="6.8" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="869.34" y="799.5" ></text>
</g>
<g >
<title>pool-2-thread-1 (4 samples, 2.29%)</title><rect x="1109.1" y="981" width="27.0" height="15.0" fill="rgb(247,119,119)" rx="2" ry="2" />
<text  x="1112.09" y="991.5" >p..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.57%)</title><rect x="1183.3" y="917" width="6.7" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="1186.26" y="927.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (1 samples, 0.57%)</title><rect x="1001.2" y="741" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="1004.20" y="751.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_late_post_work(Node*, bool) (4 samples, 2.29%)</title><rect x="448.3" y="773" width="27.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="451.29" y="783.5" >P..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1142.8" y="517" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1145.80" y="527.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (1 samples, 0.57%)</title><rect x="792.2" y="309" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="319.5" ></text>
</g>
<g >
<title>StringTable::do_lookup(unsigned short const*, int, unsigned long) (1 samples, 0.57%)</title><rect x="947.3" y="517" width="6.7" height="15.0" fill="rgb(212,212,63)" rx="2" ry="2" />
<text  x="950.26" y="527.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Klass*, Symbol*, Symbol*, JavaCallArguments*, Thread*) (3 samples, 1.71%)</title><rect x="1115.8" y="869" width="20.3" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1118.83" y="879.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1142.8" y="501" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1145.80" y="511.5" ></text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="556.2" y="469" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="479.5" ></text>
</g>
<g >
<title>::_addInjectables (1 samples, 0.57%)</title><rect x="1129.3" y="565" width="6.8" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="1132.31" y="575.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.57%)</title><rect x="1102.3" y="613" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1105.34" y="623.5" ></text>
</g>
<g >
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) [clone .part.357] (3 samples, 1.71%)</title><rect x="23.5" y="693" width="20.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="26.49" y="703.5" ></text>
</g>
<g >
<title>netif_set_xps_queue (1 samples, 0.57%)</title><rect x="1028.2" y="741" width="6.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1031.17" y="751.5" ></text>
</g>
<g >
<title>IfNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.57%)</title><rect x="522.5" y="773" width="6.7" height="15.0" fill="rgb(216,216,64)" rx="2" ry="2" />
<text  x="525.46" y="783.5" ></text>
</g>
<g >
<title>br_handle_frame (1 samples, 0.57%)</title><rect x="792.2" y="485" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="495.5" ></text>
</g>
<g >
<title>Thread::call_run() (6 samples, 3.43%)</title><rect x="610.1" y="933" width="40.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="613.11" y="943.5" >Thr..</text>
</g>
<g >
<title>hrtimer_wakeup (2 samples, 1.14%)</title><rect x="1007.9" y="757" width="13.5" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="1010.94" y="767.5" ></text>
</g>
<g >
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.57%)</title><rect x="63.9" y="773" width="6.8" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="66.94" y="783.5" ></text>
</g>
<g >
<title>sys_munmap (1 samples, 0.57%)</title><rect x="124.6" y="901" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="127.63" y="911.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.57%)</title><rect x="488.7" y="757" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="491.74" y="767.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.57%)</title><rect x="738.2" y="805" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="741.23" y="815.5" ></text>
</g>
<g >
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.57%)</title><rect x="549.4" y="533" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="543.5" ></text>
</g>
<g >
<title>ObjectSynchronizer::wait(Handle, long, Thread*) (1 samples, 0.57%)</title><rect x="825.9" y="757" width="6.7" height="15.0" fill="rgb(193,193,56)" rx="2" ry="2" />
<text  x="828.89" y="767.5" ></text>
</g>
<g >
<title>DebugInformationRecorder::add_safepoint(int, OopMap*) (1 samples, 0.57%)</title><rect x="57.2" y="693" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="60.20" y="703.5" ></text>
</g>
<g >
<title>I2C/C2I adapters (1 samples, 0.57%)</title><rect x="1136.1" y="485" width="6.7" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="1139.06" y="495.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="906.8" y="437" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="909.80" y="447.5" ></text>
</g>
<g >
<title>SyS_epoll_ctl (1 samples, 0.57%)</title><rect x="1001.2" y="805" width="6.7" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="1004.20" y="815.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/network/Selector (3 samples, 1.71%)</title><rect x="1001.2" y="933" width="20.2" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="1004.20" y="943.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.57%)</title><rect x="825.9" y="597" width="6.7" height="15.0" fill="rgb(234,134,0)" rx="2" ry="2" />
<text  x="828.89" y="607.5" ></text>
</g>
<g >
<title>Ljdk/internal/misc/Unsafe (1 samples, 0.57%)</title><rect x="805.7" y="933" width="6.7" height="15.0" fill="rgb(84,231,84)" rx="2" ry="2" />
<text  x="808.66" y="943.5" ></text>
</g>
<g >
<title>Parse::do_call() (2 samples, 1.14%)</title><rect x="549.4" y="757" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="767.5" ></text>
</g>
<g >
<title>::writev0 (3 samples, 1.71%)</title><rect x="785.4" y="901" width="20.3" height="15.0" fill="rgb(202,202,60)" rx="2" ry="2" />
<text  x="788.43" y="911.5" ></text>
</g>
<g >
<title>I2C/C2I adapters (1 samples, 0.57%)</title><rect x="610.1" y="773" width="6.8" height="15.0" fill="rgb(236,103,103)" rx="2" ry="2" />
<text  x="613.11" y="783.5" ></text>
</g>
<g >
<title>_dl_update_slotinfo (1 samples, 0.57%)</title><rect x="549.4" y="37" width="6.8" height="15.0" fill="rgb(244,114,114)" rx="2" ry="2" />
<text  x="552.43" y="47.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.57%)</title><rect x="1176.5" y="693" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="703.5" ></text>
</g>
<g >
<title>Parse::do_get_xxx(Node*, ciField*, bool) [clone .constprop.51] (1 samples, 0.57%)</title><rect x="562.9" y="741" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="565.91" y="751.5" ></text>
</g>
<g >
<title>::isUpdateDue (1 samples, 0.57%)</title><rect x="859.6" y="949" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="862.60" y="959.5" ></text>
</g>
<g >
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.57%)</title><rect x="37.0" y="629" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="39.97" y="639.5" ></text>
</g>
<g >
<title>thread_entry(JavaThread*, Thread*) (6 samples, 3.43%)</title><rect x="610.1" y="901" width="40.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="613.11" y="911.5" >thr..</text>
</g>
<g >
<title>Parse::do_one_bytecode() (1 samples, 0.57%)</title><rect x="549.4" y="197" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="207.5" ></text>
</g>
<g >
<title>Lorg/apache/catalina/core/StandardWrapper (1 samples, 0.57%)</title><rect x="576.4" y="949" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="579.40" y="959.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.57%)</title><rect x="549.4" y="357" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="367.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="629" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="639.5" ></text>
</g>
<g >
<title>Lorg/apache/http/impl/nio/DefaultNHttpClientConnection (1 samples, 0.57%)</title><rect x="616.9" y="773" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="619.86" y="783.5" ></text>
</g>
<g >
<title>ConnectionGraph::optimize_ptr_compare(Node*) (1 samples, 0.57%)</title><rect x="387.6" y="773" width="6.7" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="390.60" y="783.5" ></text>
</g>
<g >
<title>ip_finish_output (2 samples, 1.14%)</title><rect x="792.2" y="661" width="13.5" height="15.0" fill="rgb(230,130,0)" rx="2" ry="2" />
<text  x="795.17" y="671.5" ></text>
</g>
<g >
<title>RegionNode::is_CFG() const (1 samples, 0.57%)</title><rect x="475.3" y="773" width="6.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="478.26" y="783.5" ></text>
</g>
<g >
<title>LIR_List::metadata2reg(Metadata*, LIR_OprDesc*) (1 samples, 0.57%)</title><rect x="70.7" y="709" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="73.69" y="719.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 1.14%)</title><rect x="589.9" y="709" width="13.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="592.89" y="719.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.57%)</title><rect x="1001.2" y="789" width="6.7" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1004.20" y="799.5" ></text>
</g>
<g >
<title>LIRGenerator::increment_event_counter_impl(CodeEmitInfo*, ciMethod*, LIR_OprDesc*, int, int, bool, bool) (1 samples, 0.57%)</title><rect x="70.7" y="725" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="73.69" y="735.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::dom_lca_internal(Node*, Node*) const [clone .part.144] (1 samples, 0.57%)</title><rect x="495.5" y="741" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="498.49" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="866.3" y="869" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="869.34" y="879.5" ></text>
</g>
<g >
<title>call_stub (4 samples, 2.29%)</title><rect x="1136.1" y="837" width="26.9" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="1139.06" y="847.5" >c..</text>
</g>
<g >
<title>Lorg/apache/http/util/Asserts (1 samples, 0.57%)</title><rect x="637.1" y="709" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="640.09" y="719.5" ></text>
</g>
<g >
<title>Lorg/apache/http/util/TextUtils (1 samples, 0.57%)</title><rect x="643.8" y="773" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="646.83" y="783.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 1.14%)</title><rect x="589.9" y="837" width="13.5" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="592.89" y="847.5" ></text>
</g>
<g >
<title>PhaseIterGVN::optimize() (4 samples, 2.29%)</title><rect x="515.7" y="821" width="27.0" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="518.71" y="831.5" >P..</text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="709" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="719.5" ></text>
</g>
<g >
<title>ParseGenerator::generate(JVMState*) (4 samples, 2.29%)</title><rect x="549.4" y="837" width="27.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="847.5" >P..</text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/introspect/BasicBeanDescription (1 samples, 0.57%)</title><rect x="1129.3" y="613" width="6.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1132.31" y="623.5" ></text>
</g>
<g >
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.57%)</title><rect x="542.7" y="805" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="545.69" y="815.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="709" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="719.5" ></text>
</g>
<g >
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.57%)</title><rect x="542.7" y="789" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="545.69" y="799.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.57%)</title><rect x="798.9" y="293" width="6.8" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="801.91" y="303.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="597" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="607.5" ></text>
</g>
<g >
<title>sock_sendmsg (3 samples, 1.71%)</title><rect x="785.4" y="741" width="20.3" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="788.43" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="670.8" y="821" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="673.80" y="831.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="565" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="575.5" ></text>
</g>
<g >
<title>frame::sender_for_compiled_frame(RegisterMap*) const (1 samples, 0.57%)</title><rect x="616.9" y="613" width="6.7" height="15.0" fill="rgb(220,220,66)" rx="2" ry="2" />
<text  x="619.86" y="623.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.57%)</title><rect x="1061.9" y="709" width="6.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1064.89" y="719.5" ></text>
</g>
<g >
<title>ProjNode::Opcode() const (1 samples, 0.57%)</title><rect x="502.2" y="789" width="6.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="505.23" y="799.5" ></text>
</g>
<g >
<title>VM Periodic Tas (5 samples, 2.86%)</title><rect x="650.6" y="981" width="33.7" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="653.57" y="991.5" >VM..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1115.8" y="629" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="639.5" ></text>
</g>
<g >
<title>Compile::Output() (2 samples, 1.14%)</title><rect x="131.4" y="821" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="134.37" y="831.5" ></text>
</g>
<g >
<title>do_softirq.part.18 (1 samples, 0.57%)</title><rect x="906.8" y="645" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="909.80" y="655.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1136.1" y="693" width="20.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="703.5" ></text>
</g>
<g >
<title>LinearScan::do_linear_scan() (5 samples, 2.86%)</title><rect x="84.2" y="789" width="33.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="87.17" y="799.5" >Li..</text>
</g>
<g >
<title>VMThread::run() (1 samples, 0.57%)</title><rect x="684.3" y="917" width="6.7" height="15.0" fill="rgb(218,218,65)" rx="2" ry="2" />
<text  x="687.29" y="927.5" ></text>
</g>
<g >
<title>Parse::do_call() (1 samples, 0.57%)</title><rect x="549.4" y="469" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="479.5" ></text>
</g>
<g >
<title>Thread::call_run() (66 samples, 37.71%)</title><rect x="131.4" y="933" width="445.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="134.37" y="943.5" >Thread::call_run()</text>
</g>
<g >
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 1.71%)</title><rect x="23.5" y="677" width="20.2" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="26.49" y="687.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 1.14%)</title><rect x="792.2" y="565" width="13.5" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="795.17" y="575.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="581" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="591.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="913.5" y="869" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="916.54" y="879.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="1115.8" y="693" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="703.5" ></text>
</g>
<g >
<title>IR::compute_code() (1 samples, 0.57%)</title><rect x="50.5" y="789" width="6.7" height="15.0" fill="rgb(210,210,62)" rx="2" ry="2" />
<text  x="53.46" y="799.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 1.14%)</title><rect x="1007.9" y="789" width="13.5" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="1010.94" y="799.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/core/JsonGenerator (1 samples, 0.57%)</title><rect x="1169.8" y="949" width="6.7" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1172.77" y="959.5" ></text>
</g>
<g >
<title>JVM_InvokeMethod (1 samples, 0.57%)</title><rect x="947.3" y="885" width="6.7" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="950.26" y="895.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/EPoll (3 samples, 1.71%)</title><rect x="1001.2" y="901" width="20.2" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="1004.20" y="911.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 3.43%)</title><rect x="610.1" y="853" width="40.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="613.11" y="863.5" >Jav..</text>
</g>
<g >
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.57%)</title><rect x="57.2" y="757" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="60.20" y="767.5" ></text>
</g>
<g >
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 1.14%)</title><rect x="380.9" y="821" width="13.4" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="383.86" y="831.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.57%)</title><rect x="906.8" y="501" width="6.7" height="15.0" fill="rgb(240,140,0)" rx="2" ry="2" />
<text  x="909.80" y="511.5" ></text>
</g>
<g >
<title>kvm_clock_get_cycles (1 samples, 0.57%)</title><rect x="1028.2" y="757" width="6.7" height="15.0" fill="rgb(226,126,0)" rx="2" ry="2" />
<text  x="1031.17" y="767.5" ></text>
</g>
<g >
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 1.71%)</title><rect x="421.3" y="789" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="424.31" y="799.5" ></text>
</g>
<g >
<title>thread_native_entry(Thread*) (2 samples, 1.14%)</title><rect x="691.0" y="949" width="13.5" height="15.0" fill="rgb(232,97,97)" rx="2" ry="2" />
<text  x="694.03" y="959.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.57%)</title><rect x="670.8" y="789" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="673.80" y="799.5" ></text>
</g>
<g >
<title>::get (1 samples, 0.57%)</title><rect x="1109.1" y="933" width="6.7" height="15.0" fill="rgb(205,205,61)" rx="2" ry="2" />
<text  x="1112.09" y="943.5" ></text>
</g>
<g >
<title>PhaseIFG::init(unsigned int) (1 samples, 0.57%)</title><rect x="360.6" y="805" width="6.8" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="363.63" y="815.5" ></text>
</g>
<g >
<title>Lorg/apache/http/impl/nio/client/InternalHttpAsyncClient (1 samples, 0.57%)</title><rect x="947.3" y="741" width="6.7" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="950.26" y="751.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (1 samples, 0.57%)</title><rect x="825.9" y="725" width="6.7" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="828.89" y="735.5" ></text>
</g>
<g >
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.57%)</title><rect x="562.9" y="725" width="6.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="565.91" y="735.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="549" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="559.5" ></text>
</g>
<g >
<title>cluster-Cluster (2 samples, 1.14%)</title><rect x="691.0" y="981" width="13.5" height="15.0" fill="rgb(219,79,79)" rx="2" ry="2" />
<text  x="694.03" y="991.5" ></text>
</g>
<g >
<title>PhaseCFG::do_global_code_motion() (3 samples, 1.71%)</title><rect x="178.6" y="821" width="20.2" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="181.57" y="831.5" ></text>
</g>
<g >
<title>ConnectionGraph::optimize_ideal_graph(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;Node*&gt;&amp;) (1 samples, 0.57%)</title><rect x="387.6" y="789" width="6.7" height="15.0" fill="rgb(213,213,64)" rx="2" ry="2" />
<text  x="390.60" y="799.5" ></text>
</g>
<g >
<title>Lorg/apache/kafka/common/network/Selector (4 samples, 2.29%)</title><rect x="724.7" y="965" width="27.0" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="727.74" y="975.5" >L..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (3 samples, 1.71%)</title><rect x="785.4" y="853" width="20.3" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="788.43" y="863.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/deser/BasicDeserializerFactory (1 samples, 0.57%)</title><rect x="1149.5" y="629" width="6.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1152.54" y="639.5" ></text>
</g>
<g >
<title>Compilation::compile_java_method() (15 samples, 8.57%)</title><rect x="16.7" y="821" width="101.2" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="19.74" y="831.5" >Compilation:..</text>
</g>
<g >
<title>Chunk::next_chop() (1 samples, 0.57%)</title><rect x="151.6" y="773" width="6.7" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="154.60" y="783.5" ></text>
</g>
<g >
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 1.14%)</title><rect x="691.0" y="853" width="13.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="694.03" y="863.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.57%)</title><rect x="906.8" y="821" width="6.7" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="909.80" y="831.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1156.3" y="693" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1159.29" y="703.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="549.4" y="229" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="239.5" ></text>
</g>
<g >
<title>__pthread_cond_signal (1 samples, 0.57%)</title><rect x="866.3" y="917" width="6.8" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="869.34" y="927.5" ></text>
</g>
<g >
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.57%)</title><rect x="43.7" y="725" width="6.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="46.71" y="735.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="549.4" y="133" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="143.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="1001.2" y="853" width="6.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="1004.20" y="863.5" ></text>
</g>
<g >
<title>::findTypedValueSerializer (1 samples, 0.57%)</title><rect x="1129.3" y="677" width="6.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1132.31" y="687.5" ></text>
</g>
<g >
<title>::&lt;init&gt; (1 samples, 0.57%)</title><rect x="947.3" y="613" width="6.7" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="950.26" y="623.5" ></text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="549.4" y="613" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="623.5" ></text>
</g>
<g >
<title>JavaThread::thread_main_inner() (16 samples, 9.14%)</title><rect x="16.7" y="917" width="107.9" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="19.74" y="927.5" >JavaThread::t..</text>
</g>
<g >
<title>Parse::do_all_blocks() (1 samples, 0.57%)</title><rect x="556.2" y="597" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="607.5" ></text>
</g>
<g >
<title>Interpreter (2 samples, 1.14%)</title><rect x="1115.8" y="677" width="13.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="687.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1136.1" y="549" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="559.5" ></text>
</g>
<g >
<title>ena_start_xmit (1 samples, 0.57%)</title><rect x="906.8" y="53" width="6.7" height="15.0" fill="rgb(251,151,0)" rx="2" ry="2" />
<text  x="909.80" y="63.5" ></text>
</g>
<g >
<title>::poll (3 samples, 1.71%)</title><rect x="724.7" y="949" width="20.3" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="727.74" y="959.5" ></text>
</g>
<g >
<title>::cancellationRequested (1 samples, 0.57%)</title><rect x="852.9" y="949" width="6.7" height="15.0" fill="rgb(208,208,62)" rx="2" ry="2" />
<text  x="855.86" y="959.5" ></text>
</g>
<g >
<title>::findTypedValueSerializer (1 samples, 0.57%)</title><rect x="1115.8" y="645" width="6.8" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="1118.83" y="655.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (2 samples, 1.14%)</title><rect x="589.9" y="773" width="13.5" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="592.89" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="981.0" y="901" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="983.97" y="911.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (2 samples, 1.14%)</title><rect x="589.9" y="725" width="13.5" height="15.0" fill="rgb(232,132,0)" rx="2" ry="2" />
<text  x="592.89" y="735.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (2 samples, 1.14%)</title><rect x="549.4" y="693" width="13.5" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="703.5" ></text>
</g>
<g >
<title>netif_receive_skb_internal (1 samples, 0.57%)</title><rect x="798.9" y="245" width="6.8" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="801.91" y="255.5" ></text>
</g>
<g >
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (66 samples, 37.71%)</title><rect x="131.4" y="853" width="445.0" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="134.37" y="863.5" >Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, ..</text>
</g>
<g >
<title>::invoke0 (1 samples, 0.57%)</title><rect x="947.3" y="901" width="6.7" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="950.26" y="911.5" ></text>
</g>
<g >
<title>Thread::call_run() (4 samples, 2.29%)</title><rect x="1082.1" y="933" width="27.0" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="1085.11" y="943.5" >T..</text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.57%)</title><rect x="738.2" y="773" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="741.23" y="783.5" ></text>
</g>
<g >
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.57%)</title><rect x="16.7" y="709" width="6.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="19.74" y="719.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/SerializerProvider (1 samples, 0.57%)</title><rect x="1115.8" y="613" width="6.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1118.83" y="623.5" ></text>
</g>
<g >
<title>do_softirq.part.18 (2 samples, 1.14%)</title><rect x="792.2" y="597" width="13.5" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="795.17" y="607.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="556.2" y="581" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="591.5" ></text>
</g>
<g >
<title>br_pass_frame_up (1 samples, 0.57%)</title><rect x="792.2" y="261" width="6.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="795.17" y="271.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.57%)</title><rect x="1163.0" y="757" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1166.03" y="767.5" ></text>
</g>
<g >
<title>Dependencies::assert_evol_method(ciMethod*) (1 samples, 0.57%)</title><rect x="117.9" y="821" width="6.7" height="15.0" fill="rgb(209,209,62)" rx="2" ry="2" />
<text  x="120.89" y="831.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.57%)</title><rect x="1014.7" y="693" width="6.7" height="15.0" fill="rgb(227,127,0)" rx="2" ry="2" />
<text  x="1017.69" y="703.5" ></text>
</g>
<g >
<title>::iterator (1 samples, 0.57%)</title><rect x="940.5" y="933" width="6.8" height="15.0" fill="rgb(204,204,60)" rx="2" ry="2" />
<text  x="943.51" y="943.5" ></text>
</g>
<g >
<title>::record (1 samples, 0.57%)</title><rect x="718.0" y="949" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="721.00" y="959.5" ></text>
</g>
<g >
<title>- (1 samples, 0.57%)</title><rect x="906.8" y="885" width="6.7" height="15.0" fill="rgb(200,200,200)" rx="2" ry="2" />
<text  x="909.80" y="895.5" ></text>
</g>
<g >
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.57%)</title><rect x="529.2" y="789" width="6.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="532.20" y="799.5" ></text>
</g>
<g >
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 2.86%)</title><rect x="16.7" y="773" width="33.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="19.74" y="783.5" >Gr..</text>
</g>
<g >
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.57%)</title><rect x="556.2" y="421" width="6.7" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="559.17" y="431.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/SelectorImpl (3 samples, 1.71%)</title><rect x="583.1" y="949" width="20.3" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="586.14" y="959.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1136.1" y="677" width="20.2" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1139.06" y="687.5" ></text>
</g>
<g >
<title>IndexSet::initialize(unsigned int) (1 samples, 0.57%)</title><rect x="178.6" y="773" width="6.7" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="181.57" y="783.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.12 (1 samples, 0.57%)</title><rect x="1007.9" y="741" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="1010.94" y="751.5" ></text>
</g>
<g >
<title>Parse::return_current(Node*) (1 samples, 0.57%)</title><rect x="549.4" y="85" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="95.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.57%)</title><rect x="906.8" y="277" width="6.7" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="909.80" y="287.5" ></text>
</g>
<g >
<title>ep_poll (1 samples, 0.57%)</title><rect x="738.2" y="821" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="741.23" y="831.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.57%)</title><rect x="1028.2" y="821" width="6.7" height="15.0" fill="rgb(244,144,0)" rx="2" ry="2" />
<text  x="1031.17" y="831.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.57%)</title><rect x="825.9" y="629" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="828.89" y="639.5" ></text>
</g>
<g >
<title>::park (1 samples, 0.57%)</title><rect x="805.7" y="917" width="6.7" height="15.0" fill="rgb(207,207,61)" rx="2" ry="2" />
<text  x="808.66" y="927.5" ></text>
</g>
<g >
<title>Ljava/util/concurrent/locks/ReentrantLock$FairSync (1 samples, 0.57%)</title><rect x="839.4" y="965" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="842.37" y="975.5" ></text>
</g>
<g >
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.57%)</title><rect x="353.9" y="757" width="6.7" height="15.0" fill="rgb(223,223,67)" rx="2" ry="2" />
<text  x="356.89" y="767.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 4.57%)</title><rect x="758.5" y="965" width="53.9" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="761.46" y="975.5" >[unkn..</text>
</g>
<g >
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (1 samples, 0.57%)</title><rect x="57.2" y="741" width="6.7" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="60.20" y="751.5" ></text>
</g>
<g >
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.57%)</title><rect x="63.9" y="789" width="6.8" height="15.0" fill="rgb(202,202,59)" rx="2" ry="2" />
<text  x="66.94" y="799.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.57%)</title><rect x="906.8" y="581" width="6.7" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="909.80" y="591.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="773" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="783.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="960.7" y="917" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="963.74" y="927.5" ></text>
</g>
<g >
<title>IndexSetIterator::advance_and_next() (1 samples, 0.57%)</title><rect x="347.1" y="757" width="6.8" height="15.0" fill="rgb(221,221,66)" rx="2" ry="2" />
<text  x="350.14" y="767.5" ></text>
</g>
<g >
<title>Thread::call_run() (2 samples, 1.14%)</title><rect x="691.0" y="933" width="13.5" height="15.0" fill="rgb(211,211,63)" rx="2" ry="2" />
<text  x="694.03" y="943.5" ></text>
</g>
<g >
<title>Interpreter (6 samples, 3.43%)</title><rect x="610.1" y="821" width="40.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="613.11" y="831.5" >Int..</text>
</g>
<g >
<title>ep_poll (1 samples, 0.57%)</title><rect x="866.3" y="837" width="6.8" height="15.0" fill="rgb(239,139,0)" rx="2" ry="2" />
<text  x="869.34" y="847.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/EPoll (1 samples, 0.57%)</title><rect x="751.7" y="965" width="6.8" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="754.71" y="975.5" ></text>
</g>
<g >
<title>Lcom/fasterxml/jackson/databind/SerializerProvider (1 samples, 0.57%)</title><rect x="1115.8" y="661" width="6.8" height="15.0" fill="rgb(94,241,94)" rx="2" ry="2" />
<text  x="1118.83" y="671.5" ></text>
</g>
<g >
<title>[Missed User Stack] (1 samples, 0.57%)</title><rect x="1183.3" y="965" width="6.7" height="15.0" fill="rgb(246,117,117)" rx="2" ry="2" />
<text  x="1186.26" y="975.5" ></text>
</g>
<g >
<title>Parse::do_one_block() (1 samples, 0.57%)</title><rect x="549.4" y="117" width="6.8" height="15.0" fill="rgb(214,214,64)" rx="2" ry="2" />
<text  x="552.43" y="127.5" ></text>
</g>
<g >
<title>http-nio-8080-C (1 samples, 0.57%)</title><rect x="704.5" y="981" width="6.8" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="707.51" y="991.5" ></text>
</g>
<g >
<title>monitorenter_nofpu Runtime1 stub (1 samples, 0.57%)</title><rect x="1102.3" y="757" width="6.8" height="15.0" fill="rgb(235,100,100)" rx="2" ry="2" />
<text  x="1105.34" y="767.5" ></text>
</g>
<g >
<title>Interpreter (6 samples, 3.43%)</title><rect x="610.1" y="789" width="40.5" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="613.11" y="799.5" >Int..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="1001.2" y="837" width="6.7" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="1004.20" y="847.5" ></text>
</g>
<g >
<title>Lorg/apache/http/message/BasicTokenIterator (1 samples, 0.57%)</title><rect x="630.3" y="709" width="6.8" height="15.0" fill="rgb(91,237,91)" rx="2" ry="2" />
<text  x="633.34" y="719.5" ></text>
</g>
<g >
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 2.86%)</title><rect x="16.7" y="741" width="33.8" height="15.0" fill="rgb(222,222,67)" rx="2" ry="2" />
<text  x="19.74" y="751.5" >Gr..</text>
</g>
<g >
<title>Ljava/util/regex/Pattern (1 samples, 0.57%)</title><rect x="1142.8" y="485" width="6.7" height="15.0" fill="rgb(87,234,87)" rx="2" ry="2" />
<text  x="1145.80" y="495.5" ></text>
</g>
<g >
<title>Interpreter (3 samples, 1.71%)</title><rect x="1115.8" y="757" width="20.3" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1118.83" y="767.5" ></text>
</g>
<g >
<title>Lsun/nio/ch/NioSocketImpl (1 samples, 0.57%)</title><rect x="697.8" y="805" width="6.7" height="15.0" fill="rgb(83,230,83)" rx="2" ry="2" />
<text  x="700.77" y="815.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.57%)</title><rect x="866.3" y="821" width="6.8" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="869.34" y="831.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 1.14%)</title><rect x="792.2" y="613" width="13.5" height="15.0" fill="rgb(233,133,0)" rx="2" ry="2" />
<text  x="795.17" y="623.5" ></text>
</g>
<g >
<title>start_thread (3 samples, 1.71%)</title><rect x="812.4" y="965" width="20.2" height="15.0" fill="rgb(237,104,104)" rx="2" ry="2" />
<text  x="815.40" y="975.5" ></text>
</g>
<g >
<title>tcp_poll (1 samples, 0.57%)</title><rect x="738.2" y="741" width="6.8" height="15.0" fill="rgb(237,137,0)" rx="2" ry="2" />
<text  x="741.23" y="751.5" ></text>
</g>
<g >
<title>call_stub (3 samples, 1.71%)</title><rect x="812.4" y="837" width="20.2" height="15.0" fill="rgb(226,89,89)" rx="2" ry="2" />
<text  x="815.40" y="847.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (4 samples, 2.29%)</title><rect x="1136.1" y="885" width="26.9" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="1139.06" y="895.5" >J..</text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="947.3" y="805" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="950.26" y="815.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.57%)</title><rect x="1001.2" y="821" width="6.7" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1004.20" y="831.5" ></text>
</g>
<g >
<title>__pthread_cond_timedwait (3 samples, 1.71%)</title><rect x="657.3" y="869" width="20.2" height="15.0" fill="rgb(233,99,99)" rx="2" ry="2" />
<text  x="660.31" y="879.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1122.6" y="613" width="6.7" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1125.57" y="623.5" ></text>
</g>
<g >
<title>PhiNode::Opcode() const (1 samples, 0.57%)</title><rect x="165.1" y="805" width="6.7" height="15.0" fill="rgb(217,217,65)" rx="2" ry="2" />
<text  x="168.09" y="815.5" ></text>
</g>
<g >
<title>::record (1 samples, 0.57%)</title><rect x="900.1" y="949" width="6.7" height="15.0" fill="rgb(206,206,61)" rx="2" ry="2" />
<text  x="903.06" y="959.5" ></text>
</g>
<g >
<title>JavaCalls::call_virtual(JavaValue*, Handle, Klass*, Symbol*, Symbol*, Thread*) (2 samples, 1.14%)</title><rect x="691.0" y="885" width="13.5" height="15.0" fill="rgb(203,203,60)" rx="2" ry="2" />
<text  x="694.03" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_swapgs (1 samples, 0.57%)</title><rect x="738.2" y="869" width="6.8" height="15.0" fill="rgb(245,145,0)" rx="2" ry="2" />
<text  x="741.23" y="879.5" ></text>
</g>
<g >
<title>Interpreter (1 samples, 0.57%)</title><rect x="1176.5" y="805" width="6.8" height="15.0" fill="rgb(243,112,112)" rx="2" ry="2" />
<text  x="1179.51" y="815.5" ></text>
</g>
</g>
</svg>
